{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\React-Medi-App\\\\src\\\\Components\\\\AddReminder4.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"; // Custom Components\n\nimport TimeInput from \"./TimeInput.js\"; // This gets the number of timePicker inputs that need to be created\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getNumber() {\n  const reminderList = localStorage.getItem(\"reminders\");\n  const parsed = JSON.parse(reminderList);\n  const mostRecent = parsed[parsed.length - 1];\n  return mostRecent.timesPerDay;\n}\n\nexport default function AddReminder4() {\n  _s();\n\n  // Styles\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  };\n  const containerSx = {\n    m: 0,\n    pl: 5,\n    pr: 5,\n    width: \"100%\"\n  };\n  const iconButtonSx = {\n    fontSize: 75,\n    ml: 2.5,\n    mr: 2.5\n  };\n  const linkSx = {\n    color: \"#1976d2\"\n  };\n  const stackSx = {\n    mb: 5\n  };\n  const breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder\",\n    sx: linkSx,\n    children: \"Name & Dose\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder/days\",\n    sx: linkSx,\n    children: \"Days of Week\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder/days/nums\",\n    sx: linkSx,\n    children: \"# of Times\"\n  }, \"3\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"text.primary\",\n    children: \"Times\"\n  }, \"4\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this)];\n  const allTimes = [];\n  const {\n    control,\n    handleSubmit,\n    setValue,\n    register,\n    getValues\n  } = useForm();\n\n  for (let i = 0; i < getNumber(); i++) {\n    allTimes.push( /*#__PURE__*/_jsxDEV(TimeInput, {\n      setValue: setValue,\n      getValues: getValues,\n      register: register,\n      control: control,\n      counter: i + 1\n    }, \"TimeInputs\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this));\n  }\n\n  const onSubmit = data => {\n    if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\n      localStorage.setItem(\"reminders\", JSON.stringify([{\n        id: 0,\n        medication: \"\",\n        dose: \"\",\n        days: [],\n        timesPerDay: 0,\n        times: [],\n        submitted: false\n      }]));\n    }\n\n    const reminderList = localStorage.getItem(\"reminders\");\n    const parsed = JSON.parse(reminderList);\n    const mostRecent = parsed[parsed.length - 1];\n    const times = [];\n    Object.values(data).forEach(value => {\n      const val = value.toString();\n      const sliced = val.slice(16, 21);\n      let finalTime;\n\n      if (sliced.charAt(0) === \"0\" && sliced.charAt(1) === \"0\") {\n        // this catches 12:00 - 12:59 am\n        finalTime = \"12\" + sliced.slice(2) + \" am\";\n      } else if (sliced.charAt(0) === \"0\" && sliced.charAt(1) !== \"0\") {\n        // this catches 1:00 - 9:59 am\n        finalTime = sliced.slice(1) + \" am\";\n      } else if (sliced.charAt(0) === \"1\" && (sliced.charAt(1) === \"0\" || sliced.charAt(1) === \"1\")) {\n        // this catches 10:00 - 11:59 am\n        finalTime = sliced + \" am\";\n      } else if (sliced.charAt(0) === \"1\" && sliced.charAt(1) === \"2\") {\n        // this catches 12:00 - 12:59 pm\n        finalTime = sliced + \" pm\";\n      } else {\n        // this catches 1:00 pm and later\n        let newSliced = sliced.slice(0, 2);\n        finalTime = parseInt(newSliced) - 12 + sliced.slice(2) + \" pm\";\n      }\n\n      times.push(finalTime);\n    });\n    mostRecent.times = times;\n    parsed[parsed.length - 1] = mostRecent;\n    localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n    fetch(\"/add-reminder/days/nums/times/confirmation\").then(() => {\n      window.location = \"/add-reminder/days/nums/times/confirmation\";\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: containerSx,\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: allTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            href: \"/add-reminder/days/nums\",\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddReminder4, \"urC9D8QqeBVa5cfe/F7PRHnPzAk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReminder4;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder4\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/AddReminder4.js"],"names":["React","useForm","ArrowBackIcon","ArrowForwardIcon","Box","Breadcrumbs","Button","Container","Link","LocalizationProvider","NavigateNextIcon","Stack","Typography","AdapterDateFns","TimeInput","getNumber","reminderList","localStorage","getItem","parsed","JSON","parse","mostRecent","length","timesPerDay","AddReminder4","boxSx","mb","width","alignItems","display","flexDirection","containerSx","m","pl","pr","iconButtonSx","fontSize","ml","mr","linkSx","color","stackSx","breadcrumbs","allTimes","control","handleSubmit","setValue","register","getValues","i","push","onSubmit","data","setItem","stringify","id","medication","dose","days","times","submitted","Object","values","forEach","value","val","toString","sliced","slice","finalTime","charAt","newSliced","parseInt","fetch","then","window","location"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n// Material UI Components\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\n\r\n// Custom Components\r\nimport TimeInput from \"./TimeInput.js\";\r\n\r\n// This gets the number of timePicker inputs that need to be created\r\nfunction getNumber() {\r\n    const reminderList = localStorage.getItem(\"reminders\");\r\n    const parsed = JSON.parse(reminderList);\r\n    const mostRecent = parsed[parsed.length - 1];\r\n    return (mostRecent.timesPerDay);\r\n}\r\n\r\nexport default function AddReminder4() {\r\n    // Styles\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    };\r\n\r\n    const containerSx = {\r\n        m: 0,\r\n        pl: 5,\r\n        pr: 5,\r\n        width: \"100%\"\r\n    };\r\n\r\n    const iconButtonSx = {\r\n        fontSize: 75,\r\n        ml: 2.5,\r\n        mr: 2.5\r\n    };\r\n\r\n    const linkSx = {\r\n        color: \"#1976d2\"\r\n    };\r\n\r\n    const stackSx = {\r\n        mb: 5\r\n    };\r\n\r\n    const breadcrumbs = [\r\n        <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\r\n            Name & Dose\r\n        </Link>,\r\n        <Link key=\"2\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days\" sx={linkSx}>\r\n            Days of Week\r\n        </Link>,\r\n        <Link key=\"3\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days/nums\" sx={linkSx}>\r\n            # of Times\r\n        </Link>,\r\n        <Typography key=\"4\" color=\"text.primary\">\r\n            Times\r\n        </Typography>\r\n    ];\r\n\r\n    const allTimes = [];\r\n\r\n    const {control, handleSubmit, setValue, register, getValues} = useForm();\r\n\r\n    for (let i = 0; i < getNumber(); i++) {\r\n        allTimes.push(<TimeInput setValue={setValue} getValues={getValues} register={register} control={control}\r\n                                 counter={i + 1} key={\"TimeInputs\" + i}/>);\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\r\n            localStorage.setItem(\"reminders\", JSON.stringify([{\r\n                id: 0,\r\n                medication: \"\",\r\n                dose: \"\",\r\n                days: [],\r\n                timesPerDay: 0,\r\n                times: [],\r\n                submitted: false\r\n            }]));\r\n        }\r\n\r\n        const reminderList = localStorage.getItem(\"reminders\");\r\n        const parsed = JSON.parse(reminderList);\r\n        const mostRecent = parsed[parsed.length - 1];\r\n        const times = [];\r\n\r\n        Object.values(data).forEach((value) => {\r\n            const val = value.toString();\r\n            const sliced = val.slice(16, 21);\r\n            let finalTime;\r\n\r\n            if (sliced.charAt(0) === \"0\" && sliced.charAt(1) === \"0\") { // this catches 12:00 - 12:59 am\r\n                finalTime = \"12\" + sliced.slice(2) + \" am\";\r\n            } else if (sliced.charAt(0) === \"0\" && sliced.charAt(1) !== \"0\") { // this catches 1:00 - 9:59 am\r\n                finalTime = sliced.slice(1) + \" am\";\r\n            } else if (sliced.charAt(0) === \"1\" && (sliced.charAt(1) === \"0\" || sliced.charAt(1) === \"1\")) { // this catches 10:00 - 11:59 am\r\n                finalTime = sliced + \" am\";\r\n            } else if (sliced.charAt(0) === \"1\" && sliced.charAt(1) === \"2\") { // this catches 12:00 - 12:59 pm\r\n                finalTime = sliced + \" pm\";\r\n            } else { // this catches 1:00 pm and later\r\n                let newSliced = sliced.slice(0, 2);\r\n                finalTime = (parseInt(newSliced) - 12) + sliced.slice(2) + \" pm\";\r\n            }\r\n\r\n            times.push(finalTime);\r\n        });\r\n\r\n        mostRecent.times = times;\r\n\r\n        parsed[parsed.length - 1] = mostRecent;\r\n        localStorage.setItem(\"reminders\", JSON.stringify(parsed));\r\n\r\n        fetch(\"/add-reminder/days/nums/times/confirmation\")\r\n            .then(() => {\r\n                window.location = \"/add-reminder/days/nums/times/confirmation\";\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Container sx={containerSx}>\r\n            <Stack spacing={2} sx={stackSx}>\r\n                <Breadcrumbs\r\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\r\n                    aria-label=\"breadcrumb\"\r\n                >\r\n                    {breadcrumbs}\r\n                </Breadcrumbs>\r\n            </Stack>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Box sx={boxSx}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        {allTimes}\r\n                    </LocalizationProvider>\r\n\r\n                    <Box>\r\n                        <Button href=\"/add-reminder/days/nums\"><ArrowBackIcon sx={iconButtonSx}/></Button>\r\n\r\n                        <Button type=\"submit\"><ArrowForwardIcon sx={iconButtonSx}/></Button>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}