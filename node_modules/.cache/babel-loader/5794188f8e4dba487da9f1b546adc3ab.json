{"ast":null,"code":"import _objectSpread from\"C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as React from\"react\";import{useForm}from\"react-hook-form\";import{yupResolver}from\"@hookform/resolvers/yup\";import*as Yup from\"yup\";// Material UI Components\nimport Box from\"@mui/material/Box\";import Button from\"@mui/material/Button\";import Card from\"@mui/material/Card\";import Container from\"@mui/material/Container\";import Link from\"@mui/material/Link\";import Typography from\"@mui/material/Typography\";import TextField from\"@mui/material/TextField\";// Custom Components\nimport PillLogo from\"./pill.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){var _errors$username,_errors$password;// Styles and SX\nvar boxFormSx={\"& .MuiTextField-root\":{mb:2.5,width:\"100%\"},bgcolor:\"background.paper\"};var boxLinkSx={mt:2};var buttonSx={fontSize:\"17px\",height:\"5.75ch\",mb:2.5,width:\"100%\"};var containerDivStyle={alignItems:\"center\",display:\"flex\",flexDirection:\"column\",justifyContent:\"center\"};var cardSx={bgcolor:\"background.paper\",ml:5,mt:5,mr:5,p:5};var errorSx={mb:2.5};var imgStyle={filter:\"invert(100%) sepia(0%) saturate(0%) hue-rotate(231deg) brightness(103%) contrast(101%)\",height:250};// Form validation using Yup\nvar validationSchema=Yup.object().shape({username:Yup.string().required(\"Username is required\"),password:Yup.string().required(\"Password is required\")});// Form onSubmit\nvar onSubmit=function onSubmit(data){// This is implemented so the error UI for an invalid username/password can be displayed\nif(!(data.username===\"test\"&&data.password===\"pass\")){document.getElementById(\"userPassError\").style.display=\"flex\";}else{document.getElementById(\"userPassError\").style.display=\"none\";}};var _useForm=useForm({resolver:yupResolver(validationSchema)}),errors=_useForm.formState.errors,handleSubmit=_useForm.handleSubmit,register=_useForm.register;return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Box,{sx:containerDivStyle,children:/*#__PURE__*/_jsx(\"img\",{alt:\"Pill Logo\",src:PillLogo,style:imgStyle})}),/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:cardSx,children:[/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(Box,{sx:boxFormSx,children:[/*#__PURE__*/_jsx(TextField,_objectSpread({required:true,error:errors.username?true:false,id:\"username\",label:\"Username\",name:\"username\"},register(\"username\"))),/*#__PURE__*/_jsx(Typography,{color:\"error\",variant:\"inherit\",sx:errorSx,children:(_errors$username=errors.username)===null||_errors$username===void 0?void 0:_errors$username.message}),/*#__PURE__*/_jsx(TextField,_objectSpread({required:true,error:errors.password?true:false,id:\"password\",label:\"Password\",name:\"password\"},register(\"password\"))),/*#__PURE__*/_jsx(Typography,{color:\"error\",variant:\"inherit\",sx:errorSx,children:(_errors$password=errors.password)===null||_errors$password===void 0?void 0:_errors$password.message}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit(onSubmit),size:\"large\",sx:buttonSx,type:\"submit\",variant:\"contained\",children:\"Login\"}),/*#__PURE__*/_jsx(Typography,{color:\"error\",id:\"userPassError\",style:{display:\"none\"},sx:errorSx,variant:\"inherit\",children:\"The username and password are invalid\"})]})}),/*#__PURE__*/_jsx(Box,{sx:boxLinkSx,children:/*#__PURE__*/_jsx(Link,{href:\"/\",underline:\"hover\",children:\"Create an account\"})})]})]});}","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/Login.js"],"names":["React","useForm","yupResolver","Yup","Box","Button","Card","Container","Link","Typography","TextField","Login","boxFormSx","mb","width","bgcolor","boxLinkSx","mt","buttonSx","fontSize","height","containerDivStyle","alignItems","display","flexDirection","justifyContent","cardSx","ml","mr","p","errorSx","imgStyle","filter","validationSchema","object","shape","username","string","required","password","onSubmit","data","document","getElementById","style","resolver","errors","formState","handleSubmit","register","PillLogo","message"],"mappings":"+KAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAAQC,OAAR,KAAsB,iBAAtB,CACA,OAAQC,WAAR,KAA0B,yBAA1B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA;AACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CAEA;yHAGA,cAAe,SAASC,CAAAA,KAAT,EAAiB,uCAC5B;AACA,GAAMC,CAAAA,SAAS,CAAG,CACd,uBAAwB,CAACC,EAAE,CAAE,GAAL,CAAUC,KAAK,CAAE,MAAjB,CADV,CAEdC,OAAO,CAAE,kBAFK,CAAlB,CAKA,GAAMC,CAAAA,SAAS,CAAG,CACdC,EAAE,CAAE,CADU,CAAlB,CAIA,GAAMC,CAAAA,QAAQ,CAAG,CACbC,QAAQ,CAAE,MADG,CAEbC,MAAM,CAAE,QAFK,CAGbP,EAAE,CAAE,GAHS,CAIbC,KAAK,CAAE,MAJM,CAAjB,CAOA,GAAMO,CAAAA,iBAAiB,CAAG,CACtBC,UAAU,CAAE,QADU,CAEtBC,OAAO,CAAE,MAFa,CAGtBC,aAAa,CAAE,QAHO,CAItBC,cAAc,CAAE,QAJM,CAA1B,CAOA,GAAMC,CAAAA,MAAM,CAAG,CACXX,OAAO,CAAE,kBADE,CAEXY,EAAE,CAAE,CAFO,CAGXV,EAAE,CAAE,CAHO,CAIXW,EAAE,CAAE,CAJO,CAKXC,CAAC,CAAE,CALQ,CAAf,CAQA,GAAMC,CAAAA,OAAO,CAAG,CACZjB,EAAE,CAAE,GADQ,CAAhB,CAIA,GAAMkB,CAAAA,QAAQ,CAAG,CACbC,MAAM,CAAE,wFADK,CAEbZ,MAAM,CAAE,GAFK,CAAjB,CAKA;AACA,GAAMa,CAAAA,gBAAgB,CAAG9B,GAAG,CAAC+B,MAAJ,GAAaC,KAAb,CAAmB,CACxCC,QAAQ,CAAEjC,GAAG,CAACkC,MAAJ,GACLC,QADK,CACI,sBADJ,CAD8B,CAGxCC,QAAQ,CAAEpC,GAAG,CAACkC,MAAJ,GACLC,QADK,CACI,sBADJ,CAH8B,CAAnB,CAAzB,CAOA;AACA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CACvB;AACA,GAAI,EAAEA,IAAI,CAACL,QAAL,GAAkB,MAAlB,EAA4BK,IAAI,CAACF,QAAL,GAAkB,MAAhD,CAAJ,CAA6D,CACzDG,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CrB,OAA/C,CAAyD,MAAzD,CACH,CAFD,IAEO,CACHmB,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CrB,OAA/C,CAAyD,MAAzD,CACH,CACJ,CAPD,CASA,aAIItB,OAAO,CAAC,CACR4C,QAAQ,CAAE3C,WAAW,CAAC+B,gBAAD,CADb,CAAD,CAJX,CACgBa,MADhB,UACIC,SADJ,CACgBD,MADhB,CAEIE,YAFJ,UAEIA,YAFJ,CAGIC,QAHJ,UAGIA,QAHJ,CAQA,mBACI,MAAC,SAAD,yBACI,KAAC,GAAD,EAAK,EAAE,CAAE5B,iBAAT,uBACI,YAAK,GAAG,CAAC,WAAT,CAAqB,GAAG,CAAE6B,QAA1B,CAAoC,KAAK,CAAEnB,QAA3C,EADJ,EADJ,cAKI,MAAC,IAAD,EAAM,OAAO,CAAC,UAAd,CAAyB,EAAE,CAAEL,MAA7B,wBACI,mCACI,MAAC,GAAD,EACI,EAAE,CAAEd,SADR,wBAGI,KAAC,SAAD,gBACI,QAAQ,KADZ,CAEI,KAAK,CAAEkC,MAAM,CAACV,QAAP,CAAkB,IAAlB,CAAyB,KAFpC,CAGI,EAAE,CAAC,UAHP,CAII,KAAK,CAAC,UAJV,CAKI,IAAI,CAAC,UALT,EAMQa,QAAQ,CAAC,UAAD,CANhB,EAHJ,cAYI,KAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,CAA0B,OAAO,CAAC,SAAlC,CAA4C,EAAE,CAAEnB,OAAhD,4BACKgB,MAAM,CAACV,QADZ,2CACK,iBAAiBe,OADtB,EAZJ,cAgBI,KAAC,SAAD,gBACI,QAAQ,KADZ,CAEI,KAAK,CAAEL,MAAM,CAACP,QAAP,CAAkB,IAAlB,CAAyB,KAFpC,CAGI,EAAE,CAAC,UAHP,CAII,KAAK,CAAC,UAJV,CAKI,IAAI,CAAC,UALT,EAMQU,QAAQ,CAAC,UAAD,CANhB,EAhBJ,cAyBI,KAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,CAA0B,OAAO,CAAC,SAAlC,CAA4C,EAAE,CAAEnB,OAAhD,4BACKgB,MAAM,CAACP,QADZ,2CACK,iBAAiBY,OADtB,EAzBJ,cA6BI,KAAC,MAAD,EAAQ,OAAO,CAAEH,YAAY,CAACR,QAAD,CAA7B,CAAyC,IAAI,CAAC,OAA9C,CAAsD,EAAE,CAAEtB,QAA1D,CAAoE,IAAI,CAAC,QAAzE,CACQ,OAAO,CAAC,WADhB,mBA7BJ,cAgCI,KAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,CAA0B,EAAE,CAAC,eAA7B,CAA6C,KAAK,CAAE,CAACK,OAAO,CAAE,MAAV,CAApD,CAAuE,EAAE,CAAEO,OAA3E,CACY,OAAO,CAAC,SADpB,mDAhCJ,GADJ,EADJ,cAyCI,KAAC,GAAD,EAAK,EAAE,CAAEd,SAAT,uBACI,KAAC,IAAD,EAAM,IAAI,CAAC,GAAX,CAAe,SAAS,CAAC,OAAzB,UACK,mBADL,EADJ,EAzCJ,GALJ,GADJ,CAuDH","sourcesContent":["import * as React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\n// Custom Components\r\nimport PillLogo from \"./pill.svg\";\r\n\r\nexport default function Login() {\r\n    // Styles and SX\r\n    const boxFormSx = {\r\n        \"& .MuiTextField-root\": {mb: 2.5, width: \"100%\"},\r\n        bgcolor: \"background.paper\"\r\n    };\r\n\r\n    const boxLinkSx = {\r\n        mt: 2\r\n    };\r\n\r\n    const buttonSx = {\r\n        fontSize: \"17px\",\r\n        height: \"5.75ch\",\r\n        mb: 2.5,\r\n        width: \"100%\"\r\n    };\r\n\r\n    const containerDivStyle = {\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    };\r\n\r\n    const cardSx = {\r\n        bgcolor: \"background.paper\",\r\n        ml: 5,\r\n        mt: 5,\r\n        mr: 5,\r\n        p: 5\r\n    };\r\n\r\n    const errorSx = {\r\n        mb: 2.5\r\n    };\r\n\r\n    const imgStyle = {\r\n        filter: \"invert(100%) sepia(0%) saturate(0%) hue-rotate(231deg) brightness(103%) contrast(101%)\",\r\n        height: 250\r\n    };\r\n\r\n    // Form validation using Yup\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Username is required\"),\r\n        password: Yup.string()\r\n            .required(\"Password is required\")\r\n    });\r\n\r\n    // Form onSubmit\r\n    const onSubmit = (data) => {\r\n        // This is implemented so the error UI for an invalid username/password can be displayed\r\n        if (!(data.username === \"test\" && data.password === \"pass\")) {\r\n            document.getElementById(\"userPassError\").style.display = \"flex\";\r\n        } else {\r\n            document.getElementById(\"userPassError\").style.display = \"none\";\r\n        }\r\n    };\r\n\r\n    const {\r\n        formState: {errors},\r\n        handleSubmit,\r\n        register\r\n    } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Box sx={containerDivStyle}>\r\n                <img alt=\"Pill Logo\" src={PillLogo} style={imgStyle}/>\r\n            </Box>\r\n\r\n            <Card variant=\"outlined\" sx={cardSx}>\r\n                <form>\r\n                    <Box\r\n                        sx={boxFormSx}\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            error={errors.username ? true : false}\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            {...register(\"username\")}\r\n                        />\r\n\r\n                        <Typography color=\"error\" variant=\"inherit\" sx={errorSx}>\r\n                            {errors.username?.message}\r\n                        </Typography>\r\n\r\n                        <TextField\r\n                            required\r\n                            error={errors.password ? true : false}\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            {...register(\"password\")}\r\n                        />\r\n\r\n                        <Typography color=\"error\" variant=\"inherit\" sx={errorSx}>\r\n                            {errors.password?.message}\r\n                        </Typography>\r\n\r\n                        <Button onClick={handleSubmit(onSubmit)} size=\"large\" sx={buttonSx} type=\"submit\"\r\n                                variant=\"contained\">Login</Button>\r\n\r\n                        <Typography color=\"error\" id=\"userPassError\" style={{display: \"none\"}} sx={errorSx}\r\n                                    variant=\"inherit\">\r\n                            The username and password are invalid\r\n                        </Typography>\r\n                    </Box>\r\n                </form>\r\n\r\n                <Box sx={boxLinkSx}>\r\n                    <Link href=\"/\" underline=\"hover\">\r\n                        {\"Create an account\"}\r\n                    </Link>\r\n                </Box>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}