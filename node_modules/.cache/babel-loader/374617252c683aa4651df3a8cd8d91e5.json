{"ast":null,"code":"var _jsxFileName = \"/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/AddReminder2.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\"; // Custom Components\n\nimport DaysInput from \"./DaysInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initOptions = [{\n  label: \"Every day\",\n  disabled: false\n}, {\n  label: \"Sunday\",\n  disabled: false\n}, {\n  label: \"Monday\",\n  disabled: false\n}, {\n  label: \"Tuesday\",\n  disabled: false\n}, {\n  label: \"Wednesday\",\n  disabled: false\n}, {\n  label: \"Thursday\",\n  disabled: false\n}, {\n  label: \"Friday\",\n  disabled: false\n}, {\n  label: \"Saturday\",\n  disabled: false\n}]; // An outline of this solution was provided to me here: https://stackoverflow.com/questions/69878586/how-can-i-validate-an-autocomplete-multiple-textfield-using-react-hook-form-and\n\nconst validationSchema = Yup.object().shape({\n  daysOfWeek: Yup.array().of(Yup.object().shape({\n    label: Yup.string(),\n    disabled: Yup.boolean()\n  })).min(1, \"Days of the week are required\")\n});\nexport default function AddReminder2() {\n  _s();\n\n  // Styles\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    ml: \"50px\",\n    mr: \"50px\"\n  };\n  const iconButtonSx = {\n    fontSize: 75,\n    ml: 2.5,\n    mr: 2.5\n  };\n  const linkSx = {\n    color: \"#1976d2\"\n  };\n  const stackSx = {\n    mb: 5\n  };\n  const typographySx = {\n    mb: 5,\n    textAlign: \"center\"\n  };\n  const breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder\",\n    sx: linkSx,\n    children: \"Name & Dose\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"text.primary\",\n    children: \"Days of Week\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this)];\n  const {\n    handleSubmit,\n    control,\n    formState\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    // This saves the reminder into a local session storage for the purposes of displaying the reminders on another page.\n    // If I were going to create a deployed version of the app, I would create a DB and save the data there.\n    // I also set this condition --> localStorage.getItem(\"reminders\").length < 2 --> because if the array is empty, the length === 2\n    if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\n      localStorage.setItem(\"reminders\", JSON.stringify([{\n        id: 0,\n        medication: \"\",\n        dose: \"\",\n        days: [],\n        timesPerDay: 0,\n        times: [],\n        submitted: false\n      }]));\n    }\n\n    const reminderList = localStorage.getItem(\"reminders\");\n    const parsed = JSON.parse(reminderList);\n    const mostRecent = parsed[parsed.length - 1];\n    const daysArr = []; // The data for the days is stored in an object that contains a key, daysOfWeek. This key's value is an array of objects in the same format as initOptions\n\n    for (let i = 0; i < data.daysOfWeek.length; i++) {\n      daysArr.push(data.daysOfWeek[i].label);\n    }\n\n    mostRecent.days = daysArr;\n    parsed[parsed.length - 1] = mostRecent;\n    localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n    fetch(\"http://localhost:3000/add-reminder/days/nums\").then(resp => {\n      window.location = \"http://localhost:3000/add-reminder/days/nums\";\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: typographySx,\n      variant: \"h4\",\n      children: \"Which days of the week do you take your medication?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(DaysInput, {\n          initOptions: initOptions,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            href: \"/add-reminder\",\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !formState.isValid,\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddReminder2, \"qw4uJ56/71qY3KYVVBgBKHcMt38=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReminder2;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder2\");","map":{"version":3,"sources":["/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/AddReminder2.js"],"names":["React","useForm","yupResolver","Yup","ArrowBackIcon","ArrowForwardIcon","Box","Breadcrumbs","Button","Container","Link","NavigateNextIcon","Stack","Typography","DaysInput","initOptions","label","disabled","validationSchema","object","shape","daysOfWeek","array","of","string","boolean","min","AddReminder2","boxSx","mb","width","alignItems","display","flexDirection","ml","mr","iconButtonSx","fontSize","linkSx","color","stackSx","typographySx","textAlign","breadcrumbs","handleSubmit","control","formState","mode","resolver","onSubmit","data","localStorage","getItem","length","setItem","JSON","stringify","id","medication","dose","days","timesPerDay","times","submitted","reminderList","parsed","parse","mostRecent","daysArr","i","push","fetch","then","resp","window","location","isValid"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\n// Material UI Components\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\n\n// Custom Components\nimport DaysInput from \"./DaysInput.js\";\n\nconst initOptions = [\n    {label: \"Every day\", disabled: false},\n    {label: \"Sunday\", disabled: false},\n    {label: \"Monday\", disabled: false},\n    {label: \"Tuesday\", disabled: false},\n    {label: \"Wednesday\", disabled: false},\n    {label: \"Thursday\", disabled: false},\n    {label: \"Friday\", disabled: false},\n    {label: \"Saturday\", disabled: false}\n];\n\n// An outline of this solution was provided to me here: https://stackoverflow.com/questions/69878586/how-can-i-validate-an-autocomplete-multiple-textfield-using-react-hook-form-and\nconst validationSchema = Yup.object().shape({\n    daysOfWeek: Yup.array()\n        .of(\n            Yup.object().shape({\n                label: Yup.string(),\n                disabled: Yup.boolean()\n            })\n        )\n        .min(1, \"Days of the week are required\")\n});\n\nexport default function AddReminder2() {\n    // Styles\n    const boxSx = {\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        ml: \"50px\",\n        mr: \"50px\",\n    };\n\n    const iconButtonSx = {\n        fontSize: 75,\n        ml: 2.5,\n        mr: 2.5\n    };\n\n    const linkSx = {\n        color: \"#1976d2\"\n    };\n\n    const stackSx = {\n        mb: 5\n    };\n\n    const typographySx = {\n        mb: 5,\n        textAlign: \"center\"\n    };\n\n    const breadcrumbs = [\n        <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\n            Name & Dose\n        </Link>,\n        <Typography key=\"2\" color=\"text.primary\">\n            Days of Week\n        </Typography>\n    ];\n\n    const {handleSubmit, control, formState} = useForm({\n        mode: \"onChange\",\n        resolver: yupResolver(validationSchema)\n    });\n\n    const onSubmit = (data) => {\n        // This saves the reminder into a local session storage for the purposes of displaying the reminders on another page.\n        // If I were going to create a deployed version of the app, I would create a DB and save the data there.\n        // I also set this condition --> localStorage.getItem(\"reminders\").length < 2 --> because if the array is empty, the length === 2\n        if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\n            localStorage.setItem(\"reminders\", JSON.stringify([{\n                id: 0,\n                medication: \"\",\n                dose: \"\",\n                days: [],\n                timesPerDay: 0,\n                times: [],\n                submitted: false\n            }]));\n        }\n\n        const reminderList = localStorage.getItem(\"reminders\");\n        const parsed = JSON.parse(reminderList);\n        const mostRecent = parsed[parsed.length - 1];\n        const daysArr = [];\n\n        // The data for the days is stored in an object that contains a key, daysOfWeek. This key's value is an array of objects in the same format as initOptions\n        for (let i = 0; i < data.daysOfWeek.length; i++) {\n            daysArr.push(data.daysOfWeek[i].label);\n        }\n\n        mostRecent.days = daysArr;\n        parsed[parsed.length - 1] = mostRecent;\n        localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n\n        fetch(\"http://localhost:3000/add-reminder/days/nums\")\n            .then((resp) => {\n                window.location = \"http://localhost:3000/add-reminder/days/nums\";\n            });\n    };\n\n    return (\n        <Container>\n            <Stack spacing={2} sx={stackSx}>\n                <Breadcrumbs\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\n                    aria-label=\"breadcrumb\"\n                >\n                    {breadcrumbs}\n                </Breadcrumbs>\n            </Stack>\n\n            <Typography sx={typographySx} variant=\"h4\">\n                Which days of the week do you take your medication?\n            </Typography>\n\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\n                <Box sx={boxSx}>\n                    <DaysInput initOptions={initOptions} control={control}/>\n\n                    <Box>\n                        <Button href=\"/add-reminder\"><ArrowBackIcon sx={iconButtonSx}/></Button>\n\n                        <Button disabled={!formState.isValid}\n                                type=\"submit\"><ArrowForwardIcon sx={iconButtonSx}/></Button>\n                    </Box>\n                </Box>\n            </form>\n        </Container>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}