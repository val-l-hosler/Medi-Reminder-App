{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Add Reminder\\\\AddReminder4.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { v4 as uuidv4 } from \"uuid\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"; // Custom Components\n\nimport TimeInput from \"../Inputs/TimeInput.js\"; // Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boxSx = {\n  \"& .MuiTextField-root\": {\n    mb: 5,\n    width: \"100%\"\n  },\n  alignItems: \"center\",\n  display: \"flex\",\n  flexDirection: \"column\"\n};\nconst containerSx = {\n  mb: 5,\n  mt: 5,\n  pl: 5,\n  pr: 5,\n  width: \"100%\"\n};\nconst iconButtonSx = {\n  fontSize: 75,\n  ml: 1.5,\n  mr: 1.5\n};\nconst linkSx = {\n  color: \"#1976d2\"\n};\nconst stackSx = {\n  mb: 5\n}; // Components\n\nconst breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n  underline: \"hover\",\n  color: \"inherit\",\n  href: \"/add-reminder\",\n  sx: linkSx,\n  children: \"Name & Dose\"\n}, \"1\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Link, {\n  underline: \"hover\",\n  color: \"inherit\",\n  href: \"/add-reminder/days\",\n  sx: linkSx,\n  children: \"Days of Week\"\n}, \"2\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Link, {\n  underline: \"hover\",\n  color: \"inherit\",\n  href: \"/add-reminder/days/nums\",\n  sx: linkSx,\n  children: \"# of Times\"\n}, \"3\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Typography, {\n  color: \"text.primary\",\n  children: \"Times\"\n}, \"4\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 5\n}, this)]; // Functions\n// This gets the number of timePicker inputs that need to be created\n\nconst getNumber = () => {\n  const reminderList = localStorage.getItem(\"reminders\");\n  const parsed = JSON.parse(reminderList);\n  const latestReminder = parsed[parsed.length - 1];\n  return latestReminder.timesPerDay;\n};\n\nconst onSubmit = data => {\n  const {\n    medication,\n    dose\n  } = data;\n\n  if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\n    localStorage.setItem(\"reminders\", JSON.stringify([{\n      id: uuidv4(),\n      medication,\n      dose,\n      days: [],\n      timesPerDay: 0,\n      time: [],\n      submitted: false\n    }]));\n  }\n\n  const reminderList = localStorage.getItem(\"reminders\");\n  const parsed = JSON.parse(reminderList);\n  const lastReminder = parsed[parsed.length - 1];\n  const times = [];\n  Object.values(data).forEach(value => {\n    const val = value.toString();\n    const sliced = val.slice(16, 21);\n    let finalTime;\n\n    if (sliced.charAt(0) === \"0\" && sliced.charAt(1) === \"0\") {\n      // this catches 12:00 - 12:59 am\n      finalTime = \"12\" + sliced.slice(2) + \" am\";\n    } else if (sliced.charAt(0) === \"0\" && sliced.charAt(1) !== \"0\") {\n      // this catches 1:00 - 9:59 am\n      finalTime = sliced.slice(1) + \" am\";\n    } else if (sliced.charAt(0) === \"1\" && (sliced.charAt(1) === \"0\" || sliced.charAt(1) === \"1\")) {\n      // this catches 10:00 - 11:59 am\n      finalTime = sliced + \" am\";\n    } else if (sliced.charAt(0) === \"1\" && sliced.charAt(1) === \"2\") {\n      // this catches 12:00 - 12:59 pm\n      finalTime = sliced + \" pm\";\n    } else {\n      // this catches 1:00 pm and later\n      const newSliced = sliced.slice(0, 2);\n      finalTime = parseInt(newSliced) - 12 + sliced.slice(2) + \" pm\";\n    }\n\n    times.push(finalTime);\n  });\n  lastReminder.time = times;\n  parsed[parsed.length - 1] = lastReminder;\n  localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n  fetch(\"/add-reminder/days/nums/times/confirmation\").then(() => {\n    window.location = \"/add-reminder/days/nums/times/confirmation\";\n  });\n};\n\nexport default function AddReminder4() {\n  _s();\n\n  const allTimes = [];\n  const {\n    control,\n    handleSubmit,\n    setValue,\n    register,\n    getValues\n  } = useForm();\n\n  for (let i = 0; i < getNumber(); i++) {\n    allTimes.push( /*#__PURE__*/_jsxDEV(TimeInput, {\n      setValue: setValue,\n      getValues: getValues,\n      register: register,\n      control: control,\n      counter: i + 1,\n      variant: \"outlined\"\n    }, \"TimeInputs_\" + uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: containerSx,\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: allTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            href: \"/add-reminder/days/nums\",\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddReminder4, \"urC9D8QqeBVa5cfe/F7PRHnPzAk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReminder4;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder4\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Add Reminder/AddReminder4.js"],"names":["React","useForm","v4","uuidv4","ArrowBackIcon","ArrowForwardIcon","Box","Breadcrumbs","Button","Container","Link","LocalizationProvider","NavigateNextIcon","Stack","Typography","AdapterDateFns","TimeInput","boxSx","mb","width","alignItems","display","flexDirection","containerSx","mt","pl","pr","iconButtonSx","fontSize","ml","mr","linkSx","color","stackSx","breadcrumbs","getNumber","reminderList","localStorage","getItem","parsed","JSON","parse","latestReminder","length","timesPerDay","onSubmit","data","medication","dose","setItem","stringify","id","days","time","submitted","lastReminder","times","Object","values","forEach","value","val","toString","sliced","slice","finalTime","charAt","newSliced","parseInt","push","fetch","then","window","location","AddReminder4","allTimes","control","handleSubmit","setValue","register","getValues","i"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\n// Material UI Components\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\n\r\n// Custom Components\r\nimport TimeInput from \"../Inputs/TimeInput.js\";\r\n\r\n// Styles\r\nconst boxSx = {\r\n    \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n};\r\n\r\nconst containerSx = {\r\n    mb: 5,\r\n    mt: 5,\r\n    pl: 5,\r\n    pr: 5,\r\n    width: \"100%\"\r\n};\r\n\r\nconst iconButtonSx = {\r\n    fontSize: 75,\r\n    ml: 1.5,\r\n    mr: 1.5\r\n};\r\n\r\nconst linkSx = {\r\n    color: \"#1976d2\"\r\n};\r\n\r\nconst stackSx = {\r\n    mb: 5\r\n};\r\n\r\n// Components\r\nconst breadcrumbs = [\r\n    <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\r\n        Name & Dose\r\n    </Link>,\r\n    <Link key=\"2\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days\" sx={linkSx}>\r\n        Days of Week\r\n    </Link>,\r\n    <Link key=\"3\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days/nums\" sx={linkSx}>\r\n        # of Times\r\n    </Link>,\r\n    <Typography key=\"4\" color=\"text.primary\">\r\n        Times\r\n    </Typography>\r\n];\r\n\r\n// Functions\r\n// This gets the number of timePicker inputs that need to be created\r\nconst getNumber = () => {\r\n    const reminderList = localStorage.getItem(\"reminders\");\r\n    const parsed = JSON.parse(reminderList);\r\n    const latestReminder = parsed[parsed.length - 1];\r\n    return (latestReminder.timesPerDay);\r\n};\r\n\r\nconst onSubmit = (data) => {\r\n    const {medication, dose} = data;\r\n\r\n    if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\r\n        localStorage.setItem(\"reminders\", JSON.stringify([{\r\n            id: uuidv4(),\r\n            medication,\r\n            dose,\r\n            days: [],\r\n            timesPerDay: 0,\r\n            time: [],\r\n            submitted: false\r\n        }]));\r\n    }\r\n\r\n    const reminderList = localStorage.getItem(\"reminders\");\r\n    const parsed = JSON.parse(reminderList);\r\n    const lastReminder = parsed[parsed.length - 1];\r\n    const times = [];\r\n\r\n    Object.values(data).forEach((value) => {\r\n        const val = value.toString();\r\n        const sliced = val.slice(16, 21);\r\n        let finalTime;\r\n\r\n        if (sliced.charAt(0) === \"0\" && sliced.charAt(1) === \"0\") { // this catches 12:00 - 12:59 am\r\n            finalTime = \"12\" + sliced.slice(2) + \" am\";\r\n        } else if (sliced.charAt(0) === \"0\" && sliced.charAt(1) !== \"0\") { // this catches 1:00 - 9:59 am\r\n            finalTime = sliced.slice(1) + \" am\";\r\n        } else if (sliced.charAt(0) === \"1\" && (sliced.charAt(1) === \"0\" || sliced.charAt(1) === \"1\")) { // this catches 10:00 - 11:59 am\r\n            finalTime = sliced + \" am\";\r\n        } else if (sliced.charAt(0) === \"1\" && sliced.charAt(1) === \"2\") { // this catches 12:00 - 12:59 pm\r\n            finalTime = sliced + \" pm\";\r\n        } else { // this catches 1:00 pm and later\r\n            const newSliced = sliced.slice(0, 2);\r\n            finalTime = (parseInt(newSliced) - 12) + sliced.slice(2) + \" pm\";\r\n        }\r\n\r\n        times.push(finalTime);\r\n    });\r\n\r\n    lastReminder.time = times;\r\n    parsed[parsed.length - 1] = lastReminder;\r\n    localStorage.setItem(\"reminders\", JSON.stringify(parsed));\r\n\r\n    fetch(\"/add-reminder/days/nums/times/confirmation\")\r\n        .then(() => {\r\n            window.location = \"/add-reminder/days/nums/times/confirmation\";\r\n        });\r\n};\r\n\r\nexport default function AddReminder4() {\r\n    const allTimes = [];\r\n\r\n    const {control, handleSubmit, setValue, register, getValues} = useForm();\r\n\r\n    for (let i = 0; i < getNumber(); i++) {\r\n        allTimes.push(<TimeInput setValue={setValue} getValues={getValues} register={register} control={control}\r\n                                 counter={i + 1} key={\"TimeInputs_\" + uuidv4()} variant={\"outlined\"}/>);\r\n    }\r\n\r\n    return (\r\n        <Container sx={containerSx}>\r\n            <Stack spacing={2} sx={stackSx}>\r\n                <Breadcrumbs\r\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\r\n                    aria-label=\"breadcrumb\"\r\n                >\r\n                    {breadcrumbs}\r\n                </Breadcrumbs>\r\n            </Stack>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <Box sx={boxSx}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        {allTimes}\r\n                    </LocalizationProvider>\r\n\r\n                    <Box>\r\n                        <Button href=\"/add-reminder/days/nums\"><ArrowBackIcon sx={iconButtonSx}/></Button>\r\n\r\n                        <Button type=\"submit\"><ArrowForwardIcon sx={iconButtonSx}/></Button>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}