{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\React-Medi-App\\\\src\\\\Components\\\\AddReminder4.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getIndexes() {\n  let reminderList = localStorage.getItem(\"reminders\");\n  let parsed = JSON.parse(reminderList);\n  const mostRecent = parsed[parsed.length - 1];\n  return mostRecent.timesPerDay;\n}\n\nlet schema = {};\n\nfor (let i = 0; i < getIndexes(); i++) {\n  let key = \"time\" + i;\n  schema[key] = Yup.string().required(\"Times are required\");\n}\n\nconst validationSchema = Yup.object().shape({\n  schema\n});\nexport default function AddReminder4() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // Styles\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    alignItems: \"center\",\n    bgcolor: \"background.paper\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    ml: \"50px\",\n    mr: \"50px\"\n  };\n  const iconButtonSx = {\n    fontSize: 75\n  };\n  const linkSx = {\n    color: \"#1976d2\"\n  };\n  const stackSx = {\n    mb: 10\n  };\n  const typographySx = {\n    mb: 5,\n    textAlign: \"center\"\n  };\n  const breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder\",\n    sx: linkSx,\n    children: \"Name & Dose\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder/days\",\n    sx: linkSx,\n    children: \"Days of Week\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder/days/nums\",\n    sx: linkSx,\n    children: \"# of Times\"\n  }, \"3\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"text.primary\",\n    children: \"Times\"\n  }, \"4\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this)];\n\n  const TimeInputs = params => {\n    _s();\n\n    let name = \"time_\" + params.counter;\n    const [value, setValue] = useState(new Date(\"0000-00-00T00:00:00\"));\n\n    const handleChange = newValue => {\n      setValue(newValue);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: control,\n      render: _ref => {\n        let {\n          field: {\n            ref,\n            ...field\n          },\n          fieldState: {\n            error\n          }\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(TimePicker, { ...field,\n          label: \"Time\",\n          value: value,\n          onChange: handleChange,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            error: !!error,\n            helperText: error === null || error === void 0 ? void 0 : error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this);\n      }\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(TimeInputs, \"KtpyhPNFXwmNyw1iiKo61yATb0g=\");\n\n  const allTimes = [];\n\n  for (let i = 0; i < getIndexes(); i++) {\n    allTimes.push( /*#__PURE__*/_jsxDEV(TimeInputs, {\n      counter: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }, this));\n  }\n\n  const {\n    handleSubmit,\n    control,\n    formState\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: typographySx,\n          variant: \"h4\",\n          children: \"How many times a day do you take your medicine?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: allTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            href: \"/add-reminder/days/nums\",\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !formState.isValid,\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AddReminder4, \"qw4uJ56/71qY3KYVVBgBKHcMt38=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReminder4;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder4\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/AddReminder4.js"],"names":["useState","useForm","Controller","yupResolver","Yup","ArrowBackIcon","ArrowForwardIcon","Box","Breadcrumbs","Button","Container","Link","NavigateNextIcon","Stack","TimePicker","Typography","TextField","getIndexes","reminderList","localStorage","getItem","parsed","JSON","parse","mostRecent","length","timesPerDay","schema","i","key","string","required","validationSchema","object","shape","AddReminder4","boxSx","mb","width","alignItems","bgcolor","display","flexDirection","ml","mr","iconButtonSx","fontSize","linkSx","color","stackSx","typographySx","textAlign","breadcrumbs","TimeInputs","params","name","counter","value","setValue","Date","handleChange","newValue","control","field","ref","fieldState","error","message","allTimes","push","handleSubmit","formState","mode","resolver","onSubmit","data","console","log","AdapterDateFns","isValid"],"mappings":"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","sourcesContent":["import {useState} from \"react\";\r\nimport {useForm, Controller} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TimePicker from \"@mui/lab/TimePicker\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nfunction getIndexes() {\r\n    let reminderList = localStorage.getItem(\"reminders\");\r\n    let parsed = JSON.parse(reminderList);\r\n    const mostRecent = parsed[parsed.length - 1];\r\n    return (mostRecent.timesPerDay);\r\n}\r\n\r\nlet schema = {};\r\n\r\nfor (let i = 0; i < getIndexes(); i++) {\r\n    let key = \"time\" + i;\r\n    schema[key] = Yup.string().required(\"Times are required\");\r\n}\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    schema\r\n});\r\n\r\nexport default function AddReminder4() {\r\n    // Styles\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\r\n        alignItems: \"center\",\r\n        bgcolor: \"background.paper\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        ml: \"50px\",\r\n        mr: \"50px\",\r\n    };\r\n\r\n    const iconButtonSx = {\r\n        fontSize: 75\r\n    };\r\n\r\n    const linkSx = {\r\n        color: \"#1976d2\"\r\n    };\r\n\r\n    const stackSx = {\r\n        mb: 10\r\n    };\r\n\r\n    const typographySx = {\r\n        mb: 5,\r\n        textAlign: \"center\"\r\n    };\r\n\r\n    const breadcrumbs = [\r\n        <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\r\n            Name & Dose\r\n        </Link>,\r\n        <Link key=\"2\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days\" sx={linkSx}>\r\n            Days of Week\r\n        </Link>,\r\n        <Link key=\"3\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days/nums\" sx={linkSx}>\r\n            # of Times\r\n        </Link>,\r\n        <Typography key=\"4\" color=\"text.primary\">\r\n            Times\r\n        </Typography>\r\n    ];\r\n\r\n    const TimeInputs = (params) => {\r\n        let name = \"time_\" + params.counter;\r\n\r\n        const [value, setValue] = useState(new Date(\"0000-00-00T00:00:00\"));\r\n\r\n        const handleChange = (newValue) => {\r\n            setValue(newValue);\r\n        };\r\n\r\n        return (\r\n            <Controller\r\n                key={name}\r\n                name={name}\r\n                control={control}\r\n                render={({field: {ref, ...field}, fieldState: {error}}) => (\r\n                    <TimePicker\r\n                        {...field}\r\n                        label=\"Time\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        renderInput={(params) =>\r\n                            <TextField\r\n                                {...params}\r\n                                error={!!error}\r\n                                helperText={error?.message}/>\r\n                        }\r\n                    />\r\n                )}\r\n            />\r\n        );\r\n    };\r\n\r\n    const allTimes = [];\r\n\r\n    for (let i = 0; i < getIndexes(); i++) {\r\n        allTimes.push(<TimeInputs counter={i}/>);\r\n    }\r\n\r\n    const {handleSubmit, control, formState} = useForm({\r\n        mode: \"onChange\",\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Stack spacing={2} sx={stackSx}>\r\n                <Breadcrumbs\r\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\r\n                    aria-label=\"breadcrumb\"\r\n                >\r\n                    {breadcrumbs}\r\n                </Breadcrumbs>\r\n            </Stack>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <Box sx={boxSx}>\r\n                    <Typography sx={typographySx} variant=\"h4\">\r\n                        How many times a day do you take your medicine?\r\n                    </Typography>\r\n\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        {allTimes}\r\n                    </LocalizationProvider>\r\n\r\n                    <Box>\r\n                        <Button href=\"/add-reminder/days/nums\"><ArrowBackIcon sx={iconButtonSx}/></Button>\r\n\r\n                        <Button disabled={!formState.isValid}\r\n                                type=\"submit\"><ArrowForwardIcon sx={iconButtonSx}/></Button>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}