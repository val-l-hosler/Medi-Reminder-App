{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Registered Reminders\\\\Reminder.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Chip from \"@mui/material/Chip\";\nimport AddIcon from \"@mui/icons-material/AddCircle\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"; // Custom Components\n\nimport ChipList from \"./ChipList\";\nimport DaysInput from \"../Inputs/DaysInput\";\nimport TimeInput from \"../Inputs/TimeInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  days: Yup.array().of(Yup.object().shape({\n    label: Yup.string(),\n    disabled: Yup.boolean()\n  })).min(2, \"Days of the week are required\")\n}); // Styles\n\nconst boxSx = {\n  \"& .MuiTextField-root\": {\n    mb: 5,\n    width: \"100%\"\n  },\n  alignItems: \"center\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  ml: 5,\n  mr: 5\n};\nconst buttonSx = {\n  borderRadius: 0,\n  fontSize: \"17px\",\n  height: \"5.75ch\",\n  width: \"100%\"\n};\nconst cardSx = {\n  bgcolor: \"#eeeeee\",\n  boxShadow: 3,\n  mb: 5,\n  mt: 5\n};\nconst confirmationButtonSx = {\n  borderRadius: 0,\n  fontSize: \"17px\",\n  height: \"5.75ch\",\n  width: \"50%\"\n};\nconst chipSx = {\n  fontSize: 17,\n  mb: 0.75,\n  mr: 1.5,\n  mt: 0.75\n};\nconst dialogBoxSx = {\n  width: \"75vw\"\n};\nconst dialogTitleSx = {\n  p: 3\n};\nconst dialogTypographySx = {\n  mb: 5,\n  ml: 5,\n  mr: 5\n};\nconst iconButtonSx = {\n  position: \"absolute\",\n  right: 8,\n  top: 8,\n  color: theme => theme.palette.grey[500]\n};\nconst typographyChipSx = {\n  m: 1.5\n};\nconst typographySx = {\n  m: 1.5\n};\nexport default function Reminder(_ref) {\n  _s();\n\n  let {\n    parsedList,\n    forceUpdate,\n    reminder\n  } = _ref;\n\n  const getThisReminder = (reminderId, parsedReminders) => {\n    let index;\n\n    for (let i = 0; i < parsedReminders.length; i++) {\n      if (parsedReminders[i].id === reminderId) {\n        index = i;\n        break;\n      }\n    }\n\n    return [parsedReminders[index], index];\n  }; // This handles the add day dialog\n\n\n  const [openAddDay, setOpenAddDay] = useState(false);\n\n  const handleClickAddDay = () => {\n    setOpenAddDay(true);\n  };\n\n  const handleCloseAddDay = () => {\n    setOpenAddDay(false);\n  }; // This needs to be inside the component or else an unmounted component error displays in the console\n  // This controls the add day form\n\n\n  const {\n    control: controlAddDay,\n    handleSubmit: handleSubmitAddDay,\n    formState: formStateAddDay,\n    reset\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema)\n  }); // Function that is triggered when the add day(s) form is submitted\n\n  const addDay = (reminderId, parsedReminders, data) => {\n    const [thisReminder, thisReminderIndex] = getThisReminder(reminderId, parsedReminders);\n    const days = data[\"daysOfWeek\"].map(day => day.label);\n    thisReminder.days = [...days];\n    parsedList[thisReminderIndex] = thisReminder;\n    localStorage.setItem(\"reminders\", JSON.stringify(parsedList)); // This forces the dialog to close\n\n    setOpenAddDay(false); // This forces the reminder list to re-render\n\n    forceUpdate();\n  }; // This handles the add time dialog\n\n\n  const [openAddTime, setOpenAddTime] = useState(false);\n\n  const handleClickAddTime = () => {\n    setOpenAddTime(true);\n  };\n\n  const handleCloseAddTime = () => {\n    setOpenAddTime(false);\n  }; // This controls the add time form\n\n\n  const {\n    control: controlAddTime,\n    handleSubmit: handleSubmitAddTime,\n    setValue: setValueAddTime,\n    register: registerAddTime,\n    getValues: getValuesAddTime\n  } = useForm(); // Function that is triggered when the add time form is submitted\n\n  const addTime = (reminderId, parsedReminders, data) => {\n    const [thisReminder, thisReminderIndex] = getThisReminder(reminderId, parsedReminders);\n    let time;\n    Object.values(data).forEach(value => {\n      const val = value.toString();\n      const sliced = val.slice(16, 21);\n      let finalTime;\n\n      if (sliced.charAt(0) === \"0\" && sliced.charAt(1) === \"0\") {\n        // this catches 12:00 - 12:59 am\n        finalTime = \"12\" + sliced.slice(2) + \" am\";\n      } else if (sliced.charAt(0) === \"0\" && sliced.charAt(1) !== \"0\") {\n        // this catches 1:00 - 9:59 am\n        finalTime = sliced.slice(1) + \" am\";\n      } else if (sliced.charAt(0) === \"1\" && (sliced.charAt(1) === \"0\" || sliced.charAt(1) === \"1\")) {\n        // this catches 10:00 - 11:59 am\n        finalTime = sliced + \" am\";\n      } else if (sliced.charAt(0) === \"1\" && sliced.charAt(1) === \"2\") {\n        // this catches 12:00 - 12:59 pm\n        finalTime = sliced + \" pm\";\n      } else {\n        // this catches 1:00 pm and later\n        const newSliced = sliced.slice(0, 2);\n        finalTime = parseInt(newSliced) - 12 + sliced.slice(2) + \" pm\";\n      }\n\n      time = finalTime;\n    });\n    thisReminder.times = [...thisReminder.times, time];\n    parsedList[thisReminderIndex] = thisReminder;\n    localStorage.setItem(\"reminders\", JSON.stringify(parsedList)); // This forces the dialog to close\n\n    setOpenAddTime(false); // This forces the reminder list to re-render\n\n    forceUpdate();\n  }; // This handles the delete medication confirmation dialog\n\n\n  const [openDelete, setOpenDelete] = useState(false);\n\n  const handleClickOpenDelete = () => {\n    setOpenDelete(true);\n  };\n\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n  }; // Function for the delete reminder button\n\n\n  const deleteReminder = (reminderId, parsedReminders) => {\n    const [, thisReminderIndex] = getThisReminder(reminderId, parsedReminders);\n\n    if (parsedReminders.length > 0) {\n      // This removes the appropriate index of the array of reminder objects\n      parsedReminders.splice(thisReminderIndex, 1);\n    } else {\n      parsedReminders = [];\n    }\n\n    localStorage.setItem(\"reminders\", JSON.stringify(parsedReminders)); // This forces the dialog to close\n\n    setOpenDelete(false); // This forces the reminder list to re-render\n\n    forceUpdate();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: cardSx,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: typographySx,\n          variant: \"h5\",\n          children: [\"Medication: \", reminder.medication]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: typographySx,\n          variant: \"h5\",\n          children: [\"Dose: \", reminder.dose]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: typographyChipSx,\n          variant: \"h5\",\n          children: [\"Days: \", /*#__PURE__*/_jsxDEV(ChipList, {\n            parentId: reminder.id,\n            parsedList: parsedList,\n            arr: reminder.days,\n            type: \"days\",\n            forceUpdate: forceUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"primary\",\n            onDelete: handleClickAddDay,\n            deleteIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 90\n            }, this),\n            sx: chipSx,\n            label: \"Add day(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: typographyChipSx,\n          variant: \"h5\",\n          children: [\"Times: \", /*#__PURE__*/_jsxDEV(ChipList, {\n            parentId: reminder.id,\n            parsedList: parsedList,\n            arr: reminder.times,\n            type: \"times\",\n            forceUpdate: forceUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"primary\",\n            onDelete: handleClickAddTime,\n            deleteIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 91\n            }, this),\n            sx: chipSx,\n            label: \"Add time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickOpenDelete,\n        color: \"error\",\n        size: \"large\",\n        sx: buttonSx,\n        variant: \"contained\",\n        children: \"Delete Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      keepMounted: true,\n      open: openAddDay,\n      onClose: handleCloseAddDay,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: dialogTitleSx,\n        children: handleCloseAddDay ? /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          onClick: handleCloseAddDay,\n          sx: iconButtonSx,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: dialogBoxSx,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitAddDay(data => addDay(reminder.id, parsedList, data)),\n          noValidate: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: boxSx,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: dialogTypographySx,\n              variant: \"h5\",\n              children: \"Add day(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DaysInput, {\n              control: controlAddDay,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !formStateAddDay.isDirty,\n              size: \"large\",\n              sx: { ...buttonSx,\n                mb: 5\n              },\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      keepMounted: true,\n      open: openAddTime,\n      onClose: handleCloseAddTime,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: dialogTitleSx,\n        children: handleCloseAddTime ? /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          onClick: handleCloseAddTime,\n          sx: iconButtonSx,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: dialogBoxSx,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitAddTime(data => addTime(reminder.id, parsedList, data)),\n          noValidate: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: boxSx,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: dialogTypographySx,\n              variant: \"h5\",\n              children: \"Add time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDateFns,\n              children: /*#__PURE__*/_jsxDEV(TimeInput, {\n                setValue: setValueAddTime,\n                getValues: getValuesAddTime,\n                register: registerAddTime,\n                control: controlAddTime,\n                counter: \"\",\n                variant: \"outlined\"\n              }, \"AddTime_\" + reminder.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"large\",\n              sx: { ...buttonSx,\n                mb: 5\n              },\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      keepMounted: true,\n      open: openDelete,\n      onClose: handleCloseDelete,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: dialogBoxSx,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            m: 5\n          },\n          children: [\" Do you want to delete the reminder for \", reminder.dose, \" of \", reminder.medication, \"? \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => deleteReminder(reminder.id, parsedList),\n            size: \"large\",\n            sx: confirmationButtonSx,\n            variant: \"contained\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseDelete,\n            color: \"error\",\n            size: \"large\",\n            sx: confirmationButtonSx,\n            variant: \"contained\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reminder, \"0LVJ7mOcqZiXtU8+jJ5msuRCAno=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = Reminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Registered Reminders/Reminder.js"],"names":["React","useState","useForm","yupResolver","Yup","Box","Card","CardContent","Typography","Chip","AddIcon","Button","IconButton","CloseIcon","Dialog","DialogTitle","LocalizationProvider","AdapterDateFns","ChipList","DaysInput","TimeInput","validationSchema","object","shape","days","array","of","label","string","disabled","boolean","min","boxSx","mb","width","alignItems","display","flexDirection","ml","mr","buttonSx","borderRadius","fontSize","height","cardSx","bgcolor","boxShadow","mt","confirmationButtonSx","chipSx","dialogBoxSx","dialogTitleSx","p","dialogTypographySx","iconButtonSx","position","right","top","color","theme","palette","grey","typographyChipSx","m","typographySx","Reminder","parsedList","forceUpdate","reminder","getThisReminder","reminderId","parsedReminders","index","i","length","id","openAddDay","setOpenAddDay","handleClickAddDay","handleCloseAddDay","control","controlAddDay","handleSubmit","handleSubmitAddDay","formState","formStateAddDay","reset","mode","resolver","addDay","data","thisReminder","thisReminderIndex","map","day","localStorage","setItem","JSON","stringify","openAddTime","setOpenAddTime","handleClickAddTime","handleCloseAddTime","controlAddTime","handleSubmitAddTime","setValue","setValueAddTime","register","registerAddTime","getValues","getValuesAddTime","addTime","time","Object","values","forEach","value","val","toString","sliced","slice","finalTime","charAt","newSliced","parseInt","times","openDelete","setOpenDelete","handleClickOpenDelete","handleCloseDelete","deleteReminder","splice","medication","dose","isDirty"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,cAAP,MAA2B,yBAA3B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,gBAAgB,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,IAAI,EAAEpB,GAAG,CAACqB,KAAJ,GACDC,EADC,CAEEtB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACfI,IAAAA,KAAK,EAAEvB,GAAG,CAACwB,MAAJ,EADQ;AAEfC,IAAAA,QAAQ,EAAEzB,GAAG,CAAC0B,OAAJ;AAFK,GAAnB,CAFF,EAODC,GAPC,CAOG,CAPH,EAOM,+BAPN;AADkC,CAAnB,CAAzB,C,CAWA;;AACA,MAAMC,KAAK,GAAG;AACV,0BAAwB;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE;AAAf,GADd;AAEVC,EAAAA,UAAU,EAAE,QAFF;AAGVC,EAAAA,OAAO,EAAE,MAHC;AAIVC,EAAAA,aAAa,EAAE,QAJL;AAKVC,EAAAA,EAAE,EAAE,CALM;AAMVC,EAAAA,EAAE,EAAE;AANM,CAAd;AASA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,YAAY,EAAE,CADD;AAEbC,EAAAA,QAAQ,EAAE,MAFG;AAGbC,EAAAA,MAAM,EAAE,QAHK;AAIbT,EAAAA,KAAK,EAAE;AAJM,CAAjB;AAOA,MAAMU,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE,SADE;AAEXC,EAAAA,SAAS,EAAE,CAFA;AAGXb,EAAAA,EAAE,EAAE,CAHO;AAIXc,EAAAA,EAAE,EAAE;AAJO,CAAf;AAOA,MAAMC,oBAAoB,GAAG;AACzBP,EAAAA,YAAY,EAAE,CADW;AAEzBC,EAAAA,QAAQ,EAAE,MAFe;AAGzBC,EAAAA,MAAM,EAAE,QAHiB;AAIzBT,EAAAA,KAAK,EAAE;AAJkB,CAA7B;AAOA,MAAMe,MAAM,GAAG;AACXP,EAAAA,QAAQ,EAAE,EADC;AAEXT,EAAAA,EAAE,EAAE,IAFO;AAGXM,EAAAA,EAAE,EAAE,GAHO;AAIXQ,EAAAA,EAAE,EAAE;AAJO,CAAf;AAOA,MAAMG,WAAW,GAAG;AAChBhB,EAAAA,KAAK,EAAE;AADS,CAApB;AAIA,MAAMiB,aAAa,GAAG;AAClBC,EAAAA,CAAC,EAAE;AADe,CAAtB;AAIA,MAAMC,kBAAkB,GAAG;AACvBpB,EAAAA,EAAE,EAAE,CADmB;AAEvBK,EAAAA,EAAE,EAAE,CAFmB;AAGvBC,EAAAA,EAAE,EAAE;AAHmB,CAA3B;AAMA,MAAMe,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,UADO;AAEjBC,EAAAA,KAAK,EAAE,CAFU;AAGjBC,EAAAA,GAAG,EAAE,CAHY;AAIjBC,EAAAA,KAAK,EAAGC,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AAJD,CAArB;AAOA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,CAAC,EAAE;AADkB,CAAzB;AAIA,MAAMC,YAAY,GAAG;AACjBD,EAAAA,CAAC,EAAE;AADc,CAArB;AAIA,eAAe,SAASE,QAAT,OAAuD;AAAA;;AAAA,MAArC;AAACC,IAAAA,UAAD;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA;AAA1B,GAAqC;;AAClE,QAAMC,eAAe,GAAG,CAACC,UAAD,EAAaC,eAAb,KAAiC;AACrD,QAAIC,KAAJ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACG,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,UAAIF,eAAe,CAACE,CAAD,CAAf,CAAmBE,EAAnB,KAA0BL,UAA9B,EAA0C;AACtCE,QAAAA,KAAK,GAAGC,CAAR;AACA;AACH;AACJ;;AAED,WAAO,CAACF,eAAe,CAACC,KAAD,CAAhB,EAAyBA,KAAzB,CAAP;AACH,GAXD,CADkE,CAclE;;;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8B5E,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAM6E,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAGA,QAAME,iBAAiB,GAAG,MAAM;AAC5BF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD,CAnBkE,CAuBlE;AACA;;;AACA,QAAM;AACFG,IAAAA,OAAO,EAAEC,aADP;AAEFC,IAAAA,YAAY,EAAEC,kBAFZ;AAGFC,IAAAA,SAAS,EAAEC,eAHT;AAIFC,IAAAA;AAJE,MAKFpF,OAAO,CAAC;AACRqF,IAAAA,IAAI,EAAE,UADE;AAERC,IAAAA,QAAQ,EAAErF,WAAW,CAACkB,gBAAD;AAFb,GAAD,CALX,CAzBkE,CAmClE;;AACA,QAAMoE,MAAM,GAAG,CAACnB,UAAD,EAAaC,eAAb,EAA8BmB,IAA9B,KAAuC;AAClD,UAAM,CAACC,YAAD,EAAeC,iBAAf,IAAoCvB,eAAe,CAACC,UAAD,EAAaC,eAAb,CAAzD;AACA,UAAM/C,IAAI,GAAGkE,IAAI,CAAC,YAAD,CAAJ,CAAmBG,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACnE,KAAlC,CAAb;AACAgE,IAAAA,YAAY,CAACnE,IAAb,GAAoB,CAAC,GAAGA,IAAJ,CAApB;AACA0C,IAAAA,UAAU,CAAC0B,iBAAD,CAAV,GAAgCD,YAAhC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAehC,UAAf,CAAlC,EALkD,CAOlD;;AACAW,IAAAA,aAAa,CAAC,KAAD,CAAb,CARkD,CAUlD;;AACAV,IAAAA,WAAW;AACd,GAZD,CApCkE,CAkDlE;;;AACA,QAAM,CAACgC,WAAD,EAAcC,cAAd,IAAgCnG,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMoG,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAGA,QAAME,kBAAkB,GAAG,MAAM;AAC7BF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD,CAvDkE,CA2DlE;;;AACA,QAAM;AACFpB,IAAAA,OAAO,EAAEuB,cADP;AAEFrB,IAAAA,YAAY,EAAEsB,mBAFZ;AAGFC,IAAAA,QAAQ,EAAEC,eAHR;AAIFC,IAAAA,QAAQ,EAAEC,eAJR;AAKFC,IAAAA,SAAS,EAAEC;AALT,MAMF5G,OAAO,EANX,CA5DkE,CAoElE;;AACA,QAAM6G,OAAO,GAAG,CAACzC,UAAD,EAAaC,eAAb,EAA8BmB,IAA9B,KAAuC;AACnD,UAAM,CAACC,YAAD,EAAeC,iBAAf,IAAoCvB,eAAe,CAACC,UAAD,EAAaC,eAAb,CAAzD;AACA,QAAIyC,IAAJ;AAEAC,IAAAA,MAAM,CAACC,MAAP,CAAcxB,IAAd,EAAoByB,OAApB,CAA6BC,KAAD,IAAW;AACnC,YAAMC,GAAG,GAAGD,KAAK,CAACE,QAAN,EAAZ;AACA,YAAMC,MAAM,GAAGF,GAAG,CAACG,KAAJ,CAAU,EAAV,EAAc,EAAd,CAAf;AACA,UAAIC,SAAJ;;AAEA,UAAIF,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArB,IAA4BH,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArD,EAA0D;AAAE;AACxDD,QAAAA,SAAS,GAAG,OAAOF,MAAM,CAACC,KAAP,CAAa,CAAb,CAAP,GAAyB,KAArC;AACH,OAFD,MAEO,IAAID,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArB,IAA4BH,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArD,EAA0D;AAAE;AAC/DD,QAAAA,SAAS,GAAGF,MAAM,CAACC,KAAP,CAAa,CAAb,IAAkB,KAA9B;AACH,OAFM,MAEA,IAAID,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArB,KAA6BH,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArB,IAA4BH,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAA9E,CAAJ,EAAwF;AAAE;AAC7FD,QAAAA,SAAS,GAAGF,MAAM,GAAG,KAArB;AACH,OAFM,MAEA,IAAIA,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArB,IAA4BH,MAAM,CAACG,MAAP,CAAc,CAAd,MAAqB,GAArD,EAA0D;AAAE;AAC/DD,QAAAA,SAAS,GAAGF,MAAM,GAAG,KAArB;AACH,OAFM,MAEA;AAAE;AACL,cAAMI,SAAS,GAAGJ,MAAM,CAACC,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAlB;AACAC,QAAAA,SAAS,GAAIG,QAAQ,CAACD,SAAD,CAAR,GAAsB,EAAvB,GAA6BJ,MAAM,CAACC,KAAP,CAAa,CAAb,CAA7B,GAA+C,KAA3D;AACH;;AAEDR,MAAAA,IAAI,GAAGS,SAAP;AACH,KAnBD;AAqBA9B,IAAAA,YAAY,CAACkC,KAAb,GAAqB,CAAC,GAAGlC,YAAY,CAACkC,KAAjB,EAAwBb,IAAxB,CAArB;AACA9C,IAAAA,UAAU,CAAC0B,iBAAD,CAAV,GAAgCD,YAAhC;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAehC,UAAf,CAAlC,EA3BmD,CA6BnD;;AACAkC,IAAAA,cAAc,CAAC,KAAD,CAAd,CA9BmD,CAgCnD;;AACAjC,IAAAA,WAAW;AACd,GAlCD,CArEkE,CAyGlE;;;AACA,QAAM,CAAC2D,UAAD,EAAaC,aAAb,IAA8B9H,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAM+H,qBAAqB,GAAG,MAAM;AAChCD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAGA,QAAME,iBAAiB,GAAG,MAAM;AAC5BF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD,CA9GkE,CAkHlE;;;AACA,QAAMG,cAAc,GAAG,CAAC5D,UAAD,EAAaC,eAAb,KAAiC;AACpD,UAAM,GAAGqB,iBAAH,IAAwBvB,eAAe,CAACC,UAAD,EAAaC,eAAb,CAA7C;;AAEA,QAAIA,eAAe,CAACG,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B;AACAH,MAAAA,eAAe,CAAC4D,MAAhB,CAAuBvC,iBAAvB,EAA0C,CAA1C;AACH,KAHD,MAGO;AACHrB,MAAAA,eAAe,GAAG,EAAlB;AACH;;AAEDwB,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe3B,eAAf,CAAlC,EAVoD,CAYpD;;AACAwD,IAAAA,aAAa,CAAC,KAAD,CAAb,CAboD,CAepD;;AACA5D,IAAAA,WAAW;AACd,GAjBD;;AAmBA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEvB,MAAV;AAAA,8BACI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAEoB,YAAhB;AAA8B,UAAA,OAAO,EAAC,IAAtC;AAAA,qCACiBI,QAAQ,CAACgE,UAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,EAAE,EAAEpE,YAAhB;AAA8B,UAAA,OAAO,EAAC,IAAtC;AAAA,+BACWI,QAAQ,CAACiE,IADpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAEvE,gBAAhB;AAAkC,UAAA,OAAO,EAAC,IAA1C;AAAA,4CACU,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEM,QAAQ,CAACO,EAA7B;AAAiC,YAAA,UAAU,EAAET,UAA7C;AAAyD,YAAA,GAAG,EAAEE,QAAQ,CAAC5C,IAAvE;AACU,YAAA,IAAI,EAAE,MADhB;AACwB,YAAA,WAAW,EAAE2C;AADrC;AAAA;AAAA;AAAA;AAAA,kBADV,eAII,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE,SAAb;AAAwB,YAAA,QAAQ,EAAEW,iBAAlC;AAAqD,YAAA,UAAU,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAAjE;AAA6E,YAAA,EAAE,EAAE7B,MAAjF;AACM,YAAA,KAAK,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAcI,QAAC,UAAD;AAAY,UAAA,EAAE,EAAEa,gBAAhB;AAAkC,UAAA,OAAO,EAAC,IAA1C;AAAA,6CACW,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEM,QAAQ,CAACO,EAA7B;AAAiC,YAAA,UAAU,EAAET,UAA7C;AAAyD,YAAA,GAAG,EAAEE,QAAQ,CAACyD,KAAvE;AACU,YAAA,IAAI,EAAE,OADhB;AACyB,YAAA,WAAW,EAAE1D;AADtC;AAAA;AAAA;AAAA;AAAA,kBADX,eAII,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE,SAAb;AAAwB,YAAA,QAAQ,EAAEkC,kBAAlC;AAAsD,YAAA,UAAU,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAAlE;AAA8E,YAAA,EAAE,EAAEpD,MAAlF;AACM,YAAA,KAAK,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAuBI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE+E,qBAAjB;AAAwC,QAAA,KAAK,EAAC,OAA9C;AACQ,QAAA,IAAI,EAAC,OADb;AAEQ,QAAA,EAAE,EAAExF,QAFZ;AAEsB,QAAA,OAAO,EAAC,WAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA8BI,QAAC,MAAD;AACI,MAAA,WAAW,EAAE,IADjB;AAEI,MAAA,IAAI,EAAEoC,UAFV;AAGI,MAAA,OAAO,EAAEG,iBAHb;AAAA,8BAKI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE5B,aAAjB;AAAA,kBACK4B,iBAAiB,gBACd,QAAC,UAAD;AACI,wBAAW,OADf;AAEI,UAAA,OAAO,EAAEA,iBAFb;AAGI,UAAA,EAAE,EAAEzB,YAHR;AAAA,iCAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBADc,GAQd;AATR;AAAA;AAAA;AAAA;AAAA,cALJ,eAiBI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEJ,WAAT;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAEiC,kBAAkB,CAAEO,IAAD,IAAUD,MAAM,CAACrB,QAAQ,CAACO,EAAV,EAAcT,UAAd,EAA0BwB,IAA1B,CAAjB,CAAlC;AAAqF,UAAA,UAAU,MAA/F;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE1D,KAAT;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAEqB,kBAAhB;AAAoC,cAAA,OAAO,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI,QAAC,SAAD;AAAW,cAAA,OAAO,EAAE4B,aAApB;AAAmC,cAAA,OAAO,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,oBALJ,eAOI,QAAC,MAAD;AAAQ,cAAA,QAAQ,EAAE,CAACI,eAAe,CAACiD,OAAnC;AAA4C,cAAA,IAAI,EAAC,OAAjD;AACQ,cAAA,EAAE,EAAE,EAAC,GAAG9F,QAAJ;AAAcP,gBAAAA,EAAE,EAAE;AAAlB,eADZ;AAEQ,cAAA,IAAI,EAAC,QAFb;AAGQ,cAAA,OAAO,EAAC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAkEI,QAAC,MAAD;AACI,MAAA,WAAW,EAAE,IADjB;AAEI,MAAA,IAAI,EAAEkE,WAFV;AAGI,MAAA,OAAO,EAAEG,kBAHb;AAAA,8BAKI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAEnD,aAAjB;AAAA,kBACKmD,kBAAkB,gBACf,QAAC,UAAD;AACI,wBAAW,OADf;AAEI,UAAA,OAAO,EAAEA,kBAFb;AAGI,UAAA,EAAE,EAAEhD,YAHR;AAAA,iCAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBADe,GAQf;AATR;AAAA;AAAA;AAAA;AAAA,cALJ,eAiBI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEJ,WAAT;AAAA,+BACI;AAAM,UAAA,QAAQ,EAAEsD,mBAAmB,CAAEd,IAAD,IAAUqB,OAAO,CAAC3C,QAAQ,CAACO,EAAV,EAAcT,UAAd,EAA0BwB,IAA1B,CAAlB,CAAnC;AACM,UAAA,UAAU,MADhB;AAAA,iCAEI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE1D,KAAT;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,EAAE,EAAEqB,kBAAhB;AAAoC,cAAA,OAAO,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI,QAAC,oBAAD;AAAsB,cAAA,WAAW,EAAEpC,cAAnC;AAAA,qCACI,QAAC,SAAD;AAAW,gBAAA,QAAQ,EAAEyF,eAArB;AAAsC,gBAAA,SAAS,EAAEI,gBAAjD;AACW,gBAAA,QAAQ,EAAEF,eADrB;AACsC,gBAAA,OAAO,EAAEL,cAD/C;AAEW,gBAAA,OAAO,EAAE,EAFpB;AAEuD,gBAAA,OAAO,EAAE;AAFhE,iBAE6B,aAAanC,QAAQ,CAACO,EAFnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ,eAUI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,EAAE,EAAE,EAAC,GAAGnC,QAAJ;AAAcP,gBAAAA,EAAE,EAAE;AAAlB,eAAzB;AAA+C,cAAA,IAAI,EAAC,QAApD;AACQ,cAAA,OAAO,EAAC,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlEJ,eAwGI,QAAC,MAAD;AACI,MAAA,WAAW,EAAE,IADjB;AAEI,MAAA,IAAI,EAAE6F,UAFV;AAGI,MAAA,OAAO,EAAEG,iBAHb;AAAA,6BAKI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE/E,WAAT;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,EAAE,EAAE;AAACa,YAAAA,CAAC,EAAE;AAAJ,WAA7B;AAAA,iEACSK,QAAQ,CAACiE,IADlB,UAC4BjE,QAAQ,CAACgE,UADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMF,cAAc,CAAC9D,QAAQ,CAACO,EAAV,EAAcT,UAAd,CAArC;AACQ,YAAA,IAAI,EAAC,OADb;AAEQ,YAAA,EAAE,EAAElB,oBAFZ;AAEkC,YAAA,OAAO,EAAC,WAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEiF,iBAAjB;AAAoC,YAAA,KAAK,EAAC,OAA1C;AACQ,YAAA,IAAI,EAAC,OADb;AAEQ,YAAA,EAAE,EAAEjF,oBAFZ;AAEkC,YAAA,OAAO,EAAC,WAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAxGJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8HH;;GApQuBiB,Q;UA8BhB/D,O,EAoCAA,O;;;KAlEgB+D,Q","sourcesContent":["import * as React from \"react\";\r\nimport {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport AddIcon from \"@mui/icons-material/AddCircle\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\n\r\n// Custom Components\r\nimport ChipList from \"./ChipList\";\r\nimport DaysInput from \"../Inputs/DaysInput\";\r\nimport TimeInput from \"../Inputs/TimeInput\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    days: Yup.array()\r\n        .of(\r\n            Yup.object().shape({\r\n                label: Yup.string(),\r\n                disabled: Yup.boolean()\r\n            })\r\n        )\r\n        .min(2, \"Days of the week are required\")\r\n});\r\n\r\n// Styles\r\nconst boxSx = {\r\n    \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    ml: 5,\r\n    mr: 5\r\n};\r\n\r\nconst buttonSx = {\r\n    borderRadius: 0,\r\n    fontSize: \"17px\",\r\n    height: \"5.75ch\",\r\n    width: \"100%\"\r\n};\r\n\r\nconst cardSx = {\r\n    bgcolor: \"#eeeeee\",\r\n    boxShadow: 3,\r\n    mb: 5,\r\n    mt: 5\r\n};\r\n\r\nconst confirmationButtonSx = {\r\n    borderRadius: 0,\r\n    fontSize: \"17px\",\r\n    height: \"5.75ch\",\r\n    width: \"50%\"\r\n};\r\n\r\nconst chipSx = {\r\n    fontSize: 17,\r\n    mb: 0.75,\r\n    mr: 1.5,\r\n    mt: 0.75\r\n};\r\n\r\nconst dialogBoxSx = {\r\n    width: \"75vw\"\r\n};\r\n\r\nconst dialogTitleSx = {\r\n    p: 3\r\n};\r\n\r\nconst dialogTypographySx = {\r\n    mb: 5,\r\n    ml: 5,\r\n    mr: 5\r\n};\r\n\r\nconst iconButtonSx = {\r\n    position: \"absolute\",\r\n    right: 8,\r\n    top: 8,\r\n    color: (theme) => theme.palette.grey[500]\r\n};\r\n\r\nconst typographyChipSx = {\r\n    m: 1.5\r\n};\r\n\r\nconst typographySx = {\r\n    m: 1.5\r\n};\r\n\r\nexport default function Reminder({parsedList, forceUpdate, reminder}) {\r\n    const getThisReminder = (reminderId, parsedReminders) => {\r\n        let index;\r\n\r\n        for (let i = 0; i < parsedReminders.length; i++) {\r\n            if (parsedReminders[i].id === reminderId) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return [parsedReminders[index], index];\r\n    };\r\n\r\n    // This handles the add day dialog\r\n    const [openAddDay, setOpenAddDay] = useState(false);\r\n    const handleClickAddDay = () => {\r\n        setOpenAddDay(true);\r\n    };\r\n    const handleCloseAddDay = () => {\r\n        setOpenAddDay(false);\r\n    };\r\n\r\n    // This needs to be inside the component or else an unmounted component error displays in the console\r\n    // This controls the add day form\r\n    const {\r\n        control: controlAddDay,\r\n        handleSubmit: handleSubmitAddDay,\r\n        formState: formStateAddDay,\r\n        reset\r\n    } = useForm({\r\n        mode: \"onChange\",\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    // Function that is triggered when the add day(s) form is submitted\r\n    const addDay = (reminderId, parsedReminders, data) => {\r\n        const [thisReminder, thisReminderIndex] = getThisReminder(reminderId, parsedReminders);\r\n        const days = data[\"daysOfWeek\"].map(day => day.label);\r\n        thisReminder.days = [...days];\r\n        parsedList[thisReminderIndex] = thisReminder;\r\n        localStorage.setItem(\"reminders\", JSON.stringify(parsedList));\r\n\r\n        // This forces the dialog to close\r\n        setOpenAddDay(false);\r\n\r\n        // This forces the reminder list to re-render\r\n        forceUpdate();\r\n    };\r\n\r\n    // This handles the add time dialog\r\n    const [openAddTime, setOpenAddTime] = useState(false);\r\n    const handleClickAddTime = () => {\r\n        setOpenAddTime(true);\r\n    };\r\n    const handleCloseAddTime = () => {\r\n        setOpenAddTime(false);\r\n    };\r\n\r\n    // This controls the add time form\r\n    const {\r\n        control: controlAddTime,\r\n        handleSubmit: handleSubmitAddTime,\r\n        setValue: setValueAddTime,\r\n        register: registerAddTime,\r\n        getValues: getValuesAddTime\r\n    } = useForm();\r\n\r\n    // Function that is triggered when the add time form is submitted\r\n    const addTime = (reminderId, parsedReminders, data) => {\r\n        const [thisReminder, thisReminderIndex] = getThisReminder(reminderId, parsedReminders);\r\n        let time;\r\n\r\n        Object.values(data).forEach((value) => {\r\n            const val = value.toString();\r\n            const sliced = val.slice(16, 21);\r\n            let finalTime;\r\n\r\n            if (sliced.charAt(0) === \"0\" && sliced.charAt(1) === \"0\") { // this catches 12:00 - 12:59 am\r\n                finalTime = \"12\" + sliced.slice(2) + \" am\";\r\n            } else if (sliced.charAt(0) === \"0\" && sliced.charAt(1) !== \"0\") { // this catches 1:00 - 9:59 am\r\n                finalTime = sliced.slice(1) + \" am\";\r\n            } else if (sliced.charAt(0) === \"1\" && (sliced.charAt(1) === \"0\" || sliced.charAt(1) === \"1\")) { // this catches 10:00 - 11:59 am\r\n                finalTime = sliced + \" am\";\r\n            } else if (sliced.charAt(0) === \"1\" && sliced.charAt(1) === \"2\") { // this catches 12:00 - 12:59 pm\r\n                finalTime = sliced + \" pm\";\r\n            } else { // this catches 1:00 pm and later\r\n                const newSliced = sliced.slice(0, 2);\r\n                finalTime = (parseInt(newSliced) - 12) + sliced.slice(2) + \" pm\";\r\n            }\r\n\r\n            time = finalTime;\r\n        });\r\n\r\n        thisReminder.times = [...thisReminder.times, time];\r\n        parsedList[thisReminderIndex] = thisReminder;\r\n        localStorage.setItem(\"reminders\", JSON.stringify(parsedList));\r\n\r\n        // This forces the dialog to close\r\n        setOpenAddTime(false);\r\n\r\n        // This forces the reminder list to re-render\r\n        forceUpdate();\r\n    };\r\n\r\n    // This handles the delete medication confirmation dialog\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const handleClickOpenDelete = () => {\r\n        setOpenDelete(true);\r\n    };\r\n    const handleCloseDelete = () => {\r\n        setOpenDelete(false);\r\n    };\r\n\r\n    // Function for the delete reminder button\r\n    const deleteReminder = (reminderId, parsedReminders) => {\r\n        const [, thisReminderIndex] = getThisReminder(reminderId, parsedReminders);\r\n\r\n        if (parsedReminders.length > 0) {\r\n            // This removes the appropriate index of the array of reminder objects\r\n            parsedReminders.splice(thisReminderIndex, 1);\r\n        } else {\r\n            parsedReminders = [];\r\n        }\r\n\r\n        localStorage.setItem(\"reminders\", JSON.stringify(parsedReminders));\r\n\r\n        // This forces the dialog to close\r\n        setOpenDelete(false);\r\n\r\n        // This forces the reminder list to re-render\r\n        forceUpdate();\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Card sx={cardSx}>\r\n                <CardContent>\r\n                    <Typography sx={typographySx} variant=\"h5\">\r\n                        Medication: {reminder.medication}\r\n                    </Typography>\r\n                    <Typography sx={typographySx} variant=\"h5\">\r\n                        Dose: {reminder.dose}\r\n                    </Typography>\r\n                    <Typography sx={typographyChipSx} variant=\"h5\">\r\n                        Days: <ChipList parentId={reminder.id} parsedList={parsedList} arr={reminder.days}\r\n                                        type={\"days\"} forceUpdate={forceUpdate}/>\r\n                        {/* Note: the onDelete creates the icon in the appropriate spot and there isn't an onAdd option */}\r\n                        <Chip color={\"primary\"} onDelete={handleClickAddDay} deleteIcon={<AddIcon/>} sx={chipSx}\r\n                              label={\"Add day(s)\"}/>\r\n                    </Typography>\r\n                    <Typography sx={typographyChipSx} variant=\"h5\">\r\n                        Times: <ChipList parentId={reminder.id} parsedList={parsedList} arr={reminder.times}\r\n                                         type={\"times\"} forceUpdate={forceUpdate}/>\r\n                        {/* Note: the onDelete creates the icon in the appropriate spot and there isn't an onAdd option */}\r\n                        <Chip color={\"primary\"} onDelete={handleClickAddTime} deleteIcon={<AddIcon/>} sx={chipSx}\r\n                              label={\"Add time\"}/>\r\n                    </Typography>\r\n                </CardContent>\r\n                <Button onClick={handleClickOpenDelete} color=\"error\"\r\n                        size=\"large\"\r\n                        sx={buttonSx} variant=\"contained\">Delete Reminder</Button>\r\n            </Card>\r\n\r\n            {/* Add day dialog */}\r\n            <Dialog\r\n                keepMounted={true}\r\n                open={openAddDay}\r\n                onClose={handleCloseAddDay}\r\n            >\r\n                <DialogTitle sx={dialogTitleSx}>\r\n                    {handleCloseAddDay ? (\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            onClick={handleCloseAddDay}\r\n                            sx={iconButtonSx}\r\n                        >\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                    ) : null}\r\n                </DialogTitle>\r\n\r\n                <Box sx={dialogBoxSx}>\r\n                    <form onSubmit={handleSubmitAddDay((data) => addDay(reminder.id, parsedList, data))} noValidate>\r\n                        <Box sx={boxSx}>\r\n                            <Typography sx={dialogTypographySx} variant=\"h5\">\r\n                                Add day(s)\r\n                            </Typography>\r\n\r\n                            <DaysInput control={controlAddDay} variant={\"outlined\"}/>\r\n\r\n                            <Button disabled={!formStateAddDay.isDirty} size=\"large\"\r\n                                    sx={{...buttonSx, mb: 5}}\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\">Submit</Button>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Dialog>\r\n\r\n            {/* Add time dialog */}\r\n            <Dialog\r\n                keepMounted={true}\r\n                open={openAddTime}\r\n                onClose={handleCloseAddTime}\r\n            >\r\n                <DialogTitle sx={dialogTitleSx}>\r\n                    {handleCloseAddTime ? (\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            onClick={handleCloseAddTime}\r\n                            sx={iconButtonSx}\r\n                        >\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n                    ) : null}\r\n                </DialogTitle>\r\n\r\n                <Box sx={dialogBoxSx}>\r\n                    <form onSubmit={handleSubmitAddTime((data) => addTime(reminder.id, parsedList, data))}\r\n                          noValidate>\r\n                        <Box sx={boxSx}>\r\n                            <Typography sx={dialogTypographySx} variant=\"h5\">\r\n                                Add time\r\n                            </Typography>\r\n\r\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                <TimeInput setValue={setValueAddTime} getValues={getValuesAddTime}\r\n                                           register={registerAddTime} control={controlAddTime}\r\n                                           counter={\"\"} key={\"AddTime_\" + reminder.id} variant={\"outlined\"}/>\r\n                            </LocalizationProvider>\r\n                            <Button size=\"large\" sx={{...buttonSx, mb: 5}} type=\"submit\"\r\n                                    variant=\"contained\">Submit</Button>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Dialog>\r\n\r\n            {/* Delete reminder confirmation dialog */}\r\n            <Dialog\r\n                keepMounted={true}\r\n                open={openDelete}\r\n                onClose={handleCloseDelete}\r\n            >\r\n                <Box sx={dialogBoxSx}>\r\n                    <Typography variant=\"h5\" sx={{m: 5}}> Do you want to delete the reminder\r\n                        for {reminder.dose} of {reminder.medication}? </Typography>\r\n\r\n                    <Box>\r\n                        <Button onClick={() => deleteReminder(reminder.id, parsedList)}\r\n                                size=\"large\"\r\n                                sx={confirmationButtonSx} variant=\"contained\">Yes</Button>\r\n                        <Button onClick={handleCloseDelete} color=\"error\"\r\n                                size=\"large\"\r\n                                sx={confirmationButtonSx} variant=\"contained\">No</Button>\r\n                    </Box>\r\n                </Box>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}