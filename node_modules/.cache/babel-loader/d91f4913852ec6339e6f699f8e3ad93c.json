{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\React-Medi-App\\\\src\\\\Components\\\\DaysInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Controller } from \"react-hook-form\"; // Material UI Components\n\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DaysInput(params) {\n  _s();\n\n  // Styles\n  const autoCompleteSx = {\n    width: \"100%\"\n  };\n  const [daysOfWeekSuggestions, setOptions] = useState(params.initOptions);\n  const [selected, setSelected] = useState([]);\n\n  const onChangeDisabled = (e, valueArr) => {\n    setSelected(valueArr);\n\n    if (valueArr.length === 0) {\n      const resetOptions = [...daysOfWeekSuggestions].map(opt => {\n        opt.disabled = false;\n        return opt;\n      });\n      setOptions(resetOptions);\n    } else {\n      const everyDaySelected = valueArr.find(item => item.label === \"Every day\");\n\n      if (everyDaySelected) {\n        const updatedOptions = [...daysOfWeekSuggestions].map(opt => {\n          opt.disabled = opt.label !== \"Every day\";\n          return opt;\n        });\n        setOptions(updatedOptions);\n      } else {\n        const updatedOptions = [...daysOfWeekSuggestions].map(opt => {\n          opt.disabled = opt.label === \"Every day\";\n          return opt;\n        });\n        setOptions(updatedOptions);\n      }\n    }\n  };\n\n  const label = params.label;\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: \"daysOfWeek\",\n    control: params.control,\n    defaultValue: [],\n    render: _ref => {\n      let {\n        field: {\n          ref,\n          ...field\n        },\n        fieldState: {\n          error\n        }\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Autocomplete, { ...field,\n        autoHighlight: true,\n        disableClearable: true,\n        filterSelectedOptions: true,\n        multiple: true,\n        getOptionDisabled: option => !!option.disabled,\n        id: \"days-autocomplete\",\n        onChange: (event, value) => {\n          field.onChange(value);\n          onChangeDisabled(event, value);\n        },\n        options: daysOfWeekSuggestions,\n        sx: autoCompleteSx,\n        value: selected,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          error: !!error,\n          helperText: error === null || error === void 0 ? void 0 : error.message,\n          id: \"daysOfWeek\",\n          label: label,\n          name: \"daysOfWeek\",\n          type: \"search\",\n          inputRef: ref,\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DaysInput, \"U1qWAo/4a3nYfh08pqL7jc7r2jg=\");\n\n_c = DaysInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DaysInput\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/DaysInput.js"],"names":["useState","Controller","TextField","Autocomplete","DaysInput","params","autoCompleteSx","width","daysOfWeekSuggestions","setOptions","initOptions","selected","setSelected","onChangeDisabled","e","valueArr","length","resetOptions","map","opt","disabled","everyDaySelected","find","item","label","updatedOptions","control","field","ref","fieldState","error","option","event","value","onChange","message"],"mappings":"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","sourcesContent":["import {useState} from \"react\";\r\nimport {Controller} from \"react-hook-form\";\r\n\r\n// Material UI Components\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nexport default function DaysInput(params) {\r\n    // Styles\r\n    const autoCompleteSx = {\r\n        width: \"100%\"\r\n    };\r\n\r\n    const [daysOfWeekSuggestions, setOptions] = useState(params.initOptions);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const onChangeDisabled = (e, valueArr) => {\r\n        setSelected(valueArr);\r\n\r\n        if (valueArr.length === 0) {\r\n            const resetOptions = [...daysOfWeekSuggestions].map((opt) => {\r\n                opt.disabled = false;\r\n                return opt;\r\n            });\r\n\r\n            setOptions(resetOptions);\r\n        } else {\r\n            const everyDaySelected = valueArr.find(\r\n                (item) => item.label === \"Every day\"\r\n            );\r\n\r\n            if (everyDaySelected) {\r\n                const updatedOptions = [...daysOfWeekSuggestions].map((opt) => {\r\n                    opt.disabled = opt.label !== \"Every day\";\r\n                    return opt;\r\n                });\r\n\r\n                setOptions(updatedOptions);\r\n            } else {\r\n                const updatedOptions = [...daysOfWeekSuggestions].map((opt) => {\r\n                    opt.disabled = opt.label === \"Every day\";\r\n                    return opt;\r\n                });\r\n\r\n                setOptions(updatedOptions);\r\n            }\r\n        }\r\n    };\r\n\r\n    const label = params.label;\r\n\r\n    return (\r\n        <Controller\r\n            name=\"daysOfWeek\"\r\n            control={params.control}\r\n            defaultValue={[]}\r\n            render={({field: {ref, ...field}, fieldState: {error}}) => (\r\n                <Autocomplete\r\n                    {...field}\r\n                    autoHighlight\r\n                    disableClearable\r\n                    filterSelectedOptions\r\n                    multiple\r\n                    getOptionDisabled={(option) => !!option.disabled}\r\n                    id=\"days-autocomplete\"\r\n                    onChange={(event, value) => {\r\n                        field.onChange(value);\r\n                        onChangeDisabled(event, value);\r\n                    }}\r\n                    options={daysOfWeekSuggestions}\r\n                    sx={autoCompleteSx}\r\n                    value={selected}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            required\r\n                            error={!!error}\r\n                            helperText={error?.message}\r\n                            id=\"daysOfWeek\"\r\n                            label={label}\r\n                            name=\"daysOfWeek\"\r\n                            type=\"search\"\r\n                            inputRef={ref}\r\n                            {...params}\r\n                        />\r\n                    )}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}