{"ast":null,"code":"import _objectSpread from\"C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as React from\"react\";import{useForm}from\"react-hook-form\";import{yupResolver}from\"@hookform/resolvers/yup\";import*as Yup from\"yup\";// Material UI Components\nimport Box from\"@mui/material/Box\";import Button from\"@mui/material/Button\";import Container from\"@mui/material/Container\";import Typography from\"@mui/material/Typography\";import Autocomplete from\"@mui/material/Autocomplete\";import TextField from\"@mui/material/TextField\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var doseSuggestions=[{label:\"10\"},{label:\"20\"},{label:\"30\"},{label:\"40\"},{label:\"50\"},{label:\"60\"},{label:\"70\"},{label:\"80\"}];var medicationSuggestions=[{label:\"Lisinopril\"},{label:\"Valsartan\"}];export default function MedicationInput(){var _errors$medication,_errors$dose;//Styles and SX\nvar boxSx={\"& .MuiTextField-root\":{mb:2.5,width:\"100%\"},bgcolor:\"background.paper\",ml:\"50px\",mr:\"50px\"};var buttonSx={fontSize:\"17px\",height:\"5.75ch\",width:\"100%\"};var errorSx={mb:2.5};// Form validation using Yup\nvar validationSchema=Yup.object().shape({medication:Yup.string().required(\"Medication is required\"),dose:Yup.string().required(\"Dose is required\")});// Form onSubmit\nvar onSubmit=function onSubmit(data){console.log(data);};var _useForm=useForm({resolver:yupResolver(validationSchema)}),errors=_useForm.formState.errors,handleSubmit=_useForm.handleSubmit,register=_useForm.register;return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(Box,{sx:boxSx,children:[/*#__PURE__*/_jsx(Autocomplete,{disableClearable:true,disablePortal:true,id:\"medication-autocomplete\",options:medicationSuggestions,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({required:true,error:errors.medication?true:false,id:\"medication\",label:\"Medication\",name:\"medication\",type:\"search\"},params),register(\"medication\")));}}),/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:errorSx,variant:\"inherit\",children:(_errors$medication=errors.medication)===null||_errors$medication===void 0?void 0:_errors$medication.message}),/*#__PURE__*/_jsx(Autocomplete,{disableClearable:true,disablePortal:true,id:\"dose-autocomplete\",options:doseSuggestions,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({required:true,error:errors.dose?true:false,id:\"dose\",label:\"Dose\",name:\"dose\",type:\"numeric\"},params),register(\"dose\")));}}),/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:errorSx,variant:\"inherit\",children:(_errors$dose=errors.dose)===null||_errors$dose===void 0?void 0:_errors$dose.message}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit(onSubmit),size:\"large\",sx:buttonSx,type:\"submit\",variant:\"contained\",children:\"Submit\"})]})})});}","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/MedicationInput.js"],"names":["React","useForm","yupResolver","Yup","Box","Button","Container","Typography","Autocomplete","TextField","doseSuggestions","label","medicationSuggestions","MedicationInput","boxSx","mb","width","bgcolor","ml","mr","buttonSx","fontSize","height","errorSx","validationSchema","object","shape","medication","string","required","dose","onSubmit","data","console","log","resolver","errors","formState","handleSubmit","register","params","message"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst doseSuggestions = [\r\n    {label: \"10\"},\r\n    {label: \"20\"},\r\n    {label: \"30\"},\r\n    {label: \"40\"},\r\n    {label: \"50\"},\r\n    {label: \"60\"},\r\n    {label: \"70\"},\r\n    {label: \"80\"}\r\n];\r\n\r\nconst medicationSuggestions = [\r\n    {label: \"Lisinopril\"},\r\n    {label: \"Valsartan\"}\r\n];\r\n\r\nexport default function MedicationInput() {\r\n    //Styles and SX\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 2.5, width: \"100%\"},\r\n        bgcolor: \"background.paper\",\r\n        ml: \"50px\",\r\n        mr: \"50px\"\r\n    };\r\n\r\n    const buttonSx = {\r\n        fontSize: \"17px\",\r\n        height: \"5.75ch\",\r\n        width: \"100%\"\r\n    };\r\n\r\n    const errorSx = {\r\n        mb: 2.5\r\n    };\r\n\r\n    // Form validation using Yup\r\n    const validationSchema = Yup.object().shape({\r\n        medication: Yup.string()\r\n            .required(\"Medication is required\"),\r\n        dose: Yup.string()\r\n            .required(\"Dose is required\")\r\n    });\r\n\r\n    // Form onSubmit\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    const {\r\n        formState: {errors},\r\n        handleSubmit,\r\n        register\r\n    } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <form>\r\n                <Box\r\n                    sx={boxSx}\r\n                >\r\n\r\n                    <Autocomplete\r\n                        disableClearable\r\n                        disablePortal\r\n                        id=\"medication-autocomplete\"\r\n                        options={medicationSuggestions}\r\n                        renderInput={(params) => <TextField\r\n                            required\r\n                            error={errors.medication ? true : false}\r\n                            id=\"medication\"\r\n                            label=\"Medication\"\r\n                            name=\"medication\"\r\n                            type=\"search\"\r\n                            {...params}\r\n                            {...register(\"medication\")}\r\n                        />}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.medication?.message}\r\n                    </Typography>\r\n\r\n                    <Autocomplete\r\n                        disableClearable\r\n                        disablePortal\r\n                        id=\"dose-autocomplete\"\r\n                        options={doseSuggestions}\r\n                        renderInput={(params) => <TextField\r\n                            required\r\n                            error={errors.dose ? true : false}\r\n                            id=\"dose\"\r\n                            label=\"Dose\"\r\n                            name=\"dose\"\r\n                            type=\"numeric\"\r\n                            {...params}\r\n                            {...register(\"dose\")}\r\n                        />}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.dose?.message}\r\n                    </Typography>\r\n\r\n                    <Button onClick={handleSubmit(onSubmit)} size=\"large\" sx={buttonSx} type=\"submit\"\r\n                            variant=\"contained\">Submit</Button>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}