{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\React-Medi-App\\\\src\\\\Components\\\\MedicationInput.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst medicationSuggestions = [{\n  label: \"Lisinopril\"\n}, {\n  label: \"Afghanistan\"\n}];\nconst doseSuggestions = [{\n  label: 10\n}, {\n  label: 20\n}, {\n  label: 30\n}, {\n  label: 40\n}, {\n  label: 50\n}, {\n  label: 60\n}, {\n  label: 70\n}, {\n  label: 80\n}];\nexport default function MedicationInput() {\n  _s();\n\n  var _errors$medication, _errors$dose;\n\n  //Styles and SX\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 2.5,\n      width: \"100%\"\n    },\n    bgcolor: \"background.paper\",\n    ml: \"50px\",\n    mr: \"50px\"\n  };\n  const buttonSx = {\n    fontSize: \"17px\",\n    height: \"5.75ch\",\n    width: \"100%\"\n  };\n  const errorSx = {\n    mb: 2.5\n  }; // Form validation using Yup\n\n  const validationSchema = Yup.object().shape({\n    medication: Yup.string().required(\"Medication is required\"),\n    dose: Yup.string().required(\"Dose is required\")\n  }); // Form onSubmit\n\n  const onSubmit = data => {\n    // This is implemented so the error UI for an invalid username/password can be displayed\n    console.log(data);\n  };\n\n  const {\n    formState: {\n      errors\n    },\n    handleSubmit,\n    register\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"medication-autocomplete\",\n          options: medicationSuggestions,\n          renderInput: () => /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            error: errors.medication ? true : false,\n            id: \"medication\",\n            label: \"Medication\",\n            name: \"medication\",\n            type: \"search\",\n            ...register(\"medication\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: errorSx,\n          variant: \"inherit\",\n          children: (_errors$medication = errors.medication) === null || _errors$medication === void 0 ? void 0 : _errors$medication.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"dose-autocomplete\",\n          options: doseSuggestions,\n          renderInput: () => /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            error: errors.dose ? true : false,\n            id: \"dose\",\n            label: \"Dose\",\n            name: \"dose\",\n            type: \"numeric\",\n            ...register(\"dose\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: errorSx,\n          variant: \"inherit\",\n          children: (_errors$dose = errors.dose) === null || _errors$dose === void 0 ? void 0 : _errors$dose.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit(onSubmit),\n          size: \"large\",\n          sx: buttonSx,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MedicationInput, \"asp/QsGPFqJqCHTD73pn9sNkh4Y=\", false, function () {\n  return [useForm];\n});\n\n_c = MedicationInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicationInput\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/MedicationInput.js"],"names":["React","useForm","yupResolver","Yup","Box","Button","Container","Typography","Autocomplete","TextField","medicationSuggestions","label","doseSuggestions","MedicationInput","boxSx","mb","width","bgcolor","ml","mr","buttonSx","fontSize","height","errorSx","validationSchema","object","shape","medication","string","required","dose","onSubmit","data","console","log","formState","errors","handleSubmit","register","resolver","message"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst medicationSuggestions = [\r\n    {label: \"Lisinopril\"},\r\n    {label: \"Afghanistan\"}\r\n];\r\n\r\nconst doseSuggestions = [\r\n    {label: 10},\r\n    {label: 20},\r\n    {label: 30},\r\n    {label: 40},\r\n    {label: 50},\r\n    {label: 60},\r\n    {label: 70},\r\n    {label: 80}\r\n];\r\n\r\nexport default function MedicationInput() {\r\n    //Styles and SX\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 2.5, width: \"100%\"},\r\n        bgcolor: \"background.paper\",\r\n        ml: \"50px\",\r\n        mr: \"50px\"\r\n    };\r\n\r\n    const buttonSx = {\r\n        fontSize: \"17px\",\r\n        height: \"5.75ch\",\r\n        width: \"100%\"\r\n    };\r\n\r\n    const errorSx = {\r\n        mb: 2.5\r\n    };\r\n\r\n    // Form validation using Yup\r\n    const validationSchema = Yup.object().shape({\r\n        medication: Yup.string()\r\n            .required(\"Medication is required\"),\r\n        dose: Yup.string()\r\n            .required(\"Dose is required\")\r\n    });\r\n\r\n    // Form onSubmit\r\n    const onSubmit = (data) => {\r\n        // This is implemented so the error UI for an invalid username/password can be displayed\r\n        console.log(data);\r\n    };\r\n\r\n    const {\r\n        formState: {errors},\r\n        handleSubmit,\r\n        register\r\n    } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <form>\r\n                <Box\r\n                    sx={boxSx}\r\n                >\r\n                    {/*\r\n                    <TextField\r\n                        required\r\n                        error={errors.medication ? true : false}\r\n                        id=\"medication\"\r\n                        label=\"Medication\"\r\n                        name=\"medication\"\r\n                        type=\"search\"\r\n                        {...register(\"medication\")}\r\n                    />\r\n                    */}\r\n\r\n                    <Autocomplete\r\n                        disablePortal\r\n                        id=\"medication-autocomplete\"\r\n                        options={medicationSuggestions}\r\n                        renderInput={() => <TextField\r\n                            required\r\n                            error={errors.medication ? true : false}\r\n                            id=\"medication\"\r\n                            label=\"Medication\"\r\n                            name=\"medication\"\r\n                            type=\"search\"\r\n                            {...register(\"medication\")}\r\n                        />}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.medication?.message}\r\n                    </Typography>\r\n\r\n                    {/*\r\n                    <TextField\r\n                        required\r\n                        error={errors.dose ? true : false}\r\n                        id=\"dose\"\r\n                        label=\"Dose\"\r\n                        name=\"dose\"\r\n                        type=\"numeric\"\r\n                        {...register(\"dose\")}\r\n                    />\r\n                    */}\r\n\r\n                    <Autocomplete\r\n                        disablePortal\r\n                        id=\"dose-autocomplete\"\r\n                        options={doseSuggestions}\r\n                        renderInput={() => <TextField\r\n                            required\r\n                            error={errors.dose ? true : false}\r\n                            id=\"dose\"\r\n                            label=\"Dose\"\r\n                            name=\"dose\"\r\n                            type=\"numeric\"\r\n                            {...register(\"dose\")}\r\n                        />}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.dose?.message}\r\n                    </Typography>\r\n\r\n                    <Button onClick={handleSubmit(onSubmit)} size=\"large\" sx={buttonSx} type=\"submit\"\r\n                            variant=\"contained\">Submit</Button>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}