{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Add Reminder\\\\AddReminder5.js\";\nimport * as React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Chip from \"@mui/material/Chip\";\nimport Container from \"@mui/material/Container\";\nimport Divider from \"@mui/material/Divider\";\nimport Link from \"@mui/material/Link\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\"; // Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonSx = {\n  fontSize: \"17px\",\n  height: \"5.75ch\",\n  ml: 1.5,\n  mr: 1.5,\n  width: \"auto\"\n};\nconst centeredSx = {\n  alignItems: \"center\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"100%\"\n};\nconst confirmationMessageBoxSx = {\n  pl: 5,\n  pr: 5,\n  width: \"calc(100vw - 80px)\"\n};\nconst containerSx = {\n  mb: 5,\n  mt: 5,\n  pl: 5,\n  pr: 5,\n  width: \"100%\"\n};\nconst chipSx = {\n  fontSize: 17,\n  mb: 0.75,\n  mr: 1.5,\n  mt: 0.75\n};\nconst headingTypographySx = {\n  mb: 3.75,\n  textAlign: \"center\"\n};\nconst iconButtonSx = {\n  fontSize: 75,\n  ml: 2.5,\n  mr: 2.5\n};\nconst linkSx = {\n  color: \"#1976d2\"\n};\nconst typographySx = {\n  mb: 1.5,\n  mt: 1.5\n};\nconst stackSx = {\n  mb: 5\n}; // Components\n\nconst breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n  underline: \"hover\",\n  color: \"inherit\",\n  href: \"/add-reminder\",\n  sx: linkSx,\n  children: \"Name & Dose\"\n}, \"1\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Link, {\n  underline: \"hover\",\n  color: \"inherit\",\n  href: \"/add-reminder/days\",\n  sx: linkSx,\n  children: \"Days of Week\"\n}, \"2\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Link, {\n  underline: \"hover\",\n  color: \"inherit\",\n  href: \"/add-reminder/days/nums\",\n  sx: linkSx,\n  children: \"# of Times\"\n}, \"3\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 86,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Link, {\n  underline: \"hover\",\n  color: \"inherit\",\n  href: \"/add-reminder/days/nums/times\",\n  sx: linkSx,\n  children: \"Times\"\n}, \"4\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 89,\n  columnNumber: 5\n}, this), /*#__PURE__*/_jsxDEV(Typography, {\n  color: \"text.primary\",\n  children: \"Review\"\n}, \"5\", false, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 5\n}, this)];\n\nconst ChipList = params => {\n  if (params.type === \"times\") {\n    params.arr.sort((a, b) => {\n      return new Date('1970/01/01 ' + a) - new Date('1970/01/01 ' + b);\n    });\n  } else {\n    const days = {\n      Monday: 0,\n      Tuesday: 1,\n      Wednesday: 2,\n      Thursday: 3,\n      Friday: 4,\n      Saturday: 5,\n      Sunday: 6\n    };\n    params.arr.sort((a, b) => {\n      const day1 = days[a];\n      const day2 = days[b];\n      return day1 > day2 ? 1 : -1;\n    });\n  }\n\n  const unique = [...new Set(params.arr)];\n  return unique.map(chip => {\n    return /*#__PURE__*/_jsxDEV(Chip, {\n      sx: chipSx,\n      label: chip\n    }, \"Chip_\" + uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this);\n  });\n}; // Functions\n\n\n_c = ChipList;\n\nconst getLastReminder = () => {\n  const reminderList = localStorage.getItem(\"reminders\");\n  const parsed = JSON.parse(reminderList);\n  return parsed[parsed.length - 1];\n};\n\nconst ConfirmationMessage = () => {\n  const {\n    medication,\n    dose,\n    days,\n    times\n  } = getLastReminder();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      sx: headingTypographySx,\n      variant: \"h5\",\n      children: \"Review your reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mb: 2.5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: typographySx,\n      variant: \"h5\",\n      children: [\"Medication: \", medication]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: typographySx,\n      variant: \"h5\",\n      children: [\"Dose: \", dose]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: [\"Days: \", /*#__PURE__*/_jsxDEV(ChipList, {\n        arr: days,\n        type: \"days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: [\"Times: \", /*#__PURE__*/_jsxDEV(ChipList, {\n        arr: time,\n        type: \"times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mb: 3.75,\n        mt: 2.75\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ConfirmationMessage;\n\nconst onSubmit = () => {\n  const reminderList = localStorage.getItem(\"reminders\");\n  const parsed = JSON.parse(reminderList);\n  const lastReminder = getLastReminder();\n  lastReminder.submitted = true;\n  parsed[parsed.length - 1] = lastReminder;\n  localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n  fetch(\"/reminder-confirmation\").then(() => {\n    window.location = \"/reminder-confirmation\";\n  });\n};\n\nexport default function AddReminder5() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: containerSx,\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: centeredSx,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: confirmationMessageBoxSx,\n        children: /*#__PURE__*/_jsxDEV(ConfirmationMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          href: \"/add-reminder/days/nums/times\",\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            sx: iconButtonSx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onSubmit,\n          size: \"large\",\n          sx: buttonSx,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n_c3 = AddReminder5;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ChipList\");\n$RefreshReg$(_c2, \"ConfirmationMessage\");\n$RefreshReg$(_c3, \"AddReminder5\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Add Reminder/AddReminder5.js"],"names":["React","v4","uuidv4","ArrowBackIcon","Box","Breadcrumbs","Button","Chip","Container","Divider","Link","NavigateNextIcon","Stack","Typography","buttonSx","fontSize","height","ml","mr","width","centeredSx","alignItems","display","flexDirection","confirmationMessageBoxSx","pl","pr","containerSx","mb","mt","chipSx","headingTypographySx","textAlign","iconButtonSx","linkSx","color","typographySx","stackSx","breadcrumbs","ChipList","params","type","arr","sort","a","b","Date","days","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","day1","day2","unique","Set","map","chip","getLastReminder","reminderList","localStorage","getItem","parsed","JSON","parse","length","ConfirmationMessage","medication","dose","times","time","onSubmit","lastReminder","submitted","setItem","stringify","fetch","then","window","location","AddReminder5"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,MADG;AAEbC,EAAAA,MAAM,EAAE,QAFK;AAGbC,EAAAA,EAAE,EAAE,GAHS;AAIbC,EAAAA,EAAE,EAAE,GAJS;AAKbC,EAAAA,KAAK,EAAE;AALM,CAAjB;AAQA,MAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,QADG;AAEfC,EAAAA,OAAO,EAAE,MAFM;AAGfC,EAAAA,aAAa,EAAE,QAHA;AAIfJ,EAAAA,KAAK,EAAE;AAJQ,CAAnB;AAOA,MAAMK,wBAAwB,GAAG;AAC7BC,EAAAA,EAAE,EAAE,CADyB;AAE7BC,EAAAA,EAAE,EAAE,CAFyB;AAG7BP,EAAAA,KAAK,EAAE;AAHsB,CAAjC;AAMA,MAAMQ,WAAW,GAAG;AAChBC,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,EAAE,EAAE,CAFY;AAGhBJ,EAAAA,EAAE,EAAE,CAHY;AAIhBC,EAAAA,EAAE,EAAE,CAJY;AAKhBP,EAAAA,KAAK,EAAE;AALS,CAApB;AAQA,MAAMW,MAAM,GAAG;AACXf,EAAAA,QAAQ,EAAE,EADC;AAEXa,EAAAA,EAAE,EAAE,IAFO;AAGXV,EAAAA,EAAE,EAAE,GAHO;AAIXW,EAAAA,EAAE,EAAE;AAJO,CAAf;AAOA,MAAME,mBAAmB,GAAG;AACxBH,EAAAA,EAAE,EAAE,IADoB;AAExBI,EAAAA,SAAS,EAAE;AAFa,CAA5B;AAKA,MAAMC,YAAY,GAAG;AACjBlB,EAAAA,QAAQ,EAAE,EADO;AAEjBE,EAAAA,EAAE,EAAE,GAFa;AAGjBC,EAAAA,EAAE,EAAE;AAHa,CAArB;AAMA,MAAMgB,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AADI,CAAf;AAIA,MAAMC,YAAY,GAAG;AACjBR,EAAAA,EAAE,EAAE,GADa;AAEjBC,EAAAA,EAAE,EAAE;AAFa,CAArB;AAKA,MAAMQ,OAAO,GAAG;AACZT,EAAAA,EAAE,EAAE;AADQ,CAAhB,C,CAIA;;AACA,MAAMU,WAAW,GAAG,cAChB,QAAC,IAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,KAAK,EAAC,SAAtC;AAAgD,EAAA,IAAI,EAAC,eAArD;AAAqE,EAAA,EAAE,EAAEJ,MAAzE;AAAA;AAAA,GAAU,GAAV;AAAA;AAAA;AAAA;AAAA,QADgB,eAIhB,QAAC,IAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,KAAK,EAAC,SAAtC;AAAgD,EAAA,IAAI,EAAC,oBAArD;AAA0E,EAAA,EAAE,EAAEA,MAA9E;AAAA;AAAA,GAAU,GAAV;AAAA;AAAA;AAAA;AAAA,QAJgB,eAOhB,QAAC,IAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,KAAK,EAAC,SAAtC;AAAgD,EAAA,IAAI,EAAC,yBAArD;AAA+E,EAAA,EAAE,EAAEA,MAAnF;AAAA;AAAA,GAAU,GAAV;AAAA;AAAA;AAAA;AAAA,QAPgB,eAUhB,QAAC,IAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,KAAK,EAAC,SAAtC;AAAgD,EAAA,IAAI,EAAC,+BAArD;AAAqF,EAAA,EAAE,EAAEA,MAAzF;AAAA;AAAA,GAAU,GAAV;AAAA;AAAA;AAAA;AAAA,QAVgB,eAahB,QAAC,UAAD;AAAoB,EAAA,KAAK,EAAC,cAA1B;AAAA;AAAA,GAAgB,GAAhB;AAAA;AAAA;AAAA;AAAA,QAbgB,CAApB;;AAkBA,MAAMK,QAAQ,GAAIC,MAAD,IAAY;AACzB,MAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AACzBD,IAAAA,MAAM,CAACE,GAAP,CAAWC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtB,aAAO,IAAIC,IAAJ,CAAS,gBAAgBF,CAAzB,IAA8B,IAAIE,IAAJ,CAAS,gBAAgBD,CAAzB,CAArC;AACH,KAFD;AAGH,GAJD,MAIO;AACH,UAAME,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,CADC;AAETC,MAAAA,OAAO,EAAE,CAFA;AAGTC,MAAAA,SAAS,EAAE,CAHF;AAITC,MAAAA,QAAQ,EAAE,CAJD;AAKTC,MAAAA,MAAM,EAAE,CALC;AAMTC,MAAAA,QAAQ,EAAE,CAND;AAOTC,MAAAA,MAAM,EAAE;AAPC,KAAb;AAUAd,IAAAA,MAAM,CAACE,GAAP,CAAWC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtB,YAAMU,IAAI,GAAGR,IAAI,CAACH,CAAD,CAAjB;AACA,YAAMY,IAAI,GAAGT,IAAI,CAACF,CAAD,CAAjB;AACA,aAAQU,IAAI,GAAGC,IAAR,GAAgB,CAAhB,GAAoB,CAAC,CAA5B;AACH,KAJD;AAKH;;AAED,QAAMC,MAAM,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQlB,MAAM,CAACE,GAAf,CAAJ,CAAf;AAEA,SAAQe,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AACzB,wBAAQ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE9B,MAAV;AAA2C,MAAA,KAAK,EAAE8B;AAAlD,OAAuB,UAAU1D,MAAM,EAAvC;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFO,CAAR;AAGH,CA5BD,C,CA8BA;;;KA9BMqC,Q;;AA+BN,MAAMsB,eAAe,GAAG,MAAM;AAC1B,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AACA,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAf;AACA,SAAOG,MAAM,CAACA,MAAM,CAACG,MAAP,GAAgB,CAAjB,CAAb;AACH,CAJD;;AAMA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,IAAb;AAAmBxB,IAAAA,IAAnB;AAAyByB,IAAAA;AAAzB,MAAkCX,eAAe,EAAvD;AAEA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAE9B,mBAAhB;AAAqC,MAAA,OAAO,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE;AAACH,QAAAA,EAAE,EAAE;AAAL;AAAb;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEQ,YAAhB;AAA8B,MAAA,OAAO,EAAC,IAAtC;AAAA,iCACiBkC,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAElC,YAAhB;AAA8B,MAAA,OAAO,EAAC,IAAtC;AAAA,2BACWmC,IADX;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,wCACU,QAAC,QAAD;AAAU,QAAA,GAAG,EAAExB,IAAf;AAAqB,QAAA,IAAI,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAgBI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,yCACW,QAAC,QAAD;AAAU,QAAA,GAAG,EAAE0B,IAAf;AAAqB,QAAA,IAAI,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,cADX;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAoBI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE;AAAC7C,QAAAA,EAAE,EAAE,IAAL;AAAWC,QAAAA,EAAE,EAAE;AAAf;AAAb;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA3BD;;MAAMwC,mB;;AA6BN,MAAMK,QAAQ,GAAG,MAAM;AACnB,QAAMZ,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AACA,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAf;AACA,QAAMa,YAAY,GAAGd,eAAe,EAApC;AACAc,EAAAA,YAAY,CAACC,SAAb,GAAyB,IAAzB;AACAX,EAAAA,MAAM,CAACA,MAAM,CAACG,MAAP,GAAgB,CAAjB,CAAN,GAA4BO,YAA5B;AACAZ,EAAAA,YAAY,CAACc,OAAb,CAAqB,WAArB,EAAkCX,IAAI,CAACY,SAAL,CAAeb,MAAf,CAAlC;AAEAc,EAAAA,KAAK,CAAC,wBAAD,CAAL,CACKC,IADL,CACU,MAAM;AACRC,IAAAA,MAAM,CAACC,QAAP,GAAkB,wBAAlB;AACH,GAHL;AAIH,CAZD;;AAcA,eAAe,SAASC,YAAT,GAAwB;AACnC,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAExD,WAAf;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,EAAE,EAAEU,OAAvB;AAAA,6BACI,QAAC,WAAD;AACI,QAAA,SAAS,eAAE,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADf;AAEI,sBAAW,YAFf;AAAA,kBAIKC;AAJL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAElB,UAAT;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEI,wBAAT;AAAA,+BACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,+BAAb;AAAA,iCAA6C,QAAC,aAAD;AAAe,YAAA,EAAE,EAAES;AAAnB;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEyC,QAAjB;AAA2B,UAAA,IAAI,EAAC,OAAhC;AAAwC,UAAA,EAAE,EAAE5D,QAA5C;AAAsD,UAAA,IAAI,EAAC,QAA3D;AACQ,UAAA,OAAO,EAAC,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;MAzBuBqE,Y","sourcesContent":["import * as React from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\n// Material UI Components\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n// Styles\r\nconst buttonSx = {\r\n    fontSize: \"17px\",\r\n    height: \"5.75ch\",\r\n    ml: 1.5,\r\n    mr: 1.5,\r\n    width: \"auto\"\r\n};\r\n\r\nconst centeredSx = {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\"\r\n};\r\n\r\nconst confirmationMessageBoxSx = {\r\n    pl: 5,\r\n    pr: 5,\r\n    width: \"calc(100vw - 80px)\"\r\n};\r\n\r\nconst containerSx = {\r\n    mb: 5,\r\n    mt: 5,\r\n    pl: 5,\r\n    pr: 5,\r\n    width: \"100%\"\r\n};\r\n\r\nconst chipSx = {\r\n    fontSize: 17,\r\n    mb: 0.75,\r\n    mr: 1.5,\r\n    mt: 0.75\r\n};\r\n\r\nconst headingTypographySx = {\r\n    mb: 3.75,\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst iconButtonSx = {\r\n    fontSize: 75,\r\n    ml: 2.5,\r\n    mr: 2.5\r\n};\r\n\r\nconst linkSx = {\r\n    color: \"#1976d2\"\r\n};\r\n\r\nconst typographySx = {\r\n    mb: 1.5,\r\n    mt: 1.5\r\n};\r\n\r\nconst stackSx = {\r\n    mb: 5\r\n};\r\n\r\n// Components\r\nconst breadcrumbs = [\r\n    <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\r\n        Name & Dose\r\n    </Link>,\r\n    <Link key=\"2\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days\" sx={linkSx}>\r\n        Days of Week\r\n    </Link>,\r\n    <Link key=\"3\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days/nums\" sx={linkSx}>\r\n        # of Times\r\n    </Link>,\r\n    <Link key=\"4\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days/nums/times\" sx={linkSx}>\r\n        Times\r\n    </Link>,\r\n    <Typography key=\"5\" color=\"text.primary\">\r\n        Review\r\n    </Typography>\r\n];\r\n\r\nconst ChipList = (params) => {\r\n    if (params.type === \"times\") {\r\n        params.arr.sort((a, b) => {\r\n            return new Date('1970/01/01 ' + a) - new Date('1970/01/01 ' + b);\r\n        });\r\n    } else {\r\n        const days = {\r\n            Monday: 0,\r\n            Tuesday: 1,\r\n            Wednesday: 2,\r\n            Thursday: 3,\r\n            Friday: 4,\r\n            Saturday: 5,\r\n            Sunday: 6\r\n        };\r\n\r\n        params.arr.sort((a, b) => {\r\n            const day1 = days[a];\r\n            const day2 = days[b];\r\n            return (day1 > day2) ? 1 : -1;\r\n        });\r\n    }\r\n\r\n    const unique = [...new Set(params.arr)];\r\n\r\n    return (unique.map((chip) => {\r\n        return (<Chip sx={chipSx} key={\"Chip_\" + uuidv4()} label={chip}/>);\r\n    }));\r\n};\r\n\r\n// Functions\r\nconst getLastReminder = () => {\r\n    const reminderList = localStorage.getItem(\"reminders\");\r\n    const parsed = JSON.parse(reminderList);\r\n    return parsed[parsed.length - 1];\r\n};\r\n\r\nconst ConfirmationMessage = () => {\r\n    const {medication, dose, days, times} = getLastReminder();\r\n\r\n    return (\r\n        <Box>\r\n            <Typography sx={headingTypographySx} variant=\"h5\">\r\n                Review your reminder\r\n            </Typography>\r\n\r\n            <Divider sx={{mb: 2.5}}/>\r\n\r\n            <Typography sx={typographySx} variant=\"h5\">\r\n                Medication: {medication}\r\n            </Typography>\r\n            <Typography sx={typographySx} variant=\"h5\">\r\n                Dose: {dose}\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n                Days: <ChipList arr={days} type={\"days\"}/>\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n                Times: <ChipList arr={time} type={\"times\"}/>\r\n            </Typography>\r\n\r\n            <Divider sx={{mb: 3.75, mt: 2.75}}/>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst onSubmit = () => {\r\n    const reminderList = localStorage.getItem(\"reminders\");\r\n    const parsed = JSON.parse(reminderList);\r\n    const lastReminder = getLastReminder();\r\n    lastReminder.submitted = true;\r\n    parsed[parsed.length - 1] = lastReminder;\r\n    localStorage.setItem(\"reminders\", JSON.stringify(parsed));\r\n\r\n    fetch(\"/reminder-confirmation\")\r\n        .then(() => {\r\n            window.location = \"/reminder-confirmation\";\r\n        });\r\n};\r\n\r\nexport default function AddReminder5() {\r\n    return (\r\n        <Container sx={containerSx}>\r\n            <Stack spacing={2} sx={stackSx}>\r\n                <Breadcrumbs\r\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\r\n                    aria-label=\"breadcrumb\"\r\n                >\r\n                    {breadcrumbs}\r\n                </Breadcrumbs>\r\n            </Stack>\r\n            <Box sx={centeredSx}>\r\n                <Box sx={confirmationMessageBoxSx}>\r\n                    <ConfirmationMessage/>\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Button href=\"/add-reminder/days/nums/times\"><ArrowBackIcon sx={iconButtonSx}/></Button>\r\n\r\n                    <Button onClick={onSubmit} size=\"large\" sx={buttonSx} type=\"submit\"\r\n                            variant=\"contained\">Submit</Button>\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}