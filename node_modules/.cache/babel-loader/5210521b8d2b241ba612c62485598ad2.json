{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Registered Medications\\\\DisplayMedications.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; // Material UI Components\n\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\"; // Custom Components\n\nimport NoRegisteredMedications from \"./NoRegisteredMedications\";\nimport Medication from \"./Medication\"; // Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerSx = {\n  pl: 5,\n  pr: 5,\n  width: \"100%\"\n};\nexport default function DisplayMedications() {\n  _s();\n\n  // This is the array of medication objects that will be displayed on the cards\n  const medicationList = localStorage.getItem(\"medications\");\n  const [parsedList, setParsedList] = useState(JSON.parse(medicationList));\n  const [medicationComps, setMedicationComps] = useState( /*#__PURE__*/_jsxDEV(NoRegisteredMedications, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 60\n  }, this));\n  useEffect(() => {\n    setMedicationComps( /*#__PURE__*/_jsxDEV(NoRegisteredMedications, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 28\n    }, this));\n\n    if (parsedList && parsedList.length > 0) {\n      const finalComponents = parsedList.filter(index => index !== \"dupe\");\n      localStorage.setItem(\"medications\", JSON.stringify(finalComponents));\n\n      if (finalComponents.length > 0) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        setMedicationComps(finalComponents.map(medication => {\n          return /*#__PURE__*/_jsxDEV(Medication, {\n            medication: medication,\n            parsedList: parsedList,\n            setParsedList: setParsedList\n          }, \"Medication_\" + medication.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this);\n        }));\n      }\n    }\n  }, [parsedList]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: containerSx,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        flexDirection: \"column\"\n      },\n      children: medicationComps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayMedications, \"xqoryDgDGs251fqyKY79nYubGlM=\");\n\n_c = DisplayMedications;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayMedications\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Registered Medications/DisplayMedications.js"],"names":["useEffect","useState","Box","Container","NoRegisteredMedications","Medication","containerSx","pl","pr","width","DisplayMedications","medicationList","localStorage","getItem","parsedList","setParsedList","JSON","parse","medicationComps","setMedicationComps","length","finalComponents","filter","index","setItem","stringify","map","medication","id","flexDirection"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAEA;;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,EAAE,EAAE,CAFY;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAApB;AAMA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AACzC;AACA,QAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAvB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACe,IAAI,CAACC,KAAL,CAAWN,cAAX,CAAD,CAA5C;AAEA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,eAAC,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,UAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,kBAAkB,eAAC,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,YAAD,CAAlB;;AAEA,QAAIL,UAAU,IAAIA,UAAU,CAACM,MAAX,GAAoB,CAAtC,EAAyC;AACrC,YAAMC,eAAe,GAAGP,UAAU,CAACQ,MAAX,CAAmBC,KAAD,IAAWA,KAAK,KAAK,MAAvC,CAAxB;AAEAX,MAAAA,YAAY,CAACY,OAAb,CAAqB,aAArB,EAAoCR,IAAI,CAACS,SAAL,CAAeJ,eAAf,CAApC;;AAEA,UAAIA,eAAe,CAACD,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B;AACAD,QAAAA,kBAAkB,CAACE,eAAe,CAACK,GAAhB,CAAqBC,UAAD,IAAgB;AACnD,8BAAQ,QAAC,UAAD;AAAY,YAAA,UAAU,EAAEA,UAAxB;AAAoC,YAAA,UAAU,EAAEb,UAAhD;AACY,YAAA,aAAa,EAAEC;AAD3B,aAC+C,gBAAgBY,UAAU,CAACC,EAD1E;AAAA;AAAA;AAAA;AAAA,kBAAR;AAGH,SAJkB,CAAD,CAAlB;AAKH;AACJ;AACJ,GAjBQ,EAiBN,CAACd,UAAD,CAjBM,CAAT;AAmBA,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAER,WAAf;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACuB,QAAAA,aAAa,EAAE;AAAhB,OAAZ;AAAA,gBACKX;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjCuBR,kB;;KAAAA,kB","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n// Custom Components\r\nimport NoRegisteredMedications from \"./NoRegisteredMedications\";\r\nimport Medication from \"./Medication\";\r\n\r\n// Styles\r\nconst containerSx = {\r\n    pl: 5,\r\n    pr: 5,\r\n    width: \"100%\"\r\n};\r\n\r\nexport default function DisplayMedications() {\r\n    // This is the array of medication objects that will be displayed on the cards\r\n    const medicationList = localStorage.getItem(\"medications\");\r\n    const [parsedList, setParsedList] = useState(JSON.parse(medicationList));\r\n\r\n    const [medicationComps, setMedicationComps] = useState(<NoRegisteredMedications/>);\r\n\r\n    useEffect(() => {\r\n        setMedicationComps(<NoRegisteredMedications/>);\r\n\r\n        if (parsedList && parsedList.length > 0) {\r\n            const finalComponents = parsedList.filter((index) => index !== \"dupe\");\r\n\r\n            localStorage.setItem(\"medications\", JSON.stringify(finalComponents));\r\n\r\n            if (finalComponents.length > 0) {\r\n                // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                setMedicationComps(finalComponents.map((medication) => {\r\n                    return (<Medication medication={medication} parsedList={parsedList}\r\n                                        setParsedList={setParsedList} key={\"Medication_\" + medication.id}/>\r\n                    )\r\n                }));\r\n            }\r\n        }\r\n    }, [parsedList]);\r\n\r\n    return (\r\n        <Container sx={containerSx}>\r\n            <Box style={{flexDirection: \"column\"}}>\r\n                {medicationComps}\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}