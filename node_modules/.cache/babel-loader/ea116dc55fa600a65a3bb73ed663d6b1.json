{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Inputs\\\\TimeInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Controller } from \"react-hook-form\"; // Material UI Components\n\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimeInput(_ref) {\n  _s();\n\n  let {\n    counter,\n    getValues,\n    register,\n    control,\n    setValue,\n    variant\n  } = _ref;\n  const name = \"Time \" + counter;\n  const [time, setTime] = useState(new Date(\"2000-01-01T00:00:00\"));\n  const value = getValues(name);\n  useEffect(() => {\n    register(name);\n  }, [name, register]);\n  useEffect(() => {\n    setTime(value || null);\n  }, [setTime, value]);\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    control: control,\n    name: name,\n    defaultValue: time,\n    render: _ref2 => {\n      let {\n        field: {\n          ref,\n          ...field\n        }\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(TimePicker, { ...field,\n        keepMounted: true,\n        label: name,\n        value: time,\n        onChange: t => {\n          setValue(name, t, {\n            shouldValidate: true,\n            shouldDirty: true\n          });\n          setTime(t);\n        },\n        renderInput: tfParams => /*#__PURE__*/_jsxDEV(TextField, {\n          id: name,\n          name: name,\n          variant: variant,\n          inputRef: ref,\n          ...tfParams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimeInput, \"vYRAdv+PJwxaVk6npiKsn2UdbfY=\");\n\n_c = TimeInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeInput\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Inputs/TimeInput.js"],"names":["useEffect","useState","Controller","TimePicker","TextField","TimeInput","counter","getValues","register","control","setValue","variant","name","time","setTime","Date","value","field","ref","t","shouldValidate","shouldDirty","tfParams"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,UAAR,QAAyB,iBAAzB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,eAAe,SAASC,SAAT,OAA+E;AAAA;;AAAA,MAA5D;AAACC,IAAAA,OAAD;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA,QAAxC;AAAkDC,IAAAA;AAAlD,GAA4D;AAC1F,QAAMC,IAAI,GAAG,UAAUN,OAAvB;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAIc,IAAJ,CAAS,qBAAT,CAAD,CAAhC;AACA,QAAMC,KAAK,GAAGT,SAAS,CAACK,IAAD,CAAvB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,GAFQ,EAEN,CAACA,IAAD,EAAOJ,QAAP,CAFM,CAAT;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,OAAO,CAACE,KAAK,IAAI,IAAV,CAAP;AACH,GAFQ,EAEN,CAACF,OAAD,EAAUE,KAAV,CAFM,CAAT;AAIA,sBACI,QAAC,UAAD;AACI,IAAA,OAAO,EAAEP,OADb;AAEI,IAAA,IAAI,EAAEG,IAFV;AAGI,IAAA,YAAY,EAAEC,IAHlB;AAII,IAAA,MAAM,EAAE;AAAA,UAAC;AAACI,QAAAA,KAAK,EAAE;AAACC,UAAAA,GAAD;AAAM,aAAGD;AAAT;AAAR,OAAD;AAAA,0BACJ,QAAC,UAAD,OACQA,KADR;AAEI,QAAA,WAAW,EAAE,IAFjB;AAGI,QAAA,KAAK,EAAEL,IAHX;AAII,QAAA,KAAK,EAAEC,IAJX;AAKI,QAAA,QAAQ,EAAGM,CAAD,IAAO;AACbT,UAAAA,QAAQ,CAACE,IAAD,EAAOO,CAAP,EAAU;AAACC,YAAAA,cAAc,EAAE,IAAjB;AAAuBC,YAAAA,WAAW,EAAE;AAApC,WAAV,CAAR;AACAP,UAAAA,OAAO,CAACK,CAAD,CAAP;AACH,SARL;AASI,QAAA,WAAW,EAAGG,QAAD,iBACT,QAAC,SAAD;AACI,UAAA,EAAE,EAAEV,IADR;AAEI,UAAA,IAAI,EAAEA,IAFV;AAGI,UAAA,OAAO,EAAED,OAHb;AAII,UAAA,QAAQ,EAAEO,GAJd;AAAA,aAKQI;AALR;AAAA;AAAA;AAAA;AAAA;AAVR;AAAA;AAAA;AAAA;AAAA,cADI;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAzCuBjB,S;;KAAAA,S","sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {Controller} from \"react-hook-form\";\r\n\r\n// Material UI Components\r\nimport TimePicker from \"@mui/lab/TimePicker\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nexport default function TimeInput({counter, getValues, register, control, setValue, variant}) {\r\n    const name = \"Time \" + counter;\r\n\r\n    const [time, setTime] = useState(new Date(\"2000-01-01T00:00:00\"));\r\n    const value = getValues(name);\r\n\r\n    useEffect(() => {\r\n        register(name);\r\n    }, [name, register]);\r\n    useEffect(() => {\r\n        setTime(value || null);\r\n    }, [setTime, value]);\r\n\r\n    return (\r\n        <Controller\r\n            control={control}\r\n            name={name}\r\n            defaultValue={time}\r\n            render={({field: {ref, ...field}}) => (\r\n                <TimePicker\r\n                    {...field}\r\n                    keepMounted={true}\r\n                    label={name}\r\n                    value={time}\r\n                    onChange={(t) => {\r\n                        setValue(name, t, {shouldValidate: true, shouldDirty: true});\r\n                        setTime(t);\r\n                    }}\r\n                    renderInput={(tfParams) =>\r\n                        <TextField\r\n                            id={name}\r\n                            name={name}\r\n                            variant={variant}\r\n                            inputRef={ref}\r\n                            {...tfParams}\r\n                        />\r\n                    }\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}