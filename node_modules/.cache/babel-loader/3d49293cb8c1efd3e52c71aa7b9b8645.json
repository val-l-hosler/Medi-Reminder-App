{"ast":null,"code":"var _jsxFileName = \"/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\"; // Custom Components\n\nimport PillLogo from \"./pill.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  // Styles\n  const boxFormSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    bgcolor: \"background.paper\"\n  };\n  const boxLinkSx = {\n    mt: 2\n  };\n  const buttonSx = {\n    fontSize: \"17px\",\n    height: \"5.75ch\",\n    mb: 2.5,\n    width: \"100%\"\n  };\n  const containerDivStyle = {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  };\n  const cardSx = {\n    bgcolor: \"background.paper\",\n    ml: 5,\n    mt: 5,\n    mr: 5,\n    p: 5\n  };\n  const errorSx = {\n    mb: 5,\n    mt: 2.5\n  };\n  const imgStyle = {\n    filter: \"invert(100%) sepia(0%) saturate(0%) hue-rotate(231deg) brightness(103%) contrast(101%)\",\n    height: 250\n  }; // Form validation using Yup\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    password: Yup.string().required(\"Password is required\")\n  }); // Form onSubmit\n\n  const onSubmit = data => {\n    // This is implemented so the error UI for an invalid username/password can be displayed\n    if (!(data.username === \"test\" && data.password === \"pass\")) {\n      document.getElementById(\"userPassError\").style.display = \"flex\";\n    } else {\n      document.getElementById(\"userPassError\").style.display = \"none\";\n      fetch(\"http://localhost:3000/main-menu\").then(resp => {\n        window.location = \"http://localhost:3000/main-menu\";\n      });\n    }\n  };\n\n  const {\n    handleSubmit,\n    control,\n    formState\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: containerDivStyle,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Pill Logo\",\n        src: PillLogo,\n        style: imgStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: cardSx,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: boxFormSx,\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: \"username\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref => {\n              let {\n                field: {\n                  ref,\n                  ...field\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                required: true,\n                error: !!error,\n                helperText: error === null || error === void 0 ? void 0 : error.message,\n                id: \"username\",\n                label: \"Username\",\n                name: \"username\",\n                type: \"search\",\n                inputRef: ref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: control,\n            defaultValue: \"\",\n            render: _ref2 => {\n              let {\n                field: {\n                  ref,\n                  ...field\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(TextField, { ...field,\n                required: true,\n                error: !!error,\n                helperText: error === null || error === void 0 ? void 0 : error.message,\n                id: \"password\",\n                label: \"Password\",\n                name: \"password\",\n                type: \"search\",\n                inputRef: ref\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !formState.isValid,\n            size: \"large\",\n            sx: buttonSx,\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            id: \"userPassError\",\n            style: {\n              display: \"none\"\n            },\n            sx: errorSx,\n            variant: \"inherit\",\n            children: \"The username and password are invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxLinkSx,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          underline: \"hover\",\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"qw4uJ56/71qY3KYVVBgBKHcMt38=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/Login.js"],"names":["React","useForm","Controller","yupResolver","Yup","Box","Button","Card","Container","Link","Typography","TextField","Login","boxFormSx","mb","width","bgcolor","boxLinkSx","mt","buttonSx","fontSize","height","containerDivStyle","alignItems","display","flexDirection","justifyContent","cardSx","ml","mr","p","errorSx","imgStyle","filter","validationSchema","object","shape","username","string","required","password","onSubmit","data","document","getElementById","style","fetch","then","resp","window","location","handleSubmit","control","formState","mode","resolver","PillLogo","field","ref","fieldState","error","message","isValid"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,iBAAlC;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAEA;;;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B;AACA,QAAMC,SAAS,GAAG;AACd,4BAAwB;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE;AAAf,KADV;AAEdC,IAAAA,OAAO,EAAE;AAFK,GAAlB;AAKA,QAAMC,SAAS,GAAG;AACdC,IAAAA,EAAE,EAAE;AADU,GAAlB;AAIA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,QAAQ,EAAE,MADG;AAEbC,IAAAA,MAAM,EAAE,QAFK;AAGbP,IAAAA,EAAE,EAAE,GAHS;AAIbC,IAAAA,KAAK,EAAE;AAJM,GAAjB;AAOA,QAAMO,iBAAiB,GAAG;AACtBC,IAAAA,UAAU,EAAE,QADU;AAEtBC,IAAAA,OAAO,EAAE,MAFa;AAGtBC,IAAAA,aAAa,EAAE,QAHO;AAItBC,IAAAA,cAAc,EAAE;AAJM,GAA1B;AAOA,QAAMC,MAAM,GAAG;AACXX,IAAAA,OAAO,EAAE,kBADE;AAEXY,IAAAA,EAAE,EAAE,CAFO;AAGXV,IAAAA,EAAE,EAAE,CAHO;AAIXW,IAAAA,EAAE,EAAE,CAJO;AAKXC,IAAAA,CAAC,EAAE;AALQ,GAAf;AAQA,QAAMC,OAAO,GAAG;AACZjB,IAAAA,EAAE,EAAE,CADQ;AAEZI,IAAAA,EAAE,EAAE;AAFQ,GAAhB;AAKA,QAAMc,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE,wFADK;AAEbZ,IAAAA,MAAM,EAAE;AAFK,GAAjB,CAtC4B,CA2C5B;;AACA,QAAMa,gBAAgB,GAAG9B,GAAG,CAAC+B,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,IAAAA,QAAQ,EAAEjC,GAAG,CAACkC,MAAJ,GACLC,QADK,CACI,sBADJ,CAD8B;AAGxCC,IAAAA,QAAQ,EAAEpC,GAAG,CAACkC,MAAJ,GACLC,QADK,CACI,sBADJ;AAH8B,GAAnB,CAAzB,CA5C4B,CAmD5B;;AACA,QAAME,QAAQ,GAAIC,IAAD,IAAU;AACvB;AACA,QAAI,EAAEA,IAAI,CAACL,QAAL,KAAkB,MAAlB,IAA4BK,IAAI,CAACF,QAAL,KAAkB,MAAhD,CAAJ,EAA6D;AACzDG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CrB,OAA/C,GAAyD,MAAzD;AACH,KAFD,MAEO;AACHmB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CrB,OAA/C,GAAyD,MAAzD;AACAsB,MAAAA,KAAK,CAAC,iCAAD,CAAL,CACKC,IADL,CACWC,IAAD,IAAU;AACZC,QAAAA,MAAM,CAACC,QAAP,GAAkB,iCAAlB;AACH,OAHL;AAIH;AACJ,GAXD;;AAaA,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAqCpD,OAAO,CAAC;AAC/CqD,IAAAA,IAAI,EAAE,UADyC;AAE/CC,IAAAA,QAAQ,EAAEpD,WAAW,CAAC+B,gBAAD;AAF0B,GAAD,CAAlD;AAKA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAEZ,iBAAT;AAAA,6BACI;AAAK,QAAA,GAAG,EAAC,WAAT;AAAqB,QAAA,GAAG,EAAEkC,QAA1B;AAAoC,QAAA,KAAK,EAAExB;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,UAAd;AAAyB,MAAA,EAAE,EAAEL,MAA7B;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAEwB,YAAY,CAACV,QAAD,CAA5B;AAAwC,QAAA,UAAU,MAAlD;AAAA,+BACI,QAAC,GAAD;AACI,UAAA,EAAE,EAAE5B,SADR;AAAA,kCAII,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,OAAO,EAAEuC,OAFb;AAGI,YAAA,YAAY,EAAE,EAHlB;AAII,YAAA,MAAM,EAAE;AAAA,kBAAC;AAACK,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,GAAD;AAAM,qBAAGD;AAAT,iBAAR;AAAyBE,gBAAAA,UAAU,EAAE;AAACC,kBAAAA;AAAD;AAArC,eAAD;AAAA,kCACJ,QAAC,SAAD,OACQH,KADR;AAEI,gBAAA,QAAQ,MAFZ;AAGI,gBAAA,KAAK,EAAE,CAAC,CAACG,KAHb;AAII,gBAAA,UAAU,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEC,OAJvB;AAKI,gBAAA,EAAE,EAAC,UALP;AAMI,gBAAA,KAAK,EAAC,UANV;AAOI,gBAAA,IAAI,EAAC,UAPT;AAQI,gBAAA,IAAI,EAAC,QART;AASI,gBAAA,QAAQ,EAAEH;AATd;AAAA;AAAA;AAAA;AAAA,sBADI;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAuBI,QAAC,UAAD;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,OAAO,EAAEN,OAFb;AAGI,YAAA,YAAY,EAAE,EAHlB;AAII,YAAA,MAAM,EAAE;AAAA,kBAAC;AAACK,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,GAAD;AAAM,qBAAGD;AAAT,iBAAR;AAAyBE,gBAAAA,UAAU,EAAE;AAACC,kBAAAA;AAAD;AAArC,eAAD;AAAA,kCACJ,QAAC,SAAD,OACQH,KADR;AAEI,gBAAA,QAAQ,MAFZ;AAGI,gBAAA,KAAK,EAAE,CAAC,CAACG,KAHb;AAII,gBAAA,UAAU,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEC,OAJvB;AAKI,gBAAA,EAAE,EAAC,UALP;AAMI,gBAAA,KAAK,EAAC,UANV;AAOI,gBAAA,IAAI,EAAC,UAPT;AAQI,gBAAA,IAAI,EAAC,QART;AASI,gBAAA,QAAQ,EAAEH;AATd;AAAA;AAAA;AAAA;AAAA,sBADI;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eA0CI,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,CAACL,SAAS,CAACS,OAA7B;AAAsC,YAAA,IAAI,EAAC,OAA3C;AAAmD,YAAA,EAAE,EAAE3C,QAAvD;AAAiE,YAAA,IAAI,EAAC,QAAtE;AACQ,YAAA,OAAO,EAAC,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1CJ,eA6CI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,OAAlB;AAA0B,YAAA,EAAE,EAAC,eAA7B;AAA6C,YAAA,KAAK,EAAE;AAACK,cAAAA,OAAO,EAAE;AAAV,aAApD;AAAuE,YAAA,EAAE,EAAEO,OAA3E;AACY,YAAA,OAAO,EAAC,SADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAsDI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEd,SAAT;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAe,UAAA,SAAS,EAAC,OAAzB;AAAA,oBACK;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoEH;;GA1IuBL,K;UAiEuBX,O;;;KAjEvBW,K","sourcesContent":["import * as React from \"react\";\nimport {useForm, Controller} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\n// Material UI Components\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\n\n// Custom Components\nimport PillLogo from \"./pill.svg\";\n\nexport default function Login() {\n    // Styles\n    const boxFormSx = {\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\n        bgcolor: \"background.paper\"\n    };\n\n    const boxLinkSx = {\n        mt: 2\n    };\n\n    const buttonSx = {\n        fontSize: \"17px\",\n        height: \"5.75ch\",\n        mb: 2.5,\n        width: \"100%\"\n    };\n\n    const containerDivStyle = {\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n    };\n\n    const cardSx = {\n        bgcolor: \"background.paper\",\n        ml: 5,\n        mt: 5,\n        mr: 5,\n        p: 5\n    };\n\n    const errorSx = {\n        mb: 5,\n        mt: 2.5\n    };\n\n    const imgStyle = {\n        filter: \"invert(100%) sepia(0%) saturate(0%) hue-rotate(231deg) brightness(103%) contrast(101%)\",\n        height: 250\n    };\n\n    // Form validation using Yup\n    const validationSchema = Yup.object().shape({\n        username: Yup.string()\n            .required(\"Username is required\"),\n        password: Yup.string()\n            .required(\"Password is required\")\n    });\n\n    // Form onSubmit\n    const onSubmit = (data) => {\n        // This is implemented so the error UI for an invalid username/password can be displayed\n        if (!(data.username === \"test\" && data.password === \"pass\")) {\n            document.getElementById(\"userPassError\").style.display = \"flex\";\n        } else {\n            document.getElementById(\"userPassError\").style.display = \"none\";\n            fetch(\"http://localhost:3000/main-menu\")\n                .then((resp) => {\n                    window.location = \"http://localhost:3000/main-menu\";\n                });\n        }\n    };\n\n    const {handleSubmit, control, formState} = useForm({\n        mode: \"onChange\",\n        resolver: yupResolver(validationSchema)\n    });\n\n    return (\n        <Container>\n            <Box sx={containerDivStyle}>\n                <img alt=\"Pill Logo\" src={PillLogo} style={imgStyle}/>\n            </Box>\n\n            <Card variant=\"outlined\" sx={cardSx}>\n                <form onSubmit={handleSubmit(onSubmit)} noValidate>\n                    <Box\n                        sx={boxFormSx}\n                    >\n\n                        <Controller\n                            name=\"username\"\n                            control={control}\n                            defaultValue={\"\"}\n                            render={({field: {ref, ...field}, fieldState: {error}}) => (\n                                <TextField\n                                    {...field}\n                                    required\n                                    error={!!error}\n                                    helperText={error?.message}\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    type=\"search\"\n                                    inputRef={ref}\n                                />\n                            )}\n                        />\n\n                        <Controller\n                            name=\"password\"\n                            control={control}\n                            defaultValue={\"\"}\n                            render={({field: {ref, ...field}, fieldState: {error}}) => (\n                                <TextField\n                                    {...field}\n                                    required\n                                    error={!!error}\n                                    helperText={error?.message}\n                                    id=\"password\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"search\"\n                                    inputRef={ref}\n                                />\n                            )}\n                        />\n\n                        <Button disabled={!formState.isValid} size=\"large\" sx={buttonSx} type=\"submit\"\n                                variant=\"contained\">Login</Button>\n\n                        <Typography color=\"error\" id=\"userPassError\" style={{display: \"none\"}} sx={errorSx}\n                                    variant=\"inherit\">\n                            The username and password are invalid\n                        </Typography>\n                    </Box>\n                </form>\n\n                <Box sx={boxLinkSx}>\n                    <Link href=\"/\" underline=\"hover\">\n                        {\"Create an account\"}\n                    </Link>\n                </Box>\n            </Card>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}