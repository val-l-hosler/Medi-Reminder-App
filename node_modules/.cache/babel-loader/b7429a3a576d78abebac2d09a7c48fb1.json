{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Registered Reminders\\\\DisplayReminders.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // Material UI Components\n\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\"; // Custom Components\n\nimport NoRegisteredReminders from \"./NoRegisteredReminders.js\";\nimport Reminder from \"./Reminder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerSx = {\n  pl: 5,\n  pr: 5,\n  width: \"100%\"\n};\nexport default function DisplayReminders() {\n  _s();\n\n  // This is the array of reminder objects that will be displayed on the cards\n  const reminderList = localStorage.getItem(\"reminders\");\n  let parsedList = JSON.parse(reminderList); // This forces the DisplayReminder component to re-render if a reminder is deleted\n\n  const [updated, setUpdated] = useState(false);\n  let reminderComps;\n\n  if (parsedList) {\n    parsedList = parsedList.filter(index => index.submitted === true);\n    reminderComps = parsedList.map(reminder => {\n      return /*#__PURE__*/_jsxDEV(Reminder, {\n        reminder: reminder,\n        updated: updated,\n        setUpdated: setUpdated,\n        parsedList: parsedList\n      }, \"Reminder_\" + reminder.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    });\n  } else {\n    reminderComps = /*#__PURE__*/_jsxDEV(NoRegisteredReminders, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: containerSx,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        flexDirection: \"column\"\n      },\n      children: reminderComps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DisplayReminders, \"pjG7K5oPhWzCY/iFyMNiH3SMaG0=\");\n\n_c = DisplayReminders;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayReminders\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Registered Reminders/DisplayReminders.js"],"names":["useState","Box","Container","NoRegisteredReminders","Reminder","containerSx","pl","pr","width","DisplayReminders","reminderList","localStorage","getItem","parsedList","JSON","parse","updated","setUpdated","reminderComps","filter","index","submitted","map","reminder","id","flexDirection"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAEA;;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,EAAE,EAAE,CAFY;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAApB;AAMA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC;AACA,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAjB,CAHuC,CAKvC;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AAEA,MAAIkB,aAAJ;;AAEA,MAAIL,UAAJ,EAAgB;AACZA,IAAAA,UAAU,GAAGA,UAAU,CAACM,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,SAAN,KAAoB,IAAjD,CAAb;AAEAH,IAAAA,aAAa,GAAGL,UAAU,CAACS,GAAX,CAAgBC,QAAD,IAAc;AACzC,0BAAQ,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,QAApB;AAA8B,QAAA,OAAO,EAAEP,OAAvC;AAAgD,QAAA,UAAU,EAAEC,UAA5D;AAAwE,QAAA,UAAU,EAAEJ;AAApF,SACe,cAAcU,QAAQ,CAACC,EADtC;AAAA;AAAA;AAAA;AAAA,cAAR;AAEH,KAHe,CAAhB;AAIH,GAPD,MAOO;AACHN,IAAAA,aAAa,gBAAG,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YAAhB;AACH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAEb,WAAf;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAACoB,QAAAA,aAAa,EAAE;AAAhB,OAAZ;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA5BuBT,gB;;KAAAA,gB","sourcesContent":["import {useState} from \"react\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n// Custom Components\r\nimport NoRegisteredReminders from \"./NoRegisteredReminders.js\";\r\nimport Reminder from \"./Reminder\";\r\n\r\nconst containerSx = {\r\n    pl: 5,\r\n    pr: 5,\r\n    width: \"100%\"\r\n};\r\n\r\nexport default function DisplayReminders() {\r\n    // This is the array of reminder objects that will be displayed on the cards\r\n    const reminderList = localStorage.getItem(\"reminders\");\r\n    let parsedList = JSON.parse(reminderList);\r\n\r\n    // This forces the DisplayReminder component to re-render if a reminder is deleted\r\n    const [updated, setUpdated] = useState(false);\r\n\r\n    let reminderComps;\r\n\r\n    if (parsedList) {\r\n        parsedList = parsedList.filter((index) => index.submitted === true);\r\n\r\n        reminderComps = parsedList.map((reminder) => {\r\n            return (<Reminder reminder={reminder} updated={updated} setUpdated={setUpdated} parsedList={parsedList}\r\n                              key={\"Reminder_\" + reminder.id}/>)\r\n        });\r\n    } else {\r\n        reminderComps = <NoRegisteredReminders/>;\r\n    }\r\n\r\n    return (\r\n        <Container sx={containerSx}>\r\n            <Box style={{flexDirection: \"column\"}}>\r\n                {reminderComps}\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}