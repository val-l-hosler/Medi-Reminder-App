{"ast":null,"code":"\"use strict\";\n\nfunction e(e) {\n  if (e && e.__esModule) return e;\n  var t = Object.create(null);\n  return e && Object.keys(e).forEach(function (r) {\n    if (\"default\" !== r) {\n      var s = Object.getOwnPropertyDescriptor(e, r);\n      Object.defineProperty(t, r, s.get ? s : {\n        enumerable: !0,\n        get: function () {\n          return e[r];\n        }\n      });\n    }\n  }), t.default = e, Object.freeze(t);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar t = e(require(\"react\")),\n    r = e => \"checkbox\" === e.type,\n    s = e => e instanceof Date,\n    a = e => null == e;\n\nconst n = e => \"object\" == typeof e;\n\nvar i = e => !a(e) && !Array.isArray(e) && n(e) && !s(e),\n    o = e => i(e) && e.target ? r(e.target) ? e.target.checked : e.target.value : e,\n    u = (e, t) => [...e].some(e => (e => e.substring(0, e.search(/.\\d/)) || e)(t) === e),\n    l = e => e.filter(Boolean),\n    c = e => void 0 === e,\n    d = (e, t, r) => {\n  if (i(e) && t) {\n    const s = l(t.split(/[,[\\].]+?/)).reduce((e, t) => a(e) ? e : e[t], e);\n    return c(s) || s === e ? c(e[t]) ? r : e[t] : s;\n  }\n};\n\nconst f = \"blur\",\n      g = \"change\",\n      m = \"onBlur\",\n      y = \"onChange\",\n      b = \"onSubmit\",\n      h = \"onTouched\",\n      p = \"all\",\n      _ = \"max\",\n      v = \"min\",\n      x = \"maxLength\",\n      j = \"minLength\",\n      O = \"pattern\",\n      F = \"required\",\n      V = \"validate\";\n\nvar A = (e, t) => {\n  const r = Object.assign({}, e);\n  return delete r[t], r;\n};\n\nconst w = t.createContext(null),\n      S = () => t.useContext(w);\n\nvar k = function (e, t, r) {\n  let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n\n  function a(a) {\n    return () => {\n      if (a in e) return t[a] !== p && (t[a] = !s || p), r && (r[a] = !0), e[a];\n    };\n  }\n\n  const n = {};\n\n  for (const t in e) Object.defineProperty(n, t, {\n    get: a(t)\n  });\n\n  return n;\n},\n    D = e => i(e) && !Object.keys(e).length,\n    C = (e, t, r) => {\n  const s = A(e, \"name\");\n  return D(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find(e => t[e] === (!r || p));\n},\n    E = e => Array.isArray(e) ? e : [e],\n    B = (e, t) => !e || !t || e === t || E(e).some(e => e && (e.startsWith(t) || t.startsWith(e)));\n\nconst U = e => {\n  e.current && (e.current.unsubscribe(), e.current = void 0);\n};\n\nfunction T(e) {\n  const r = t.useRef();\n  (_ref => {\n    let {\n      _subscription: e,\n      props: t\n    } = _ref;\n    t.disabled ? U(e) : e.current || (e.current = t.subject.subscribe({\n      next: t.callback\n    }));\n  })({\n    _subscription: r,\n    props: e\n  }), t.useEffect(() => () => U(r), []);\n}\n\nfunction M(e) {\n  const r = S(),\n        {\n    control: s = r.control,\n    disabled: a,\n    name: n\n  } = e || {},\n        [i, o] = t.useState(s._formState),\n        u = t.useRef({\n    isDirty: !1,\n    dirtyFields: !1,\n    touchedFields: !1,\n    isValidating: !1,\n    isValid: !1,\n    errors: !1\n  }),\n        l = t.useRef(n);\n  return l.current = n, T({\n    disabled: a,\n    callback: e => B(l.current, e.name) && C(e, u.current) && o(Object.assign(Object.assign({}, s._formState), e)),\n    subject: s._subjects.state\n  }), k(i, s._proxyFormState, u.current, !1);\n}\n\nvar N = e => \"string\" == typeof e;\n\nfunction R(e, t, r, s) {\n  const a = Array.isArray(e);\n  return N(e) ? (s && t.watch.add(e), d(r, e)) : a ? e.map(e => (s && t.watch.add(e), d(r, e))) : (s && (t.watchAll = !0), r);\n}\n\nfunction L(e) {\n  const r = S(),\n        {\n    control: s = r.control,\n    name: a,\n    defaultValue: n,\n    disabled: o\n  } = e || {},\n        u = t.useRef(a);\n  u.current = a, T({\n    disabled: o,\n    subject: s._subjects.watch,\n    callback: e => {\n      if (B(u.current, e.name)) {\n        const e = R(u.current, s._names, s._formValues);\n        d(i(e) ? Object.assign({}, e) : Array.isArray(e) ? [...e] : e);\n      }\n    }\n  });\n  const [l, d] = t.useState(c(n) ? s._getWatch(a) : n);\n  return t.useEffect(() => {\n    s._removeUnmounted();\n  }), l;\n}\n\nfunction P(e) {\n  const r = S(),\n        {\n    name: s,\n    control: a = r.control,\n    shouldUnregister: n\n  } = e,\n        i = L({\n    control: a,\n    name: s,\n    defaultValue: d(a._formValues, s, d(a._defaultValues, s, e.defaultValue))\n  }),\n        l = M({\n    control: a,\n    name: s\n  });\n  t.useRef(s).current = s;\n  const c = a.register(s, Object.assign(Object.assign({}, e.rules), {\n    value: i\n  }));\n  return t.useEffect(() => {\n    const e = (e, t) => {\n      const r = d(a._fields, e);\n      r && (r._f.mount = t);\n    };\n\n    return e(s, !0), () => {\n      const t = a._options.shouldUnregister || n;\n      (u(a._names.array, s) ? t && !a._stateFlags.action : t) ? a.unregister(s) : e(s, !1);\n    };\n  }, [s, a, n]), {\n    field: {\n      onChange: e => {\n        c.onChange({\n          target: {\n            value: o(e),\n            name: s\n          },\n          type: g\n        });\n      },\n      onBlur: () => {\n        c.onBlur({\n          target: {\n            value: i,\n            name: s\n          },\n          type: f\n        });\n      },\n      name: s,\n      value: i,\n      ref: e => {\n        const t = d(a._fields, s);\n        e && t && e.focus && (t._f.ref = {\n          focus: () => e.focus(),\n          setCustomValidity: t => e.setCustomValidity(t),\n          reportValidity: () => e.reportValidity()\n        });\n      }\n    },\n    formState: l,\n    fieldState: {\n      invalid: !!d(l.errors, s),\n      isDirty: !!d(l.dirtyFields, s),\n      isTouched: !!d(l.touchedFields, s),\n      error: d(l.errors, s)\n    }\n  };\n}\n\nvar W = (e, t, r, s, a) => t ? Object.assign(Object.assign({}, r[e]), {\n  types: Object.assign(Object.assign({}, r[e] && r[e].types ? r[e].types : {}), {\n    [s]: a || !0\n  })\n}) : {},\n    q = e => /^\\w*$/.test(e),\n    I = e => l(e.replace(/[\"|']|\\]/g, \"\").split(/\\.|\\[/));\n\nfunction $(e, t, r) {\n  let s = -1;\n  const a = q(t) ? [t] : I(t),\n        n = a.length,\n        o = n - 1;\n\n  for (; ++s < n;) {\n    const t = a[s];\n    let n = r;\n\n    if (s !== o) {\n      const r = e[t];\n      n = i(r) || Array.isArray(r) ? r : isNaN(+a[s + 1]) ? {} : [];\n    }\n\n    e[t] = n, e = e[t];\n  }\n\n  return e;\n}\n\nconst H = (e, t, r) => {\n  for (const s of r || Object.keys(e)) {\n    const r = d(e, s);\n\n    if (r) {\n      const e = r._f,\n            s = A(r, \"_f\");\n\n      if (e && t(e.name)) {\n        if (e.ref.focus && c(e.ref.focus())) break;\n\n        if (e.refs) {\n          e.refs[0].focus();\n          break;\n        }\n      } else i(s) && H(s, t);\n    }\n  }\n};\n\nvar z = function (e, t) {\n  let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return r.shouldFocus || c(r.shouldFocus) ? r.focusName || `${e}.${c(r.focusIndex) ? t : r.focusIndex}.` : \"\";\n},\n    G = (e, t, r) => e.map((e, s) => {\n  const a = t.current[s];\n  return Object.assign(Object.assign({}, e), a ? {\n    [r]: a[r]\n  } : {});\n}),\n    J = () => {\n  const e = \"undefined\" == typeof performance ? Date.now() : 1e3 * performance.now();\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, t => {\n    const r = (16 * Math.random() + e) % 16 | 0;\n    return (\"x\" == t ? r : 3 & r | 8).toString(16);\n  });\n},\n    K = function () {\n  let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let t = arguments.length > 1 ? arguments[1] : undefined;\n  return e.map(e => Object.assign(Object.assign({}, e[t] ? {} : {\n    [t]: J()\n  }), e));\n};\n\nfunction Q(e, t) {\n  return [...E(e), ...E(t)];\n}\n\nvar X = e => Array.isArray(e) ? e.map(() => {}) : void 0;\n\nfunction Y(e, t, r) {\n  return [...e.slice(0, t), ...E(r), ...e.slice(t)];\n}\n\nvar Z = (e, t, r) => Array.isArray(e) ? (c(e[r]) && (e[r] = void 0), e.splice(r, 0, e.splice(t, 1)[0]), e) : [];\n\nfunction ee(e, t) {\n  return [...E(t), ...E(e)];\n}\n\nvar te = (e, t) => c(t) ? [] : function (e, t) {\n  let r = 0;\n  const s = [...e];\n\n  for (const e of t) s.splice(e - r, 1), r++;\n\n  return l(s).length ? s : [];\n}(e, E(t).sort((e, t) => e - t)),\n    re = (e, t, r) => {\n  e[t] = [e[r], e[r] = e[t]][0];\n},\n    se = (e, t, r) => (e[t] = r, e);\n\nvar ae = e => \"function\" == typeof e;\n\nfunction ne(e) {\n  let t;\n  const r = Array.isArray(e);\n  if (e instanceof Date) t = new Date(e);else if (e instanceof Set) t = new Set(e);else {\n    if (!r && !i(e)) return e;\n    t = r ? [] : {};\n\n    for (const r in e) {\n      if (ae(e[r])) {\n        t = e;\n        break;\n      }\n\n      t[r] = ne(e[r]);\n    }\n  }\n  return t;\n}\n\nfunction ie() {\n  let e = [];\n  return {\n    get observers() {\n      return e;\n    },\n\n    next: t => {\n      for (const r of e) r.next(t);\n    },\n    subscribe: t => (e.push(t), {\n      unsubscribe: () => {\n        e = e.filter(e => e !== t);\n      }\n    }),\n    unsubscribe: () => {\n      e = [];\n    }\n  };\n}\n\nvar oe = e => a(e) || !n(e);\n\nfunction ue(e, t) {\n  if (oe(e) || oe(t)) return e === t;\n  if (s(e) && s(t)) return e.getTime() === t.getTime();\n  const r = Object.keys(e),\n        a = Object.keys(t);\n  if (r.length !== a.length) return !1;\n\n  for (const n of r) {\n    const r = e[n];\n    if (!a.includes(n)) return !1;\n\n    if (\"ref\" !== n) {\n      const e = t[n];\n      if (s(r) && s(e) || i(r) && i(e) || Array.isArray(r) && Array.isArray(e) ? !ue(r, e) : r !== e) return !1;\n    }\n  }\n\n  return !0;\n}\n\nvar le = e => ({\n  isOnSubmit: !e || e === b,\n  isOnBlur: e === m,\n  isOnChange: e === y,\n  isOnAll: e === p,\n  isOnTouch: e === h\n}),\n    ce = e => \"boolean\" == typeof e,\n    de = e => \"file\" === e.type,\n    fe = e => e instanceof HTMLElement,\n    ge = e => \"select-multiple\" === e.type,\n    me = e => \"radio\" === e.type,\n    ye = \"undefined\" != typeof window && void 0 !== window.HTMLElement && \"undefined\" != typeof document,\n    be = e => fe(e) && document.contains(e);\n\nfunction he(e, t) {\n  const r = q(t) ? [t] : I(t),\n        s = 1 == r.length ? e : function (e, t) {\n    const r = t.slice(0, -1).length;\n    let s = 0;\n\n    for (; s < r;) e = c(e) ? s++ : e[t[s++]];\n\n    return e;\n  }(e, r),\n        a = r[r.length - 1];\n  let n;\n  s && delete s[a];\n\n  for (let t = 0; t < r.slice(0, -1).length; t++) {\n    let s,\n        a = -1;\n    const o = r.slice(0, -(t + 1)),\n          u = o.length - 1;\n\n    for (t > 0 && (n = e); ++a < o.length;) {\n      const t = o[a];\n      s = s ? s[t] : e[t], u === a && (i(s) && D(s) || Array.isArray(s) && !s.filter(e => i(e) && !D(e) || ce(e)).length) && (n ? delete n[t] : delete e[t]), n = s;\n    }\n  }\n\n  return e;\n}\n\nconst pe = {\n  value: !1,\n  isValid: !1\n},\n      _e = {\n  value: !0,\n  isValid: !0\n};\n\nvar ve = e => {\n  if (Array.isArray(e)) {\n    if (e.length > 1) {\n      const t = e.filter(e => e && e.checked && !e.disabled).map(e => e.value);\n      return {\n        value: t,\n        isValid: !!t.length\n      };\n    }\n\n    return e[0].checked && !e[0].disabled ? e[0].attributes && !c(e[0].attributes.value) ? c(e[0].value) || \"\" === e[0].value ? _e : {\n      value: e[0].value,\n      isValid: !0\n    } : _e : pe;\n  }\n\n  return pe;\n},\n    xe = (e, _ref2) => {\n  let {\n    valueAsNumber: t,\n    valueAsDate: r,\n    setValueAs: s\n  } = _ref2;\n  return c(e) ? e : t ? \"\" === e ? NaN : +e : r ? new Date(e) : s ? s(e) : e;\n};\n\nconst je = {\n  isValid: !1,\n  value: null\n};\n\nvar Oe = e => Array.isArray(e) ? e.reduce((e, t) => t && t.checked && !t.disabled ? {\n  isValid: !0,\n  value: t.value\n} : e, je) : je;\n\nfunction Fe(e) {\n  const t = e.ref;\n  if (!(e.refs ? e.refs.every(e => e.disabled) : t.disabled)) return de(t) ? t.files : me(t) ? Oe(e.refs).value : ge(t) ? [...t.selectedOptions].map(_ref3 => {\n    let {\n      value: e\n    } = _ref3;\n    return e;\n  }) : r(t) ? ve(e.refs).value : xe(c(t.value) ? e.ref.value : t.value, e);\n}\n\nfunction Ve(e, t, r) {\n  const s = d(e, r);\n  if (s || q(r)) return {\n    error: s,\n    name: r\n  };\n  const a = r.split(\".\");\n\n  for (; a.length;) {\n    const s = a.join(\".\"),\n          n = d(t, s),\n          i = d(e, s);\n    if (n && !Array.isArray(n) && r !== s) return {\n      name: r\n    };\n    if (i && i.type) return {\n      name: s,\n      error: i\n    };\n    a.pop();\n  }\n\n  return {\n    name: r\n  };\n}\n\nfunction Ae(e, t, r, s, n) {\n  let i = -1;\n\n  for (; ++i < e.length;) {\n    for (const s in e[i]) Array.isArray(e[i][s]) ? (!r[i] && (r[i] = {}), r[i][s] = [], Ae(e[i][s], d(t[i] || {}, s, []), r[i][s], r[i], s)) : !a(t) && ue(d(t[i] || {}, s), e[i][s]) ? $(r[i] || {}, s) : r[i] = Object.assign(Object.assign({}, r[i]), {\n      [s]: !0\n    });\n\n    s && !r.length && delete s[n];\n  }\n\n  return r;\n}\n\nvar we = (e, t, r) => function e(t, r) {\n  if (oe(t) || oe(r)) return r;\n\n  for (const s in r) {\n    const a = t[s],\n          n = r[s];\n\n    try {\n      t[s] = i(a) && i(n) || Array.isArray(a) && Array.isArray(n) ? e(a, n) : n;\n    } catch (e) {}\n  }\n\n  return t;\n}(Ae(e, t, r.slice(0, e.length)), Ae(t, e, r.slice(0, e.length))),\n    Se = (e, t) => !l(d(e, t, [])).length && he(e, t),\n    ke = e => N(e) || t.isValidElement(e),\n    De = e => e instanceof RegExp;\n\nfunction Ce(e, t) {\n  let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"validate\";\n  if (ke(e) || Array.isArray(e) && e.every(ke) || ce(e) && !e) return {\n    type: r,\n    message: ke(e) ? e : \"\",\n    ref: t\n  };\n}\n\nvar Ee = e => i(e) && !De(e) ? e : {\n  value: e,\n  message: \"\"\n},\n    Be = async (e, t, s, n) => {\n  const {\n    ref: o,\n    refs: u,\n    required: l,\n    maxLength: c,\n    minLength: d,\n    min: f,\n    max: g,\n    pattern: m,\n    validate: y,\n    name: b,\n    valueAsNumber: h,\n    mount: p,\n    disabled: A\n  } = e._f;\n  if (!p || A) return {};\n\n  const w = u ? u[0] : o,\n        S = e => {\n    n && w.reportValidity && (w.setCustomValidity(ce(e) ? \"\" : e || \" \"), w.reportValidity());\n  },\n        k = {},\n        C = me(o),\n        E = r(o),\n        B = C || E,\n        U = (h || de(o)) && !o.value || \"\" === t || Array.isArray(t) && !t.length,\n        T = W.bind(null, b, s, k),\n        M = function (e, t, r) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : x;\n    let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : j;\n    const n = e ? t : r;\n    k[b] = Object.assign({\n      type: e ? s : a,\n      message: n,\n      ref: o\n    }, T(e ? s : a, n));\n  };\n\n  if (l && (!B && (U || a(t)) || ce(t) && !t || E && !ve(u).isValid || C && !Oe(u).isValid)) {\n    const {\n      value: e,\n      message: t\n    } = ke(l) ? {\n      value: !!l,\n      message: l\n    } : Ee(l);\n    if (e && (k[b] = Object.assign({\n      type: F,\n      message: t,\n      ref: w\n    }, T(F, t)), !s)) return S(t), k;\n  }\n\n  if (!(U || a(f) && a(g))) {\n    let e, r;\n    const n = Ee(g),\n          i = Ee(f);\n\n    if (isNaN(t)) {\n      const s = o.valueAsDate || new Date(t);\n      N(n.value) && (e = s > new Date(n.value)), N(i.value) && (r = s < new Date(i.value));\n    } else {\n      const s = o.valueAsNumber || parseFloat(t);\n      a(n.value) || (e = s > n.value), a(i.value) || (r = s < i.value);\n    }\n\n    if ((e || r) && (M(!!e, n.message, i.message, _, v), !s)) return S(k[b].message), k;\n  }\n\n  if ((c || d) && !U && N(t)) {\n    const e = Ee(c),\n          r = Ee(d),\n          n = !a(e.value) && t.length > e.value,\n          i = !a(r.value) && t.length < r.value;\n    if ((n || i) && (M(n, e.message, r.message), !s)) return S(k[b].message), k;\n  }\n\n  if (m && !U && N(t)) {\n    const {\n      value: e,\n      message: r\n    } = Ee(m);\n    if (De(e) && !t.match(e) && (k[b] = Object.assign({\n      type: O,\n      message: r,\n      ref: o\n    }, T(O, r)), !s)) return S(r), k;\n  }\n\n  if (y) if (ae(y)) {\n    const e = Ce(await y(t), w);\n    if (e && (k[b] = Object.assign(Object.assign({}, e), T(V, e.message)), !s)) return S(e.message), k;\n  } else if (i(y)) {\n    let e = {};\n\n    for (const r in y) {\n      if (!D(e) && !s) break;\n      const a = Ce(await y[r](t), w, r);\n      a && (e = Object.assign(Object.assign({}, a), T(r, a.message)), S(a.message), s && (k[b] = e));\n    }\n\n    if (!D(e) && (k[b] = Object.assign({\n      ref: w\n    }, e), !s)) return k;\n  }\n  return S(!0), k;\n};\n\nconst Ue = {\n  mode: b,\n  reValidateMode: y,\n  shouldFocusError: !0\n},\n      Te = \"undefined\" == typeof window;\n\nfunction Me() {\n  let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let t,\n      n = Object.assign(Object.assign({}, Ue), e),\n      i = {\n    isDirty: !1,\n    isValidating: !1,\n    dirtyFields: {},\n    isSubmitted: !1,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: !1,\n    isSubmitSuccessful: !1,\n    isValid: !1,\n    errors: {}\n  },\n      o = {},\n      g = n.defaultValues || {},\n      m = n.shouldUnregister ? {} : ne(g),\n      y = {\n    action: !1,\n    mount: !1,\n    watch: !1\n  },\n      b = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  },\n      h = 0,\n      _ = {};\n\n  const v = {\n    isDirty: !1,\n    dirtyFields: !1,\n    touchedFields: !1,\n    isValidating: !1,\n    isValid: !1,\n    errors: !1\n  },\n        x = {\n    watch: ie(),\n    array: ie(),\n    state: ie()\n  },\n        j = le(n.mode),\n        O = le(n.reValidateMode),\n        F = n.criteriaMode === p,\n        V = (e, t) => !t && (b.watchAll || b.watch.has(e) || b.watch.has((e.match(/\\w+/) || [])[0])),\n        w = async e => {\n    let t = !1;\n    return v.isValid && (t = n.resolver ? D((await T()).errors) : await M(o, !0), e || t === i.isValid || (i.isValid = t, x.state.next({\n      isValid: t\n    }))), t;\n  },\n        S = (e, t) => ($(i.errors, e, t), x.state.next({\n    errors: i.errors\n  })),\n        k = (e, t, r) => {\n    const s = d(o, e);\n\n    if (s) {\n      const a = d(m, e, d(g, e));\n      c(a) || r && r.defaultChecked || t ? $(m, e, t ? a : Fe(s._f)) : W(e, a);\n    }\n\n    y.mount && w();\n  },\n        C = function (e, t, r) {\n    let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n    let a = !1;\n    const n = {\n      name: e\n    },\n          o = d(i.touchedFields, e);\n\n    if (v.isDirty) {\n      const e = i.isDirty;\n      i.isDirty = n.isDirty = L(), a = e !== n.isDirty;\n    }\n\n    if (v.dirtyFields && !r) {\n      const r = d(i.dirtyFields, e);\n      ue(d(g, e), t) ? he(i.dirtyFields, e) : $(i.dirtyFields, e, !0), n.dirtyFields = i.dirtyFields, a = a || r !== d(i.dirtyFields, e);\n    }\n\n    return r && !o && ($(i.touchedFields, e, r), n.touchedFields = i.touchedFields, a = a || v.touchedFields && o !== r), a && s && x.state.next(n), a ? n : {};\n  },\n        B = (e, t) => ($(i.dirtyFields, e, we(t, d(g, e, []), d(i.dirtyFields, e, []))), Se(i.dirtyFields, e)),\n        U = async (r, s, a, n, o) => {\n    const u = d(i.errors, s),\n          l = v.isValid && i.isValid !== a;\n    var c, f;\n\n    if (e.delayError && n ? (t = t || (c = S, f = e.delayError, function () {\n      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n        e[_key] = arguments[_key];\n      }\n\n      clearTimeout(h), h = window.setTimeout(() => c(...e), f);\n    }), t(s, n)) : (clearTimeout(h), n ? $(i.errors, s, n) : he(i.errors, s)), ((n ? !ue(u, n) : u) || !D(o) || l) && !r) {\n      const e = Object.assign(Object.assign(Object.assign({}, o), l ? {\n        isValid: a\n      } : {}), {\n        errors: i.errors,\n        name: s\n      });\n      i = Object.assign(Object.assign({}, i), e), x.state.next(e);\n    }\n\n    _[s]--, v.isValidating && !_[s] && (x.state.next({\n      isValidating: !1\n    }), _ = {});\n  },\n        T = async e => n.resolver ? await n.resolver(Object.assign({}, m), n.context, ((e, t, r, s) => {\n    const a = {};\n\n    for (const r of e) {\n      const e = d(t, r);\n      e && $(a, r, e._f);\n    }\n\n    return {\n      criteriaMode: r,\n      names: [...e],\n      fields: a,\n      shouldUseNativeValidation: s\n    };\n  })(e || b.mount, o, n.criteriaMode, n.shouldUseNativeValidation)) : {},\n        M = async function (e, t) {\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      valid: !0\n    };\n\n    for (const s in e) {\n      const a = e[s];\n\n      if (a) {\n        const e = a._f,\n              s = A(a, \"_f\");\n\n        if (e) {\n          const s = await Be(a, d(m, e.name), F, n.shouldUseNativeValidation);\n          if (s[e.name] && (r.valid = !1, t)) break;\n          t || (s[e.name] ? $(i.errors, e.name, s[e.name]) : he(i.errors, e.name));\n        }\n\n        s && (await M(s, t, r));\n      }\n    }\n\n    return r.valid;\n  },\n        L = (e, t) => (e && t && $(m, e, t), !ue(J(), g)),\n        P = (e, t, r) => {\n    const s = Object.assign({}, y.mount ? m : c(t) ? g : N(e) ? {\n      [e]: t\n    } : t);\n    return R(e, b, s, r);\n  },\n        W = function (e, t) {\n    let s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const n = d(o, e);\n    let i = t;\n\n    if (n) {\n      const s = n._f;\n      s && ($(m, e, xe(t, s)), i = ye && fe(s.ref) && a(t) ? \"\" : t, de(s.ref) && !N(i) ? s.ref.files = i : ge(s.ref) ? [...s.ref.options].forEach(e => e.selected = i.includes(e.value)) : s.refs ? r(s.ref) ? s.refs.length > 1 ? s.refs.forEach(e => e.checked = Array.isArray(i) ? !!i.find(t => t === e.value) : i === e.value) : s.refs[0].checked = !!i : s.refs.forEach(e => e.checked = e.value === i) : s.ref.value = i);\n    }\n\n    (s.shouldDirty || s.shouldTouch) && C(e, i, s.shouldTouch), s.shouldValidate && G(e);\n  },\n        q = (e, t, r) => {\n    for (const a in t) {\n      const n = t[a],\n            i = `${e}.${a}`,\n            u = d(o, i);\n      !b.array.has(e) && oe(n) && (!u || u._f) || s(n) ? W(i, n, r) : q(i, n, r);\n    }\n  },\n        I = function (e, t) {\n    let r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const s = d(o, e),\n          n = b.array.has(e);\n    $(m, e, t), n ? (x.array.next({\n      name: e,\n      values: m\n    }), (v.isDirty || v.dirtyFields) && r.shouldDirty && (B(e, t), x.state.next({\n      name: e,\n      dirtyFields: i.dirtyFields,\n      isDirty: L(e, t)\n    }))) : !s || s._f || a(t) ? W(e, t, r) : q(e, t, r), V(e) && x.state.next({}), x.watch.next({\n      name: e\n    });\n  },\n        z = async e => {\n    const t = e.target;\n    let r = t.name;\n    const s = d(o, r);\n\n    if (s) {\n      let u, l;\n\n      const c = t.type ? Fe(s._f) : t.value,\n            g = e.type === f,\n            y = !((a = s._f).mount && (a.required || a.min || a.max || a.maxLength || a.minLength || a.pattern || a.validate) || n.resolver || d(i.errors, r) || s._f.deps) || ((e, t, r, s, a) => !a.isOnAll && (!r && a.isOnTouch ? !(t || e) : (r ? s.isOnBlur : a.isOnBlur) ? !e : !(r ? s.isOnChange : a.isOnChange) || e))(g, d(i.touchedFields, r), i.isSubmitted, O, j),\n            b = V(r, g);\n\n      g ? s._f.onBlur && s._f.onBlur(e) : s._f.onChange && s._f.onChange(e), $(m, r, c);\n      const h = C(r, c, g, !1),\n            p = !D(h) || b;\n      if (!g && x.watch.next({\n        name: r,\n        type: e.type\n      }), y) return p && x.state.next(Object.assign({\n        name: r\n      }, b ? {} : h));\n\n      if (!g && b && x.state.next({}), _[r] = (_[r], 1), v.isValidating && x.state.next({\n        isValidating: !0\n      }), n.resolver) {\n        const {\n          errors: e\n        } = await T([r]),\n              t = Ve(i.errors, o, r),\n              s = Ve(e, o, t.name || r);\n        u = s.error, r = s.name, l = D(e);\n      } else u = (await Be(s, d(m, r), F, n.shouldUseNativeValidation))[r], l = await w(!0);\n\n      s._f.deps && G(s._f.deps), U(!1, r, l, u, h);\n    }\n\n    var a;\n  },\n        G = async function (e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let r, s;\n    const a = E(e);\n\n    if (x.state.next({\n      isValidating: !0\n    }), n.resolver) {\n      const t = await (async e => {\n        const {\n          errors: t\n        } = await T();\n        if (e) for (const r of e) {\n          const e = d(t, r);\n          e ? $(i.errors, r, e) : he(i.errors, r);\n        } else i.errors = t;\n        return t;\n      })(c(e) ? e : a);\n      r = D(t), s = e ? !a.some(e => d(t, e)) : r;\n    } else e ? (s = (await Promise.all(a.map(async e => {\n      const t = d(o, e);\n      return await M(t && t._f ? {\n        [e]: t\n      } : t);\n    }))).every(Boolean), (s || i.isValid) && w()) : s = r = await M(o);\n\n    return x.state.next(Object.assign(Object.assign(Object.assign({}, !N(e) || v.isValid && r !== i.isValid ? {} : {\n      name: e\n    }), n.resolver ? {\n      isValid: r\n    } : {}), {\n      errors: i.errors,\n      isValidating: !1\n    })), t.shouldFocus && !s && H(o, e => d(i.errors, e), e ? a : b.mount), s;\n  },\n        J = e => {\n    const t = Object.assign(Object.assign({}, g), y.mount ? m : {});\n    return c(e) ? t : N(e) ? d(t, e) : e.map(e => d(t, e));\n  },\n        K = function (e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (const r of e ? E(e) : b.mount) b.mount.delete(r), b.array.delete(r), d(o, r) && (t.keepValue || (he(o, r), he(m, r)), !t.keepError && he(i.errors, r), !t.keepDirty && he(i.dirtyFields, r), !t.keepTouched && he(i.touchedFields, r), !n.shouldUnregister && !t.keepDefaultValue && he(g, r));\n\n    x.watch.next({}), x.state.next(Object.assign(Object.assign({}, i), t.keepDirty ? {\n      isDirty: L()\n    } : {})), !t.keepIsValid && w();\n  },\n        Q = function (e) {\n    let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const s = d(o, e);\n    return $(o, e, {\n      _f: Object.assign(Object.assign(Object.assign({}, s && s._f ? s._f : {\n        ref: {\n          name: e\n        }\n      }), {\n        name: e,\n        mount: !0\n      }), t)\n    }), b.mount.add(e), !c(t.value) && $(m, e, d(m, e, t.value)), s ? ce(t.disabled) && $(m, e, t.disabled ? void 0 : d(m, e, Fe(s._f))) : k(e, !0), Te ? {\n      name: e\n    } : Object.assign(Object.assign({\n      name: e\n    }, ce(t.disabled) ? {\n      disabled: t.disabled\n    } : {}), {\n      onChange: z,\n      onBlur: z,\n      ref: s => {\n        if (s) {\n          Q(e, t);\n          let a = d(o, e);\n\n          const n = c(s.value) && s.querySelectorAll && s.querySelectorAll(\"input,select,textarea\")[0] || s,\n                i = (e => me(e) || r(e))(n);\n\n          if (n === a._f.ref || i && l(a._f.refs || []).find(e => e === n)) return;\n          a = {\n            _f: i ? Object.assign(Object.assign({}, a._f), {\n              refs: [...l(a._f.refs || []).filter(be), n],\n              ref: {\n                type: n.type,\n                name: e\n              }\n            }) : Object.assign(Object.assign({}, a._f), {\n              ref: n\n            })\n          }, $(o, e, a), (!t || !t.disabled) && k(e, !1, n);\n        } else {\n          const r = d(o, e, {}),\n                s = n.shouldUnregister || t.shouldUnregister;\n          r._f && (r._f.mount = !1), s && (!u(b.array, e) || !y.action) && b.unMount.add(e);\n        }\n      }\n    });\n  };\n\n  return {\n    control: {\n      register: Q,\n      unregister: K,\n      _executeSchema: T,\n      _getWatch: P,\n      _getDirty: L,\n      _updateValid: w,\n      _removeUnmounted: () => {\n        for (const e of b.unMount) {\n          const t = d(o, e);\n          t && (t._f.refs ? t._f.refs.every(e => !be(e)) : !be(t._f.ref)) && K(e);\n        }\n\n        b.unMount = new Set();\n      },\n      _updateFieldArray: function (e, t, r) {\n        let s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n        let a = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : !0;\n        let n = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !0;\n\n        if (y.action = !0, n && d(o, e)) {\n          const s = t(d(o, e), r.argA, r.argB);\n          a && $(o, e, s);\n        }\n\n        if (Array.isArray(d(i.errors, e))) {\n          const s = t(d(i.errors, e), r.argA, r.argB);\n          a && $(i.errors, e, s), Se(i.errors, e);\n        }\n\n        if (v.touchedFields && d(i.touchedFields, e)) {\n          const s = t(d(i.touchedFields, e), r.argA, r.argB);\n          a && $(i.touchedFields, e, s), Se(i.touchedFields, e);\n        }\n\n        (v.dirtyFields || v.isDirty) && B(e, s), x.state.next({\n          isDirty: L(e, s),\n          dirtyFields: i.dirtyFields,\n          errors: i.errors,\n          isValid: i.isValid\n        });\n      },\n      _getFieldArray: t => d(y.mount ? m : g, t, e.shouldUnregister ? d(g, t, []) : []),\n      _subjects: x,\n      _proxyFormState: v,\n\n      get _fields() {\n        return o;\n      },\n\n      set _fields(e) {\n        o = e;\n      },\n\n      get _formValues() {\n        return m;\n      },\n\n      set _formValues(e) {\n        m = e;\n      },\n\n      get _stateFlags() {\n        return y;\n      },\n\n      set _stateFlags(e) {\n        y = e;\n      },\n\n      get _defaultValues() {\n        return g;\n      },\n\n      set _defaultValues(e) {\n        g = e;\n      },\n\n      get _names() {\n        return b;\n      },\n\n      set _names(e) {\n        b = e;\n      },\n\n      get _formState() {\n        return i;\n      },\n\n      set _formState(e) {\n        i = e;\n      },\n\n      get _options() {\n        return n;\n      },\n\n      set _options(e) {\n        n = Object.assign(Object.assign({}, n), e);\n      }\n\n    },\n    trigger: G,\n    register: Q,\n    handleSubmit: (e, t) => async r => {\n      r && (r.preventDefault && r.preventDefault(), r.persist && r.persist());\n      let s = !0,\n          a = Object.assign({}, m);\n      x.state.next({\n        isSubmitting: !0\n      });\n\n      try {\n        if (n.resolver) {\n          const {\n            errors: e,\n            values: t\n          } = await T();\n          i.errors = e, a = t;\n        } else await M(o);\n\n        D(i.errors) && Object.keys(i.errors).every(e => d(a, e)) ? (x.state.next({\n          errors: {},\n          isSubmitting: !0\n        }), await e(a, r)) : (t && (await t(i.errors, r)), n.shouldFocusError && H(o, e => d(i.errors, e), b.mount));\n      } catch (e) {\n        throw s = !1, e;\n      } finally {\n        i.isSubmitted = !0, x.state.next({\n          isSubmitted: !0,\n          isSubmitting: !1,\n          isSubmitSuccessful: D(i.errors) && s,\n          submitCount: i.submitCount + 1,\n          errors: i.errors\n        });\n      }\n    },\n    watch: (e, t) => ae(e) ? x.watch.subscribe({\n      next: r => e(P(void 0, t), r)\n    }) : P(e, t, !0),\n    setValue: I,\n    getValues: J,\n    reset: function (t) {\n      let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const s = t || g,\n            a = ne(s),\n            n = D(t) ? g : a;\n\n      if (r.keepDefaultValues || (g = s), !r.keepValues) {\n        if (ye) for (const e of b.mount) {\n          const t = d(o, e);\n\n          if (t && t._f) {\n            const e = Array.isArray(t._f.refs) ? t._f.refs[0] : t._f.ref;\n\n            try {\n              fe(e) && e.closest(\"form\").reset();\n              break;\n            } catch (e) {}\n          }\n        }\n        m = e.shouldUnregister ? r.keepDefaultValues ? ne(g) : {} : a, o = {}, x.watch.next({\n          values: n\n        }), x.array.next({\n          values: n\n        });\n      }\n\n      b = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: !1,\n        focus: \"\"\n      }, x.state.next({\n        submitCount: r.keepSubmitCount ? i.submitCount : 0,\n        isDirty: r.keepDirty ? i.isDirty : !!r.keepDefaultValues && !ue(t, g),\n        isSubmitted: !!r.keepIsSubmitted && i.isSubmitted,\n        dirtyFields: r.keepDirty ? i.dirtyFields : r.keepDefaultValues && t ? Object.entries(t).reduce((e, _ref4) => {\n          let [t, r] = _ref4;\n          return Object.assign(Object.assign({}, e), {\n            [t]: r !== d(g, t)\n          });\n        }, {}) : {},\n        touchedFields: r.keepTouched ? i.touchedFields : {},\n        errors: r.keepErrors ? i.errors : {},\n        isSubmitting: !1,\n        isSubmitSuccessful: !1\n      }), y.mount = !v.isValid || !!r.keepIsValid, y.watch = !!e.shouldUnregister;\n    },\n    resetField: function (e) {\n      let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      c(t.defaultValue) ? I(e, d(g, e)) : (I(e, t.defaultValue), $(g, e, t.defaultValue)), t.keepTouched || he(i.touchedFields, e), t.keepDirty || (he(i.dirtyFields, e), i.isDirty = t.defaultValue ? L(e, d(g, e)) : L()), t.keepError || (he(i.errors, e), v.isValid && w()), x.state.next(Object.assign({}, i));\n    },\n    clearErrors: e => {\n      e ? E(e).forEach(e => he(i.errors, e)) : i.errors = {}, x.state.next({\n        errors: i.errors,\n        isValid: !0\n      });\n    },\n    unregister: K,\n    setError: (e, t, r) => {\n      const s = (d(o, e, {\n        _f: {}\n      })._f || {}).ref;\n      $(i.errors, e, Object.assign(Object.assign({}, t), {\n        ref: s\n      })), x.state.next({\n        name: e,\n        errors: i.errors,\n        isValid: !1\n      }), r && r.shouldFocus && s && s.focus && s.focus();\n    },\n    setFocus: e => {\n      const t = d(o, e)._f;\n\n      (t.ref.focus ? t.ref : t.refs[0]).focus();\n    }\n  };\n}\n\nexports.Controller = e => e.render(P(e)), exports.FormProvider = e => t.createElement(w.Provider, {\n  value: A(e, \"children\")\n}, e.children), exports.appendErrors = W, exports.get = d, exports.set = $, exports.useController = P, exports.useFieldArray = e => {\n  const r = S(),\n        {\n    control: s = r.control,\n    name: a,\n    keyName: n = \"id\",\n    shouldUnregister: i\n  } = e,\n        [o, u] = t.useState(K(s._getFieldArray(a), n)),\n        l = t.useRef(o),\n        c = t.useRef(a),\n        f = t.useRef(!1);\n  c.current = a, l.current = o, s._names.array.add(a), T({\n    callback: _ref5 => {\n      let {\n        values: e,\n        name: t\n      } = _ref5;\n      t !== c.current && t || u(K(d(e, c.current), n));\n    },\n    subject: s._subjects.array\n  });\n  const g = t.useCallback(e => {\n    const t = ((e, t) => e.map(function () {\n      let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return A(e, t);\n    }))(e, n);\n\n    return f.current = !0, $(s._formValues, a, t), u(e), t;\n  }, [s, a, n]);\n  return t.useEffect(() => {\n    if (s._stateFlags.action = !1, s._names.watchAll) s._subjects.state.next({});else for (const e of s._names.watch) if (a.startsWith(e)) {\n      s._subjects.state.next({});\n\n      break;\n    }\n    f.current && s._executeSchema([a]).then(e => {\n      const t = d(e.errors, a);\n      t && t.type && !d(s._formState.errors, a) && ($(s._formState.errors, a, t), s._subjects.state.next({\n        errors: s._formState.errors\n      }));\n    }), s._subjects.watch.next({\n      name: a,\n      values: s._formValues\n    }), s._names.focus && H(s._fields, e => e.startsWith(s._names.focus)), s._names.focus = \"\", s._proxyFormState.isValid && s._updateValid();\n  }, [o, a, s, n]), t.useEffect(() => (!d(s._formValues, a) && $(s._formValues, a, []), () => {\n    (s._options.shouldUnregister || i) && s.unregister(a);\n  }), [a, s, n, i]), {\n    swap: t.useCallback((e, t) => {\n      const r = G(s._getFieldArray(a), l, n);\n      re(r, e, t), s._updateFieldArray(a, re, {\n        argA: e,\n        argB: t\n      }, g(r), !1);\n    }, [g, a, s, n]),\n    move: t.useCallback((e, t) => {\n      const r = G(s._getFieldArray(a), l, n);\n      Z(r, e, t), s._updateFieldArray(a, Z, {\n        argA: e,\n        argB: t\n      }, g(r), !1);\n    }, [g, a, s, n]),\n    prepend: t.useCallback((e, t) => {\n      const r = ee(G(s._getFieldArray(a), l, n), K(E(e), n));\n      s._updateFieldArray(a, ee, {\n        argA: X(e)\n      }, g(r)), s._names.focus = z(a, 0, t);\n    }, [g, a, s, n]),\n    append: t.useCallback((e, t) => {\n      const r = E(e),\n            i = Q(G(s._getFieldArray(a), l, n), K(r, n));\n      s._updateFieldArray(a, Q, {\n        argA: X(e)\n      }, g(i)), s._names.focus = z(a, i.length - r.length, t);\n    }, [g, a, s, n]),\n    remove: t.useCallback(e => {\n      const t = te(G(s._getFieldArray(a), l, n), e);\n\n      s._updateFieldArray(a, te, {\n        argA: e\n      }, g(t));\n    }, [g, a, s, n]),\n    insert: t.useCallback((e, t, r) => {\n      const i = Y(G(s._getFieldArray(a), l, n), e, K(E(t), n));\n      s._updateFieldArray(a, Y, {\n        argA: e,\n        argB: X(t)\n      }, g(i)), s._names.focus = z(a, e, r);\n    }, [g, a, s, n]),\n    update: t.useCallback((e, t) => {\n      const r = G(s._getFieldArray(a), l, n),\n            i = se(r, e, t);\n      l.current = K(i, n), s._updateFieldArray(a, se, {\n        argA: e,\n        argB: t\n      }, g(l.current), !0, !1);\n    }, [g, a, s, n]),\n    replace: t.useCallback(e => {\n      const t = K(E(e), n);\n\n      s._updateFieldArray(a, () => t, {}, g(t), !0, !1);\n    }, [g, a, s, n]),\n    fields: o\n  };\n}, exports.useForm = function () {\n  let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const r = t.useRef(),\n        [s, a] = t.useState({\n    isDirty: !1,\n    isValidating: !1,\n    dirtyFields: {},\n    isSubmitted: !1,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: !1,\n    isSubmitSuccessful: !1,\n    isValid: !1,\n    errors: {}\n  });\n  r.current ? r.current.control._options = e : r.current = Object.assign(Object.assign({}, Me(e)), {\n    formState: s\n  });\n  const n = r.current.control;\n  return T({\n    subject: n._subjects.state,\n    callback: e => {\n      C(e, n._proxyFormState, !0) && (n._formState = Object.assign(Object.assign({}, n._formState), e), a(Object.assign({}, n._formState)));\n    }\n  }), t.useEffect(() => {\n    n._stateFlags.mount || (n._proxyFormState.isValid && n._updateValid(), n._stateFlags.mount = !0), n._stateFlags.watch && (n._stateFlags.watch = !1, n._subjects.state.next({})), n._removeUnmounted();\n  }), t.useEffect(() => () => Object.values(n._subjects).forEach(e => e.unsubscribe()), [n]), r.current.formState = k(s, n._proxyFormState), r.current;\n}, exports.useFormContext = S, exports.useFormState = M, exports.useWatch = L;","map":{"version":3,"sources":["../src/utils/isCheckBoxInput.ts","../src/utils/isDateObject.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isObject.ts","../src/logic/getControllerValue.ts","../src/logic/isNameInFieldArray.ts","../src/logic/getNodeParentName.ts","../src/utils/compact.ts","../src/utils/isUndefined.ts","../src/utils/get.ts","../src/constants.ts","../src/utils/omit.ts","../src/useFormContext.tsx","../src/logic/getProxyFormState.ts","../src/utils/isEmptyObject.ts","../src/logic/shouldRenderFormState.ts","../src/utils/convertToArrayPayload.ts","../src/logic/shouldSubscribeByName.ts","../src/useSubscribe.ts","../src/useFormState.ts","../src/utils/isString.ts","../src/logic/generateWatchOutput.ts","../src/useWatch.ts","../src/useController.ts","../src/logic/appendErrors.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/focusFieldBy.ts","../src/logic/getFocusFieldName.ts","../src/logic/mapCurrentIds.ts","../src/logic/generateId.ts","../src/logic/mapId.ts","../src/utils/append.ts","../src/utils/fillEmptyArray.ts","../src/utils/insert.ts","../src/utils/move.ts","../src/utils/prepend.ts","../src/utils/remove.ts","../src/utils/swap.ts","../src/utils/update.ts","../src/utils/isFunction.ts","../src/utils/cloneObject.ts","../src/utils/createSubject.ts","../src/utils/isPrimitive.ts","../src/utils/deepEqual.ts","../src/utils/getValidationModes.ts","../src/utils/isBoolean.ts","../src/utils/isFileInput.ts","../src/utils/isHTMLElement.ts","../src/utils/isMultipleSelect.ts","../src/utils/isRadioInput.ts","../src/utils/isWeb.ts","../src/utils/live.ts","../src/utils/unset.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValueAs.ts","../src/logic/getRadioValue.ts","../src/logic/getFieldValue.ts","../src/logic/schemaErrorLookup.ts","../src/logic/setFieldArrayDirtyFields.ts","../src/utils/deepMerge.ts","../src/logic/unsetEmptyArray.ts","../src/utils/isMessage.ts","../src/utils/isRegex.ts","../src/logic/getValidateError.ts","../src/logic/getValueAndMessage.ts","../src/logic/validateField.ts","../src/logic/createFormControl.ts","../src/logic/getResolverOptions.ts","../src/logic/hasValidation.ts","../src/logic/skipValidation.ts","../src/utils/isRadioOrCheckbox.ts","../src/controller.tsx","../src/useFieldArray.ts","../src/utils/omitKeys.ts","../src/useForm.ts"],"names":["element","type","data","Date","value","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","names","name","some","current","getNodeParentName","substring","search","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","source","copy","HookFormContext","React","createContext","useFormContext","useContext","props","Provider","omit","children","formState","_proxyFormState","localProxyFormState","isRoot","createGetter","prop","Object","defineProperty","get","keys","length","formStateData","isEmptyObject","find","signalName","convertToArrayPayload","currentName","startsWith","tearDown","_subscription","unsubscribe","disabled","subject","subscribe","next","callback","useSubscribe","useRef","useEffect","useFormState","methods","control","updateFormState","useState","_formState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","_name","shouldSubscribeByName","shouldRenderFormState","_subjects","state","getProxyFormState","generateWatchOutput","_names","formValues","isGlobal","isString","watch","add","map","fieldName","watchAll","useWatch","fieldValues","_formValues","updateValue","_getWatch","_removeUnmounted","useController","shouldUnregister","_defaultValues","registerProps","register","rules","updateMounted","field","_fields","_f","mount","_shouldUnregisterField","_options","isNameInFieldArray","array","_stateFlags","action","unregister","onChange","getControllerValue","onBlur","ref","elm","focus","setCustomValidity","message","reportValidity","fieldState","invalid","isTouched","error","validateAllFieldCriteria","types","[object Object]","test","input","replace","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","fieldsNames","refs","options","shouldFocus","focusName","focusIndex","values","_fieldIds","keyName","output","d","performance","now","c","r","Math","random","toString","generateId","append","insert","slice","from","to","splice","prepend","indexes","i","temp","removeAtIndexes","sort","a","b","indexA","indexB","cloneObject","Set","isFunction","createSubject","_observers","observer","push","o","observers","deepEqual","object1","object2","isPrimitive","getTime","keys1","keys2","val1","includes","val2","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","HTMLElement","window","document","isHTMLElement","contains","updatePath","unset","childObject","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isBoolean","defaultResult","validResult","option","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","defaultReturn","previous","getFieldValue","every","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selectedOptions","isCheckBox","getCheckboxValue","getFieldValueAs","schemaErrorLookup","join","foundError","pop","setDirtyFields","defaultValues","parentNode","parentName","deepMerge","targetValue","sourceValue","isValidElement","RegExp","getValidateError","isMessage","validationData","isRegex","async","inputValue","shouldUseNativeValidation","required","maxLength","minLength","min","max","pattern","validate","inputRef","setCustomValidty","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","parseFloat","valueDate","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","defaultOptions","reValidateMode","shouldFocusError","isWindowUndefined","createFormControl","isSubmitted","submitCount","isSubmitting","isSubmitSuccessful","unMount","delayErrorCallback","timer","validateFields","validationModeBeforeSubmit","getValidationModes","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","criteriaMode","wait","args","clearTimeout","setTimeout","isFieldWatched","isBlurEvent","has","_updateValid","shouldSkipRender","resolver","_executeSchema","executeBuildInValidation","method","shouldSetValues","shouldSetFields","argA","argB","unsetEmptyArray","updateFieldArrayDirty","_getDirty","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","isCurrentTouched","shouldRender","isFieldDirty","isPreviousFieldTouched","isPreviousFormDirty","isPreviousFieldDirty","setFieldArrayDirtyFields","shouldRenderByError","previousFieldError","shouldUpdateValid","delayError","updatedFormState","context","getResolverOptions","shouldOnlyCheckValid","valid","fieldReference","fieldError","validateField","live","getValues","isWeb","forEach","selectRef","selected","checkboxRef","radioRef","shouldDirty","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","isFieldArray","handleChange","shouldSkipValidation","deps","skipValidation","isWatched","previousErrorLookupResult","errorLookupResult","fieldNames","Promise","all","inputName","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","fieldRef","querySelectorAll","isRadioOrCheckboxFunction","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","closest","reset","keepSubmitCount","keepIsSubmitted","entries","keepErrors","_updateFieldArray","_getFieldArray","handleSubmit","resetField","clearErrors","setError","setFocus","render","setFields","mapIds","_actioned","fieldArrayName","updateValues","useCallback","updatedFieldArrayValuesWithKey","updatedFieldArrayValues","omitKeys","appendValue","appendAt","mapCurrentIds","fillEmptyArray","getFocusFieldName","prependAt","removeArrayAt","insertAt","swapArrayAt","moveArrayAt","updateAt","watchField","then","swap","move","remove","update","_formControl"],"mappings":"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","sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (data: unknown) => data instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  [...names].some((current) => getNodeParentName(name) === current);\n","export default (name: string) => name.substring(0, name.search(/.\\d/)) || name;\n","export default (value: any[]) => value.filter(Boolean);\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown) => {\n  if (isObject(obj) && path) {\n    const result = compact(path.split(/[,[\\].]+?/)).reduce(\n      (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n      obj,\n    );\n\n    return isUndefined(result) || result === obj\n      ? isUndefined(obj[path as keyof T])\n        ? defaultValue\n        : obj[path as keyof T]\n      : result;\n  }\n\n  return undefined;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","export default <Key extends string, T extends Record<Key, any>>(\n  source: T,\n  key: Key,\n): Omit<T, Key> => {\n  const copy = { ...source };\n  delete copy[key];\n\n  return copy;\n};\n","import * as React from 'react';\n\nimport omit from './utils/omit';\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\nexport const FormProvider = <\n  TFieldValues extends FieldValues,\n  TContext extends object = object,\n>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => (\n  <HookFormContext.Provider\n    value={omit(props, 'children') as unknown as UseFormReturn}\n  >\n    {props.children}\n  </HookFormContext.Provider>\n);\n","import { VALIDATION_MODE } from '../constants';\nimport { FormState, FormStateProxy, ReadFormState } from '../types';\n\nexport default <TFieldValues>(\n  formState: FormState<TFieldValues>,\n  _proxyFormState: ReadFormState,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  function createGetter(prop: keyof FormStateProxy) {\n    return () => {\n      if (prop in formState) {\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[prop] = true);\n        return formState[prop];\n      }\n      return undefined;\n    };\n  }\n\n  const result = {} as any as typeof formState;\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: createGetter(key as keyof FormStateProxy),\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const formState = omit(formStateData, 'name');\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n) =>\n  !name ||\n  !signalName ||\n  name === signalName ||\n  convertToArrayPayload(name).some(\n    (currentName) =>\n      currentName &&\n      (currentName.startsWith(signalName) ||\n        signalName.startsWith(currentName)),\n  );\n","import * as React from 'react';\n\nimport { Subject, Subscription } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  callback: (value: T) => void;\n};\n\ntype Payload<T> = {\n  _subscription: React.MutableRefObject<Subscription | undefined>;\n  props: Props<T>;\n};\n\nconst tearDown = (\n  _subscription: React.MutableRefObject<Subscription | undefined>,\n) => {\n  if (_subscription.current) {\n    _subscription.current.unsubscribe();\n    _subscription.current = undefined;\n  }\n};\n\nconst updateSubscriptionProps = <T>({ _subscription, props }: Payload<T>) => {\n  if (props.disabled) {\n    tearDown(_subscription);\n  } else if (!_subscription.current) {\n    _subscription.current = props.subject.subscribe({\n      next: props.callback,\n    });\n  }\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _subscription = React.useRef<Subscription>();\n\n  updateSubscriptionProps({\n    _subscription,\n    props,\n  });\n\n  React.useEffect(() => {\n    return () => tearDown(_subscription);\n  }, []);\n}\n","import * as React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    callback: (formState) =>\n      shouldSubscribeByName(\n        _name.current as InternalFieldName,\n        formState.name,\n      ) &&\n      shouldRenderFormState(formState, _localProxyFormState.current) &&\n      updateFormState({\n        ...control._formState,\n        ...formState,\n      }),\n    subject: control._subjects.state,\n  });\n\n  return getProxyFormState(\n    formState,\n    control._proxyFormState,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { FieldValues, InternalFieldName, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport function generateWatchOutput(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n) {\n  const isArray = Array.isArray(names);\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names as InternalFieldName);\n    return get(formValues, names as InternalFieldName);\n  }\n\n  if (isArray) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName as InternalFieldName),\n        get(formValues, fieldName as InternalFieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n}\n","import * as React from 'react';\n\nimport { generateWatchOutput } from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport isObject from './utils/isObject';\nimport isUndefined from './utils/isUndefined';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n}): UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends FieldPath<TFieldValues>[] = FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\nexport function useWatch<TFieldValues>(props?: UseWatchProps<TFieldValues>) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback: (formState) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n        )\n      ) {\n        const fieldValues = generateWatchOutput(\n          _name.current as InternalFieldName | InternalFieldName[],\n          control._names,\n          control._formValues,\n        );\n\n        updateValue(\n          isObject(fieldValues)\n            ? { ...fieldValues }\n            : Array.isArray(fieldValues)\n            ? [...fieldValues]\n            : fieldValues,\n        );\n      }\n    },\n  });\n\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? control._getWatch(name as InternalFieldName)\n      : defaultValue,\n  );\n\n  React.useEffect(() => {\n    control._removeUnmounted();\n  });\n\n  return value;\n}\n","import * as React from 'react';\n\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport {\n  Field,\n  FieldPath,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\n\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, control = methods.control, shouldUnregister } = props;\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n  });\n  const formState = useFormState({\n    control,\n    name,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  const registerProps = control.register(name, {\n    ...props.rules,\n    value,\n  });\n\n  React.useEffect(() => {\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    return () => {\n      const _shouldUnregisterField =\n        control._options.shouldUnregister || shouldUnregister;\n\n      if (\n        isNameInFieldArray(control._names.array, name)\n          ? _shouldUnregisterField && !control._stateFlags.action\n          : _shouldUnregisterField\n      ) {\n        control.unregister(name);\n      } else {\n        updateMounted(name, false);\n      }\n    };\n  }, [name, control, shouldUnregister]);\n\n  return {\n    field: {\n      onChange: (event) => {\n        registerProps.onChange({\n          target: {\n            value: getControllerValue(event),\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.CHANGE,\n        });\n      },\n      onBlur: () => {\n        registerProps.onBlur({\n          target: {\n            value,\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.BLUR,\n        });\n      },\n      name,\n      value,\n      ref: (elm) => {\n        const field = get(control._fields, name);\n\n        if (elm && field && elm.focus) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            setCustomValidity: (message: string) =>\n              elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity(),\n          };\n        }\n      },\n    },\n    formState,\n    fieldState: {\n      invalid: !!get(formState.errors, name),\n      isDirty: !!get(formState.dirtyFields, name),\n      isTouched: !!get(formState.touchedFields, name),\n      error: get(formState.errors, name),\n    },\n  };\n}\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(current)) {\n        focusFieldBy(current, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import * as React from 'react';\n\nimport { FieldValues } from '../types';\n\nexport default <T, K>(\n  values: T[],\n  _fieldIds: React.MutableRefObject<K>,\n  keyName: string,\n) =>\n  values.map((value, index) => {\n    const output = _fieldIds.current[index as keyof K];\n\n    return {\n      ...value,\n      ...(output ? { [keyName]: (output as FieldValues)[keyName] } : {}),\n    };\n  });\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayPath, FieldArrayWithId, FieldValues } from '../types';\n\nimport generateId from './generateId';\n\nexport default <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TFieldName extends FieldArrayPath<TFieldArrayValues> = FieldArrayPath<TFieldArrayValues>,\n  TKeyName extends string = 'id',\n>(\n  values: Partial<TFieldArrayValues>[] = [],\n  keyName: TKeyName,\n): Partial<FieldArrayWithId<TFieldArrayValues, TFieldName, TKeyName>>[] =>\n  values.map((value: Partial<TFieldArrayValues>) => ({\n    ...(value[keyName] ? {} : { [keyName]: generateId() }),\n    ...value,\n  })) as Partial<FieldArrayWithId<TFieldArrayValues, TFieldName, TKeyName>>[];\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function append<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","export default <T>(fieldValues: T[], index: number, value: any) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isFunction from './isFunction';\nimport isObject from './isObject';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (isArray || isObject(data)) {\n    copy = isArray ? [] : {};\n    for (const key in data) {\n      if (isFunction(data[key])) {\n        copy = data;\n        break;\n      }\n      copy[key] = cloneObject(data[key]);\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && document.contains(ref);\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import { Field } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  value: any,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : +value\n    : valueAsDate\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup(\n  errors: FieldErrors,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport set from '../utils/set';\n\nfunction setDirtyFields<\n  T extends Record<string, unknown>[],\n  U extends Record<string, unknown>[],\n  K extends Record<string, boolean | []>,\n>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n  parentNode?: K,\n  parentName?: keyof K,\n) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(\n          values[index][key] as T,\n          get(defaultValues[index] || {}, key, []),\n          dirtyFields[index][key] as [],\n          dirtyFields[index],\n          key,\n        );\n      } else {\n        !isNullOrUndefined(defaultValues) &&\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n          ? set(dirtyFields[index] || {}, key)\n          : (dirtyFields[index] = {\n              ...dirtyFields[index],\n              [key]: true,\n            });\n      }\n    }\n\n    parentNode &&\n      !dirtyFields.length &&\n      delete parentNode[parentName as keyof K];\n  }\n\n  return dirtyFields;\n}\n\nexport default <T extends U, U extends Record<string, unknown>[]>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n) =>\n  deepMerge(\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\n  );\n","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>,\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] =\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\n          ? deepMerge(targetValue, sourceValue)\n          : sourceValue;\n    } catch {}\n  }\n\n  return target;\n}\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name, [])).length && unset(ref, name);\n","import * as React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport { Field, FieldError, InternalFieldErrors, Message } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async (\n  field: Field,\n  inputValue: any,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidty = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n      (isBoolean(inputValue) && !inputValue) ||\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\n      (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(inputValue)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidty(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidty(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidty(true);\n  return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  PathValue,\n  Ref,\n  ResolverResult,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UnpackNestedValue,\n  UseFormClearErrors,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormRegisterReturn,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport { set } from '../utils';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport omit from '../utils/omit';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport { generateWatchOutput } from './generateWatchOutput';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nconst isWindowUndefined = typeof window === 'undefined';\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  };\n  let _fields = {};\n  let _defaultValues = _options.defaultValues || {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  } as Names;\n  let delayErrorCallback: DelayCallback;\n  let timer = 0;\n  let validateFields: Record<InternalFieldName, number> = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T, wait: number) =>\n    (...args: any) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(() => callback(...args), wait);\n    };\n\n  const isFieldWatched = (\n    name: FieldPath<TFieldValues>,\n    isBlurEvent?: boolean,\n  ) =>\n    !isBlurEvent &&\n    (_names.watchAll ||\n      _names.watch.has(name) ||\n      _names.watch.has((name.match(/\\w+/) || [])[0]));\n\n  const _updateValid = async (shouldSkipRender?: boolean) => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuildInValidation(_fields, true);\n\n      if (!shouldSkipRender && isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    method,\n    args,\n    values = [],\n    shouldSetValues = true,\n    shouldSetFields = true,\n  ) => {\n    _stateFlags.action = true;\n\n    if (shouldSetFields && get(_fields, name)) {\n      const fieldValues = method(get(_fields, name), args.argA, args.argB);\n      shouldSetValues && set(_fields, name, fieldValues);\n    }\n\n    if (Array.isArray(get(_formState.errors, name))) {\n      const errors = method(get(_formState.errors, name), args.argA, args.argB);\n      shouldSetValues && set(_formState.errors, name, errors);\n      unsetEmptyArray(_formState.errors, name);\n    }\n\n    if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n      const touchedFields = method(\n        get(_formState.touchedFields, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSetValues &&\n        set(_formState.touchedFields as TFieldValues, name, touchedFields);\n      unsetEmptyArray(_formState.touchedFields, name);\n    }\n\n    if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n      updateFieldArrayDirty(name, values);\n    }\n\n    _subjects.state.next({\n      isDirty: _getDirty(name, values),\n      dirtyFields: _formState.dirtyFields,\n      errors: _formState.errors,\n      isValid: _formState.isValid,\n    });\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => (\n    set(_formState.errors, name, error),\n    _subjects.state.next({\n      errors: _formState.errors,\n    })\n  );\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs?: boolean,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(_formValues, name, get(_defaultValues, name));\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n    }\n\n    _stateFlags.mount && _updateValid();\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isCurrentTouched?: boolean,\n    shouldRender = true,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let isFieldDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n    if (_proxyFormState.isDirty) {\n      const isPreviousFormDirty = _formState.isDirty;\n\n      _formState.isDirty = output.isDirty = _getDirty();\n      isFieldDirty = isPreviousFormDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields as TFieldValues, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      isFieldDirty =\n        isFieldDirty ||\n        isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n    }\n\n    if (isCurrentTouched && !isPreviousFieldTouched) {\n      set(_formState.touchedFields as TFieldValues, name, isCurrentTouched);\n      output.touchedFields = _formState.touchedFields;\n      isFieldDirty =\n        isFieldDirty ||\n        (_proxyFormState.touchedFields &&\n          isPreviousFieldTouched !== isCurrentTouched);\n    }\n\n    isFieldDirty && shouldRender && _subjects.state.next(output);\n\n    return isFieldDirty ? output : {};\n  };\n\n  const updateFieldArrayDirty = (name: any, value: any) => (\n    set(\n      _formState.dirtyFields as TFieldValues,\n      name,\n      setFieldArrayDirtyFields(\n        value,\n        get(_defaultValues, name, []),\n        get(_formState.dirtyFields, name, []),\n      ),\n    ),\n    unsetEmptyArray(_formState.dirtyFields, name)\n  );\n\n  const shouldRenderByError = async (\n    shouldSkipRender: boolean,\n    name: InternalFieldName,\n    isValid: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ): Promise<void> => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid && _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback =\n        delayErrorCallback || debounce(updateErrors, props.delayError);\n      delayErrorCallback(name, error);\n    } else {\n      clearTimeout(timer);\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n        !isEmptyObject(fieldState) ||\n        shouldUpdateValid) &&\n      !shouldSkipRender\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (_proxyFormState.isValidating && !validateFields[name]) {\n      _subjects.state.next({\n        isValidating: false,\n      });\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver\n      ? await _options.resolver(\n          { ..._formValues } as UnpackNestedValue<TFieldValues>,\n          _options.context,\n          getResolverOptions(\n            name || _names.mount,\n            _fields,\n            _options.criteriaMode,\n            _options.shouldUseNativeValidation,\n          ),\n        )\n      : ({} as ResolverResult<TFieldValues>);\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors as FieldErrors<TFieldValues>;\n    }\n\n    return errors;\n  };\n\n  const executeBuildInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const fieldReference = field._f;\n        const fieldValue = omit(field, '_f');\n\n        if (fieldReference) {\n          const fieldError = await validateField(\n            field,\n            get(_formValues, fieldReference.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          );\n\n          if (fieldError[fieldReference.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          if (!shouldOnlyCheckValid) {\n            fieldError[fieldReference.name]\n              ? set(\n                  _formState.errors,\n                  fieldReference.name,\n                  fieldError[fieldReference.name],\n                )\n              : unset(_formState.errors, fieldReference.name);\n          }\n        }\n\n        fieldValue &&\n          (await executeBuildInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) => {\n    const fieldValues = {\n      ...(_stateFlags.mount\n        ? _formValues\n        : isUndefined(defaultValue)\n        ? _defaultValues\n        : isString(names)\n        ? { [names]: defaultValue }\n        : defaultValue),\n    };\n\n    return generateWatchOutput(names, _names, fieldValues, isGlobal);\n  };\n\n  const _getFieldArray = (name: InternalFieldName) =>\n    get(\n      _stateFlags.mount ? _formValues : _defaultValues,\n      name,\n      props.shouldUnregister ? get(_defaultValues, name, []) : [],\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isFileInput(fieldReference.ref) && !isString(fieldValue)) {\n          fieldReference.ref.files = fieldValue as FileList;\n        } else if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (selectRef) =>\n              (selectRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(selectRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else {\n          fieldReference.ref.value = fieldValue;\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(name, fieldValue, options.shouldTouch);\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = (\n    name: FieldPath<TFieldValues>,\n    value: UnpackNestedValue<PathValue<TFieldValues, FieldPath<TFieldValues>>>,\n    options: SetValueConfig,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue: SetFieldValue<TFieldValues> = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n\n    set(_formValues, name, value);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        updateFieldArrayDirty(name, value);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, value),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(value)\n        ? setValues(name, value, options)\n        : setFieldValue(name, value, options);\n    }\n\n    isFieldWatched(name) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n  };\n\n  const handleChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type ? getFieldValue(field._f) : target.value;\n      const isBlurEvent = event.type === EVENTS.BLUR;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const isWatched = isFieldWatched(name, isBlurEvent);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      set(_formValues, name, fieldValue);\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || isWatched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(isWatched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && isWatched && _subjects.state.next({});\n\n      validateFields[name] = validateFields[name] ? +1 : 1;\n\n      _proxyFormState.isValidating &&\n        _subjects.state.next({\n          isValidating: true,\n        });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name) as Field,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        isValid = await _updateValid(true);\n      }\n\n      field._f.deps && trigger(field._f.deps as FieldPath<TFieldValues>[]);\n\n      shouldRenderByError(false, name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _subjects.state.next({\n      isValidating: true,\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuildInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuildInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {} as FieldErrors<TFieldValues>);\n\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: true,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = ((get(_fields, name, { _f: {} }) as Field)._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (info: any) =>\n            name(\n              _getWatch(\n                undefined,\n                defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n              ),\n              info,\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n\n    set(_fields, name, {\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    !isUndefined(options.value) &&\n      set(_formValues, name, get(_formValues, name, options.value));\n\n    field\n      ? isBoolean(options.disabled) &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true);\n\n    return isWindowUndefined\n      ? ({ name: name as InternalFieldName } as UseFormRegisterReturn)\n      : {\n          name,\n          ...(isBoolean(options.disabled)\n            ? { disabled: options.disabled }\n            : {}),\n          onChange: handleChange,\n          onBlur: handleChange,\n          ref: (ref: HTMLInputElement | null): void => {\n            if (ref) {\n              register(name, options);\n              let field: Field = get(_fields, name);\n              const fieldRef = isUndefined(ref.value)\n                ? ref.querySelectorAll\n                  ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) ||\n                    ref\n                  : ref\n                : ref;\n\n              const isRadioOrCheckbox = isRadioOrCheckboxFunction(fieldRef);\n\n              if (\n                fieldRef === field._f.ref ||\n                (isRadioOrCheckbox &&\n                  compact(field._f.refs || []).find(\n                    (option) => option === fieldRef,\n                  ))\n              ) {\n                return;\n              }\n\n              field = {\n                _f: isRadioOrCheckbox\n                  ? {\n                      ...field._f,\n                      refs: [\n                        ...compact(field._f.refs || []).filter(live),\n                        fieldRef,\n                      ],\n                      ref: { type: fieldRef.type, name },\n                    }\n                  : {\n                      ...field._f,\n                      ref: fieldRef,\n                    },\n              };\n\n              set(_fields, name, field);\n\n              (!options || !options.disabled) &&\n                updateValidAndValue(name, false, fieldRef);\n            } else {\n              const field: Field = get(_fields, name, {});\n              const shouldUnregister =\n                _options.shouldUnregister || options.shouldUnregister;\n\n              if (field._f) {\n                field._f.mount = false;\n              }\n\n              shouldUnregister &&\n                !(\n                  isNameInFieldArray(_names.array, name) && _stateFlags.action\n                ) &&\n                _names.unMount.add(name);\n            }\n          },\n        };\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = { ..._formValues };\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors as FieldErrors<TFieldValues>;\n          fieldValues = values;\n        } else {\n          await executeBuildInValidation(_fields);\n        }\n\n        if (\n          isEmptyObject(_formState.errors) &&\n          Object.keys(_formState.errors).every((name) => get(fieldValues, name))\n        ) {\n          _subjects.state.next({\n            errors: {} as FieldErrors<TFieldValues>,\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          onInvalid && (await onInvalid(_formState.errors, e));\n          _options.shouldFocusError &&\n            focusFieldBy(\n              _fields,\n              (key) => get(_formState.errors, key),\n              _names.mount,\n            );\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (isUndefined(options.defaultValue)) {\n      setValue(name, get(_defaultValues, name));\n    } else {\n      setValue(name, options.defaultValue);\n      set(_defaultValues, name, options.defaultValue);\n    }\n\n    if (!options.keepTouched) {\n      unset(_formState.touchedFields, name);\n    }\n\n    if (!options.keepDirty) {\n      unset(_formState.dirtyFields, name);\n      _formState.isDirty = options.defaultValue\n        ? _getDirty(name, get(_defaultValues, name))\n        : _getDirty();\n    }\n\n    if (!options.keepError) {\n      unset(_formState.errors, name);\n      _proxyFormState.isValid && _updateValid();\n    }\n\n    _subjects.state.next({ ..._formState });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values = !isEmptyObject(formValues)\n      ? cloneUpdatedValues\n      : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (isWeb) {\n        for (const name of _names.mount) {\n          const field = get(_fields, name);\n          if (field && field._f) {\n            const fieldReference = Array.isArray(field._f.refs)\n              ? field._f.refs[0]\n              : field._f.ref;\n\n            try {\n              isHTMLElement(fieldReference) &&\n                fieldReference.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n      _fields = {};\n\n      _subjects.watch.next({\n        values,\n      });\n\n      _subjects.array.next({\n        values,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? _formState.isDirty\n        : keepStateOptions.keepDefaultValues\n        ? !deepEqual(formValues, _defaultValues)\n        : false,\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirty\n        ? _formState.dirtyFields\n        : ((keepStateOptions.keepDefaultValues && formValues\n            ? Object.entries(formValues).reduce(\n                (previous, [key, value]) => ({\n                  ...previous,\n                  [key]: value !== get(_defaultValues, key),\n                }),\n                {},\n              )\n            : {}) as FieldNamesMarkedBoolean<TFieldValues>),\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : ({} as FieldNamesMarkedBoolean<TFieldValues>),\n      errors: keepStateOptions.keepErrors\n        ? _formState.errors\n        : ({} as FieldErrors<TFieldValues>),\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _stateFlags.watch = !!props.shouldUnregister;\n  };\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name) => {\n    const field = get(_fields, name)._f;\n    (field.ref.focus ? field.ref : field.refs[0]).focus();\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      set _fields(value) {\n        _fields = value;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      set _formValues(value) {\n        _formValues = value;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      set _defaultValues(value) {\n        _defaultValues = value;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n  };\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import * as React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport mapCurrentIds from './logic/mapCurrentIds';\nimport mapIds from './logic/mapId';\nimport appendAt from './utils/append';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport moveArrayAt from './utils/move';\nimport omitKeys from './utils/omitKeys';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport updateAt from './utils/update';\nimport {\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\nexport const useFieldArray = <\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> => {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id' as TKeyName,\n    shouldUnregister,\n  } = props;\n  const [fields, setFields] = React.useState<\n    Partial<FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>>[]\n  >(mapIds(control._getFieldArray(name), keyName));\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  useSubscribe({\n    callback: ({ values, name: fieldArrayName }) => {\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        setFields(mapIds(get(values, _name.current), keyName));\n      }\n    },\n    subject: control._subjects.array,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValuesWithKey: T,\n    ) => {\n      const updatedFieldArrayValues = omitKeys(\n        updatedFieldArrayValuesWithKey,\n        keyName,\n      );\n      _actioned.current = true;\n      set(control._formValues, name, updatedFieldArrayValues);\n      setFields(updatedFieldArrayValuesWithKey);\n      return updatedFieldArrayValues;\n    },\n    [control, name, keyName],\n  );\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(value);\n    const updatedFieldArrayValuesWithKey = appendAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      mapIds(appendValue, keyName),\n    );\n    control._updateFieldArray(\n      name,\n      appendAt,\n      {\n        argA: fillEmptyArray(value),\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValuesWithKey.length - appendValue.length,\n      options,\n    );\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const updatedFieldArrayValuesWithKey = prependAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      mapIds(convertToArrayPayload(value), keyName),\n    );\n    control._updateFieldArray(\n      name,\n      prependAt,\n      {\n        argA: fillEmptyArray(value),\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n\n    control._names.focus = getFocusFieldName(name, 0, options);\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValuesWithKey: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      index,\n    );\n    control._updateFieldArray(\n      name,\n      removeArrayAt,\n      {\n        argA: index,\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const updatedFieldArrayValuesWithKey = insertAt(\n      mapCurrentIds(control._getFieldArray(name), _fieldIds, keyName),\n      index,\n      mapIds(convertToArrayPayload(value), keyName),\n    );\n    control._updateFieldArray(\n      name,\n      insertAt,\n      {\n        argA: index,\n        argB: fillEmptyArray(value),\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n    );\n\n    control._names.focus = getFocusFieldName(name, index, options);\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\n      control._getFieldArray(name),\n      _fieldIds,\n      keyName,\n    );\n    swapArrayAt(updatedFieldArrayValuesWithKey, indexA, indexB);\n    control._updateFieldArray(\n      name,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\n      control._getFieldArray(name),\n      _fieldIds,\n      keyName,\n    );\n    moveArrayAt(updatedFieldArrayValuesWithKey, from, to);\n    control._updateFieldArray(\n      name,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      updateValues(updatedFieldArrayValuesWithKey),\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: Partial<FieldArray<TFieldValues, TFieldArrayName>>,\n  ) => {\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\n      control._getFieldArray(name),\n      _fieldIds,\n      keyName,\n    );\n    const updatedFieldArrayValues = updateAt(\n      updatedFieldArrayValuesWithKey,\n      index,\n      value,\n    );\n    _fieldIds.current = mapIds(updatedFieldArrayValues, keyName);\n    control._updateFieldArray(\n      name,\n      updateAt,\n      {\n        argA: index,\n        argB: value,\n      },\n      updateValues(_fieldIds.current),\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\n  ) => {\n    const updatedFieldArrayValuesWithKey: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = mapIds(convertToArrayPayload(value), keyName);\n    control._updateFieldArray(\n      name,\n      () => updatedFieldArrayValuesWithKey,\n      {},\n      updateValues(updatedFieldArrayValuesWithKey),\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._stateFlags.action = false;\n\n    if (control._names.watchAll) {\n      control._subjects.state.next({});\n    } else {\n      for (const watchField of control._names.watch) {\n        if (name.startsWith(watchField)) {\n          control._subjects.state.next({});\n          break;\n        }\n      }\n    }\n\n    if (_actioned.current) {\n      control._executeSchema([name]).then((result) => {\n        const error = get(result.errors, name);\n\n        if (error && error.type && !get(control._formState.errors, name)) {\n          set(control._formState.errors, name, error);\n          control._subjects.state.next({\n            errors: control._formState.errors as FieldErrors<TFieldValues>,\n          });\n        }\n      });\n    }\n\n    control._subjects.watch.next({\n      name,\n      values: control._formValues,\n    });\n\n    control._names.focus &&\n      focusFieldBy(control._fields, (key: string) =>\n        key.startsWith(control._names.focus),\n      );\n\n    control._names.focus = '';\n\n    control._proxyFormState.isValid && control._updateValid();\n  }, [fields, name, control, keyName]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && set(control._formValues, name, []);\n\n    return () => {\n      if (control._options.shouldUnregister || shouldUnregister) {\n        control.unregister(name as FieldPath<TFieldValues>);\n      }\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control, keyName]),\n    move: React.useCallback(move, [updateValues, name, control, keyName]),\n    prepend: React.useCallback(prepend, [updateValues, name, control, keyName]),\n    append: React.useCallback(append, [updateValues, name, control, keyName]),\n    remove: React.useCallback(remove, [updateValues, name, control, keyName]),\n    insert: React.useCallback(insert, [updateValues, name, control, keyName]),\n    update: React.useCallback(update, [updateValues, name, control, keyName]),\n    replace: React.useCallback(replace, [updateValues, name, control, keyName]),\n    fields: fields as FieldArrayWithId<\n      TFieldValues,\n      TFieldArrayName,\n      TKeyName\n    >[],\n  };\n};\n","import { FieldArrayWithId } from '../types';\n\nimport omit from './omit';\n\nexport default <T extends Partial<FieldArrayWithId>[]>(\n  fields: T,\n  keyName: string,\n) => fields.map((field = {}) => omit(field, keyName));\n","import * as React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport {\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldValues,\n  FormState,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  });\n\n  if (_formControl.current) {\n    _formControl.current.control._options = props;\n  } else {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n\n  useSubscribe({\n    subject: control._subjects.state,\n    callback: (formState) => {\n      if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n        control._formState = {\n          ...control._formState,\n          ...formState,\n        };\n\n        updateFormState({ ...control._formState });\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n    control._removeUnmounted();\n  });\n\n  React.useEffect(\n    () => () =>\n      Object.values(control._subjects).forEach((subject) =>\n        subject.unsubscribe(),\n      ),\n    [control],\n  );\n\n  _formControl.current.formState = getProxyFormState(\n    formState,\n    control._proxyFormState,\n  );\n\n  return _formControl.current;\n}\n"]},"metadata":{},"sourceType":"script"}