{"ast":null,"code":"var _jsxFileName = \"/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/TimeInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\"; // Material UI Components\n\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TimeInput(params) {\n  _s();\n\n  const {\n    control\n  } = useForm();\n  const name = \"Time \" + params.counter;\n  const [time, setTime] = useState(new Date(\"2000-01-01T00:00:00\"));\n  const [value, setValue] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    control: control,\n    name: name,\n    defaultValue: time,\n    render: _ref => {\n      let {\n        field: {\n          ref,\n          ...field\n        }\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(TimePicker, { ...field,\n        label: name,\n        value: time,\n        onChange: time => {\n          setValue(value);\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          id: name,\n          name: name,\n          inputRef: ref,\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimeInput, \"HtAM2lN6dv7KfQFAhql+qHmfI3k=\", false, function () {\n  return [useForm];\n});\n\n_c = TimeInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeInput\");","map":{"version":3,"sources":["/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/TimeInput.js"],"names":["useEffect","useState","Controller","useForm","TimePicker","TextField","TimeInput","params","control","name","counter","time","setTime","Date","value","setValue","field","ref"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,UAAR,EAAoBC,OAApB,QAAkC,iBAAlC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAAA;;AACtC,QAAM;AAACC,IAAAA;AAAD,MAAYL,OAAO,EAAzB;AAEA,QAAMM,IAAI,GAAG,UAAUF,MAAM,CAACG,OAA9B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAIY,IAAJ,CAAS,qBAAT,CAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEA,sBACI,QAAC,UAAD;AACI,IAAA,OAAO,EAAEO,OADb;AAEI,IAAA,IAAI,EAAEC,IAFV;AAGI,IAAA,YAAY,EAAEE,IAHlB;AAII,IAAA,MAAM,EAAE;AAAA,UAAC;AAACK,QAAAA,KAAK,EAAE;AAACC,UAAAA,GAAD;AAAM,aAAGD;AAAT;AAAR,OAAD;AAAA,0BACJ,QAAC,UAAD,OACQA,KADR;AAEI,QAAA,KAAK,EAAEP,IAFX;AAGI,QAAA,KAAK,EAAEE,IAHX;AAII,QAAA,QAAQ,EAAGA,IAAD,IAAU;AAChBI,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,SANL;AAOI,QAAA,WAAW,EAAGP,MAAD,iBACT,QAAC,SAAD;AACI,UAAA,EAAE,EAAEE,IADR;AAEI,UAAA,IAAI,EAAEA,IAFV;AAGI,UAAA,QAAQ,EAAEQ,GAHd;AAAA,aAIQV;AAJR;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,cADI;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAjCuBD,S;UACFH,O;;;KADEG,S","sourcesContent":["import {useEffect, useState} from \"react\";\nimport {Controller, useForm} from \"react-hook-form\";\n\n// Material UI Components\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport TextField from \"@mui/material/TextField\";\n\nexport default function TimeInput(params) {\n    const {control} = useForm();\n\n    const name = \"Time \" + params.counter;\n\n    const [time, setTime] = useState(new Date(\"2000-01-01T00:00:00\"));\n    const [value, setValue] = useState(null);\n\n    return (\n        <Controller\n            control={control}\n            name={name}\n            defaultValue={time}\n            render={({field: {ref, ...field}}) => (\n                <TimePicker\n                    {...field}\n                    label={name}\n                    value={time}\n                    onChange={(time) => {\n                        setValue(value);\n                    }}\n                    renderInput={(params) =>\n                        <TextField\n                            id={name}\n                            name={name}\n                            inputRef={ref}\n                            {...params}\n                        />\n                    }\n                />\n            )}\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}