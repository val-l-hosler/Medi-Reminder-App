{"ast":null,"code":"var _jsxFileName = \"/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/AddReminder4.js\",\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport Typography from \"@mui/material/Typography\";\nimport Dialog from \"@mui/material/Dialog\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"; // This gets the number of timePicker inputs that need to be created\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getNumber() {\n  let reminderList = localStorage.getItem(\"reminders\");\n  let parsed = JSON.parse(reminderList);\n  const mostRecent = parsed[parsed.length - 1];\n  return mostRecent.timesPerDay;\n}\n\nexport default function AddReminder4() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  // Styles\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    alignItems: \"center\",\n    bgcolor: \"background.paper\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    ml: \"50px\",\n    mr: \"50px\"\n  };\n  const buttonSx = {\n    borderRadius: 0,\n    fontSize: \"17px\",\n    height: \"5.75ch\",\n    width: \"50%\"\n  };\n  const iconButtonSx = {\n    fontSize: 75,\n    ml: 2.5,\n    mr: 2.5\n  };\n  const linkSx = {\n    color: \"#1976d2\"\n  };\n  const stackSx = {\n    mb: 5\n  };\n  const breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder\",\n    sx: linkSx,\n    children: \"Name & Dose\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder/days\",\n    sx: linkSx,\n    children: \"Days of Week\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder/days/nums\",\n    sx: linkSx,\n    children: \"# of Times\"\n  }, \"3\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"text.primary\",\n    children: \"Times\"\n  }, \"4\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this)];\n\n  const FormAndConfirmation = () => {\n    _s();\n\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = data => {\n      setOpen(true);\n      onSubmit(data);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleOpen),\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: boxSx,\n          children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: allTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              href: \"/add-reminder/days/nums\",\n              children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                sx: iconButtonSx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n                sx: iconButtonSx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          keepMounted: true,\n          open: open,\n          onClose: handleClose,\n          disablePortal: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              m: 5\n            },\n            children: \" TEST \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => onSubmit(),\n              size: \"large\",\n              sx: buttonSx,\n              variant: \"contained\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"error\",\n              size: \"large\",\n              sx: buttonSx,\n              variant: \"contained\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }; // This solution was inspired by this tutorial: https://rexebin.medium.com/use-material-ui-pickers-with-react-hook-form-3ed5d24d6afc\n\n\n  _s(FormAndConfirmation, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n  const TimeInputs = params => {\n    _s2();\n\n    let name = \"Time \" + params.counter;\n    const [time, setTime] = useState(new Date(\"2000-01-01T00:00:00\"));\n    const value = getValues(name);\n    useEffect(() => {\n      register(name);\n    }, [name]);\n    useEffect(() => {\n      setTime(value || null);\n    }, [setTime, value]);\n    return /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: name,\n      defaultValue: time,\n      render: _ref => {\n        let {\n          field: {\n            ref,\n            ...field\n          }\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(TimePicker, { ...field,\n          keepMounted: true,\n          label: name,\n          value: time,\n          onChange: time => {\n            setValue(name, time, {\n              shouldValidate: true,\n              shouldDirty: true\n            });\n            setTime(time);\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            id: name,\n            name: name,\n            inputRef: ref,\n            ...params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s2(TimeInputs, \"vYRAdv+PJwxaVk6npiKsn2UdbfY=\");\n\n  const allTimes = [];\n\n  for (let i = 0; i < getNumber(); i++) {\n    allTimes.push( /*#__PURE__*/_jsxDEV(TimeInputs, {\n      counter: i + 1\n    }, \"TimeInputs\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }, this));\n  }\n\n  let count = 0;\n\n  const onSubmit = data => {\n    console.log(\"hi\");\n    console.log(count);\n    console.log(data);\n\n    if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\n      localStorage.setItem(\"reminders\", JSON.stringify([{\n        id: 0,\n        medication: \"\",\n        dose: \"\",\n        days: [],\n        timesPerDay: 0,\n        times: [],\n        submitted: false\n      }]));\n    }\n\n    let reminderList = localStorage.getItem(\"reminders\");\n    let parsed = JSON.parse(reminderList);\n    const mostRecent = parsed[parsed.length - 1];\n    const times = [];\n    Object.values(data).forEach(value => {\n      let val = value.toString();\n      times.push(val.slice(16, 24));\n    }); // mostRecent.submitted = true;\n\n    mostRecent.times = times;\n    parsed[parsed.length - 1] = mostRecent;\n    console.log(mostRecent);\n    localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n    count++;\n  };\n\n  const {\n    control,\n    handleSubmit,\n    setValue,\n    register,\n    getValues\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormAndConfirmation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(AddReminder4, \"urC9D8QqeBVa5cfe/F7PRHnPzAk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReminder4;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder4\");","map":{"version":3,"sources":["/Users/valeriehosler/Desktop/Github/React-Medi-App/src/Components/AddReminder4.js"],"names":["useState","useEffect","useForm","Controller","ArrowBackIcon","ArrowForwardIcon","Box","Breadcrumbs","Button","Container","Link","LocalizationProvider","NavigateNextIcon","Stack","TimePicker","Typography","Dialog","TextField","AdapterDateFns","getNumber","reminderList","localStorage","getItem","parsed","JSON","parse","mostRecent","length","timesPerDay","AddReminder4","boxSx","mb","width","alignItems","bgcolor","display","flexDirection","ml","mr","buttonSx","borderRadius","fontSize","height","iconButtonSx","linkSx","color","stackSx","breadcrumbs","FormAndConfirmation","open","setOpen","handleOpen","data","onSubmit","handleClose","handleSubmit","allTimes","m","TimeInputs","params","name","counter","time","setTime","Date","value","getValues","register","control","field","ref","setValue","shouldValidate","shouldDirty","i","push","count","console","log","setItem","stringify","id","medication","dose","days","times","submitted","Object","values","forEach","val","toString","slice"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\nimport {useForm, Controller} from \"react-hook-form\";\n\n// Material UI Components\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport Typography from \"@mui/material/Typography\";\nimport Dialog from \"@mui/material/Dialog\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n\n// This gets the number of timePicker inputs that need to be created\nfunction getNumber() {\n    let reminderList = localStorage.getItem(\"reminders\");\n    let parsed = JSON.parse(reminderList);\n    const mostRecent = parsed[parsed.length - 1];\n    return (mostRecent.timesPerDay);\n}\n\nexport default function AddReminder4() {\n    // Styles\n    const boxSx = {\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\n        alignItems: \"center\",\n        bgcolor: \"background.paper\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        ml: \"50px\",\n        mr: \"50px\",\n    };\n\n    const buttonSx = {\n        borderRadius: 0,\n        fontSize: \"17px\",\n        height: \"5.75ch\",\n        width: \"50%\"\n    };\n\n    const iconButtonSx = {\n        fontSize: 75,\n        ml: 2.5,\n        mr: 2.5\n    };\n\n    const linkSx = {\n        color: \"#1976d2\"\n    };\n\n    const stackSx = {\n        mb: 5\n    };\n\n    const breadcrumbs = [\n        <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\n            Name & Dose\n        </Link>,\n        <Link key=\"2\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days\" sx={linkSx}>\n            Days of Week\n        </Link>,\n        <Link key=\"3\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days/nums\" sx={linkSx}>\n            # of Times\n        </Link>,\n        <Typography key=\"4\" color=\"text.primary\">\n            Times\n        </Typography>\n    ];\n\n    const FormAndConfirmation = () => {\n        const [open, setOpen] = useState(false);\n\n        const handleOpen = (data) => {\n            setOpen(true);\n            onSubmit(data);\n        };\n\n        const handleClose = () => {\n            setOpen(false);\n        };\n\n        return (\n            <Box>\n                <form onSubmit={handleSubmit(handleOpen)}>\n                    <Box sx={boxSx}>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            {allTimes}\n                        </LocalizationProvider>\n\n                        <Box>\n                            <Button href=\"/add-reminder/days/nums\"><ArrowBackIcon sx={iconButtonSx}/></Button>\n\n                            <Button type=\"submit\"><ArrowForwardIcon sx={iconButtonSx}/></Button>\n                        </Box>\n                    </Box>\n\n                    <Dialog\n                        keepMounted={true}\n                        open={open}\n                        onClose={handleClose}\n                        disablePortal={true}\n                    >\n                        <Typography variant=\"h5\" sx={{m: 5}}> TEST </Typography>\n\n                        <Box>\n                            <Button onClick={() => onSubmit()}\n                                    size=\"large\"\n                                    sx={buttonSx} variant=\"contained\">Yes</Button>\n                            <Button onClick={handleClose} color=\"error\"\n                                    size=\"large\"\n                                    sx={buttonSx} variant=\"contained\">No</Button>\n                        </Box>\n                    </Dialog>\n                </form>\n            </Box>\n        );\n    };\n\n    // This solution was inspired by this tutorial: https://rexebin.medium.com/use-material-ui-pickers-with-react-hook-form-3ed5d24d6afc\n    const TimeInputs = (params) => {\n        let name = \"Time \" + params.counter;\n\n        const [time, setTime] = useState(new Date(\"2000-01-01T00:00:00\"));\n        const value = getValues(name);\n\n        useEffect(() => {\n            register(name);\n        }, [name]);\n        useEffect(() => {\n            setTime(value || null);\n        }, [setTime, value]);\n\n        return (\n            <Controller\n                control={control}\n                name={name}\n                defaultValue={time}\n                render={({field: {ref, ...field}}) => (\n                    <TimePicker\n                        {...field}\n                        keepMounted={true}\n                        label={name}\n                        value={time}\n                        onChange={(time) => {\n                            setValue(name, time, {shouldValidate: true, shouldDirty: true});\n                            setTime(time);\n                        }}\n                        renderInput={(params) =>\n                            <TextField\n                                id={name}\n                                name={name}\n                                inputRef={ref}\n                                {...params}\n                            />\n                        }\n                    />\n                )}\n            />\n        );\n    };\n\n    const allTimes = [];\n\n    for (let i = 0; i < getNumber(); i++) {\n        allTimes.push(<TimeInputs counter={i + 1} key={\"TimeInputs\" + i}/>);\n    }\n\n    let count = 0;\n\n    const onSubmit = (data) => {\n        console.log(\"hi\");\n        console.log(count);\n        console.log(data);\n\n        if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\n            localStorage.setItem(\"reminders\", JSON.stringify([{\n                id: 0,\n                medication: \"\",\n                dose: \"\",\n                days: [],\n                timesPerDay: 0,\n                times: [],\n                submitted: false\n            }]));\n        }\n\n        let reminderList = localStorage.getItem(\"reminders\");\n        let parsed = JSON.parse(reminderList);\n        const mostRecent = parsed[parsed.length - 1];\n        const times = [];\n\n        Object.values(data).forEach((value) => {\n            let val = value.toString();\n            times.push(val.slice(16, 24));\n        });\n\n        // mostRecent.submitted = true;\n        mostRecent.times = times;\n        parsed[parsed.length - 1] = mostRecent;\n\n        console.log(mostRecent)\n\n        localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n\n        count++\n    };\n\n    const {control, handleSubmit, setValue, register, getValues} = useForm();\n\n    return (\n        <Container>\n            <Stack spacing={2} sx={stackSx}>\n                <Breadcrumbs\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\n                    aria-label=\"breadcrumb\"\n                >\n                    {breadcrumbs}\n                </Breadcrumbs>\n            </Stack>\n\n            <FormAndConfirmation/>\n\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}