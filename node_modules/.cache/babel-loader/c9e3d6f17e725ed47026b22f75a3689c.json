{"ast":null,"code":"import _objectSpread from\"C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useForm}from\"react-hook-form\";import{yupResolver}from\"@hookform/resolvers/yup\";import*as Yup from\"yup\";// Material UI Components\nimport Box from\"@mui/material/Box\";import Button from\"@mui/material/Button\";import Container from\"@mui/material/Container\";import Typography from\"@mui/material/Typography\";import Autocomplete from\"@mui/material/Autocomplete\";import TextField from\"@mui/material/TextField\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initDaysOptions=[{label:\"Every day\",disabled:false},{label:\"Sunday\",disabled:false},{label:\"Monday\",disabled:false},{label:\"Tuesday\",disabled:false},{label:\"Wednesday\",disabled:false},{label:\"Thursday\",disabled:false},{label:\"Friday\",disabled:false},{label:\"Saturday\",disabled:false}];var medicationSuggestions=[{label:\"Lisinopril\"},{label:\"Valsartan\"}];export default function RegisterReminder(){var _errors$medication,_errors$daysOfWeek;// This declares the state variables\nvar _useState=useState(initDaysOptions),_useState2=_slicedToArray(_useState,2),daysOfWeekSuggestions=_useState2[0],setOptions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];//Styles and SX\nvar boxSx={\"& .MuiTextField-root\":{mb:2.5,width:\"100%\"},bgcolor:\"background.paper\",ml:\"50px\",mr:\"50px\"};var buttonSx={fontSize:\"17px\",height:\"5.75ch\",width:\"100%\"};var errorSx={mb:2.5};// Form validation using Yup\nvar validationSchema=Yup.object().shape({medication:Yup.string().required(\"Medication is required\"),daysOfWeek:Yup.mixed().required(\"Days of the week are required\")});// React Hook Form formState and useForm\nvar _useForm=useForm({resolver:yupResolver(validationSchema)}),errors=_useForm.formState.errors,handleSubmit=_useForm.handleSubmit,register=_useForm.register;// This makes sure the user can't choose both \"Every day\" and days of the week, but they can still manually choose every day\nvar onOptionsChange=function onOptionsChange(event,valueArr){setSelected(valueArr);if(valueArr.length===0){var resetOptions=_toConsumableArray(daysOfWeekSuggestions).map(function(opt){opt.disabled=false;return opt;});setOptions(resetOptions);}else{var everyDaySelected=valueArr.find(function(item){return item.label===\"Every day\";});var notEveryDaySelected=valueArr.find(function(item){return item.label!==\"Every day\";});if(everyDaySelected){var updatedOptions=_toConsumableArray(daysOfWeekSuggestions).map(function(opt){opt.disabled=opt.label!==\"Every day\";return opt;});setOptions(updatedOptions);}if(notEveryDaySelected){var _updatedOptions=_toConsumableArray(daysOfWeekSuggestions).map(function(opt){opt.disabled=opt.label===\"Every day\";return opt;});setOptions(_updatedOptions);}}};// Form onSubmit\nvar onSubmit=function onSubmit(data){console.log(data);};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(Box,{sx:boxSx,children:[/*#__PURE__*/_jsx(Autocomplete,{disableClearable:true,disablePortal:true,id:\"medication-autocomplete\",options:medicationSuggestions,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({required:true,error:errors.medication?true:false,id:\"medication\",label:\"Medication\",name:\"medication\",type:\"search\"},params),register(\"medication\")));}}),/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:errorSx,variant:\"inherit\",children:(_errors$medication=errors.medication)===null||_errors$medication===void 0?void 0:_errors$medication.message}),/*#__PURE__*/_jsx(Autocomplete,{disableClearable:true,disablePortal:true,filterSelectedOptions:true,multiple:true,getOptionDisabled:function getOptionDisabled(option){return option.disabled?true:false;},getOptionLabel:function getOptionLabel(option){return option.label;},id:\"days-autocomplete\",onChange:function onChange(event,value){return onOptionsChange(event,value);},options:daysOfWeekSuggestions,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({required:true,error:errors.daysOfWeek?true:false,id:\"daysOfWeek\",label:\"Days of the week\",name:\"daysOfWeek\",type:\"search\"},params),register(\"daysOfWeek\")));},value:selected}),/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:errorSx,variant:\"inherit\",children:(_errors$daysOfWeek=errors.daysOfWeek)===null||_errors$daysOfWeek===void 0?void 0:_errors$daysOfWeek.message}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit(onSubmit),size:\"large\",sx:buttonSx,type:\"submit\",variant:\"contained\",children:\"Submit\"})]})})});}","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/RegisterReminder.js"],"names":["React","useState","useForm","yupResolver","Yup","Box","Button","Container","Typography","Autocomplete","TextField","initDaysOptions","label","disabled","medicationSuggestions","RegisterReminder","daysOfWeekSuggestions","setOptions","selected","setSelected","boxSx","mb","width","bgcolor","ml","mr","buttonSx","fontSize","height","errorSx","validationSchema","object","shape","medication","string","required","daysOfWeek","mixed","resolver","errors","formState","handleSubmit","register","onOptionsChange","event","valueArr","length","resetOptions","map","opt","everyDaySelected","find","item","notEveryDaySelected","updatedOptions","onSubmit","data","console","log","params","message","option","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst initDaysOptions = [\r\n    {label: \"Every day\", disabled: false},\r\n    {label: \"Sunday\", disabled: false},\r\n    {label: \"Monday\", disabled: false},\r\n    {label: \"Tuesday\", disabled: false},\r\n    {label: \"Wednesday\", disabled: false},\r\n    {label: \"Thursday\", disabled: false},\r\n    {label: \"Friday\", disabled: false},\r\n    {label: \"Saturday\", disabled: false}\r\n];\r\n\r\nconst medicationSuggestions = [\r\n    {label: \"Lisinopril\"},\r\n    {label: \"Valsartan\"}\r\n];\r\n\r\nexport default function RegisterReminder() {\r\n    // This declares the state variables\r\n    const [daysOfWeekSuggestions, setOptions] = useState(initDaysOptions);\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    //Styles and SX\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 2.5, width: \"100%\"},\r\n        bgcolor: \"background.paper\",\r\n        ml: \"50px\",\r\n        mr: \"50px\"\r\n    };\r\n\r\n    const buttonSx = {\r\n        fontSize: \"17px\",\r\n        height: \"5.75ch\",\r\n        width: \"100%\"\r\n    };\r\n\r\n    const errorSx = {\r\n        mb: 2.5\r\n    };\r\n\r\n    // Form validation using Yup\r\n    const validationSchema = Yup.object().shape({\r\n        medication: Yup.string()\r\n            .required(\"Medication is required\"),\r\n        daysOfWeek: Yup.mixed()\r\n            .required(\"Days of the week are required\")\r\n    });\r\n\r\n    // React Hook Form formState and useForm\r\n    const {\r\n        formState: {errors},\r\n        handleSubmit,\r\n        register\r\n    } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    // This makes sure the user can't choose both \"Every day\" and days of the week, but they can still manually choose every day\r\n    const onOptionsChange = (event, valueArr) => {\r\n        setSelected(valueArr);\r\n        if (valueArr.length === 0) {\r\n            const resetOptions = [...daysOfWeekSuggestions].map((opt) => {\r\n                opt.disabled = false;\r\n                return opt;\r\n            });\r\n            setOptions(resetOptions);\r\n        } else {\r\n            const everyDaySelected = valueArr.find(\r\n                (item) => item.label === \"Every day\"\r\n            );\r\n\r\n            const notEveryDaySelected = valueArr.find(\r\n                (item) => item.label !== \"Every day\"\r\n            );\r\n\r\n            if (everyDaySelected) {\r\n                const updatedOptions = [...daysOfWeekSuggestions].map((opt) => {\r\n                    opt.disabled = opt.label !== \"Every day\";\r\n                    return opt;\r\n                });\r\n                setOptions(updatedOptions);\r\n            }\r\n\r\n            if (notEveryDaySelected) {\r\n                const updatedOptions = [...daysOfWeekSuggestions].map((opt) => {\r\n                    opt.disabled = opt.label === \"Every day\";\r\n                    return opt;\r\n                });\r\n                setOptions(updatedOptions);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Form onSubmit\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <form>\r\n                <Box\r\n                    sx={boxSx}\r\n                >\r\n\r\n                    <Autocomplete\r\n                        disableClearable\r\n                        disablePortal\r\n                        id=\"medication-autocomplete\"\r\n                        options={medicationSuggestions}\r\n                        renderInput={(params) => <TextField\r\n                            required\r\n                            error={errors.medication ? true : false}\r\n                            id=\"medication\"\r\n                            label=\"Medication\"\r\n                            name=\"medication\"\r\n                            type=\"search\"\r\n                            {...params}\r\n                            {...register(\"medication\")}\r\n                        />}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.medication?.message}\r\n                    </Typography>\r\n\r\n                    <Autocomplete\r\n                        disableClearable\r\n                        disablePortal\r\n                        filterSelectedOptions\r\n                        multiple\r\n                        getOptionDisabled={(option) => option.disabled ? true : false}\r\n                        getOptionLabel={(option) => option.label}\r\n                        id=\"days-autocomplete\"\r\n                        onChange={(event, value) => onOptionsChange(event, value)}\r\n                        options={daysOfWeekSuggestions}\r\n                        renderInput={(params) => <TextField\r\n                            required\r\n                            error={errors.daysOfWeek ? true : false}\r\n                            id=\"daysOfWeek\"\r\n                            label=\"Days of the week\"\r\n                            name=\"daysOfWeek\"\r\n                            type=\"search\"\r\n                            {...params}\r\n                            {...register(\"daysOfWeek\")}\r\n                        />}\r\n                        value={selected}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.daysOfWeek?.message}\r\n                    </Typography>\r\n\r\n                    <Button onClick={handleSubmit(onSubmit)} size=\"large\" sx={buttonSx} type=\"submit\"\r\n                            variant=\"contained\">Submit</Button>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}