{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\React-Medi-App\\\\src\\\\Components\\\\MedicationInput.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst medications = {\n  \"Lisinopril\": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\n  \"Valsartan\": [80, 120, 160, 200, 240, 280, 320]\n};\nexport default function MedicationInput() {\n  _s();\n\n  var _errors$medication, _errors$dose;\n\n  //Styles and SX\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 2.5,\n      width: \"100%\"\n    },\n    bgcolor: \"background.paper\",\n    ml: \"50px\",\n    mr: \"50px\"\n  };\n  const buttonSx = {\n    fontSize: \"17px\",\n    height: \"5.75ch\",\n    width: \"100%\"\n  };\n  const errorSx = {\n    mb: 2.5\n  }; // Form validation using Yup\n\n  const validationSchema = Yup.object().shape({\n    medication: Yup.string().required(\"Medication is required\"),\n    dose: Yup.string().required(\"Dose is required\")\n  }); // Form onSubmit\n\n  const onSubmit = data => {\n    // This is implemented so the error UI for an invalid username/password can be displayed\n    console.log(data);\n  };\n\n  const {\n    formState: {\n      errors\n    },\n    handleSubmit,\n    register\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          error: errors.medication ? true : false,\n          id: \"medication\",\n          label: \"Medication\",\n          name: \"medication\",\n          type: \"search\",\n          ...register(\"medication\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: errorSx,\n          variant: \"inherit\",\n          children: (_errors$medication = errors.medication) === null || _errors$medication === void 0 ? void 0 : _errors$medication.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          error: errors.dose ? true : false,\n          id: \"dose\",\n          label: \"Dose\",\n          name: \"dose\",\n          type: \"numeric\",\n          ...register(\"dose\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: errorSx,\n          variant: \"inherit\",\n          children: (_errors$dose = errors.dose) === null || _errors$dose === void 0 ? void 0 : _errors$dose.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit(onSubmit),\n          size: \"large\",\n          sx: buttonSx,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MedicationInput, \"asp/QsGPFqJqCHTD73pn9sNkh4Y=\", false, function () {\n  return [useForm];\n});\n\n_c = MedicationInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicationInput\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/MedicationInput.js"],"names":["React","useForm","yupResolver","Yup","Box","Button","Container","Typography","TextField","PropTypes","Autosuggest","match","parse","medications","MedicationInput","boxSx","mb","width","bgcolor","ml","mr","buttonSx","fontSize","height","errorSx","validationSchema","object","shape","medication","string","required","dose","onSubmit","data","console","log","formState","errors","handleSubmit","register","resolver","message"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\n\r\nconst medications = {\r\n    \"Lisinopril\": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\r\n    \"Valsartan\": [80, 120, 160, 200, 240, 280, 320]\r\n};\r\n\r\nexport default function MedicationInput() {\r\n    //Styles and SX\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 2.5, width: \"100%\"},\r\n        bgcolor: \"background.paper\",\r\n        ml: \"50px\",\r\n        mr: \"50px\"\r\n    };\r\n\r\n    const buttonSx = {\r\n        fontSize: \"17px\",\r\n        height: \"5.75ch\",\r\n        width: \"100%\"\r\n    };\r\n\r\n    const errorSx = {\r\n        mb: 2.5\r\n    };\r\n\r\n    // Form validation using Yup\r\n    const validationSchema = Yup.object().shape({\r\n        medication: Yup.string()\r\n            .required(\"Medication is required\"),\r\n        dose: Yup.string()\r\n            .required(\"Dose is required\")\r\n    });\r\n\r\n    // Form onSubmit\r\n    const onSubmit = (data) => {\r\n        // This is implemented so the error UI for an invalid username/password can be displayed\r\n        console.log(data);\r\n    };\r\n\r\n    const {\r\n        formState: {errors},\r\n        handleSubmit,\r\n        register\r\n    } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <form>\r\n                <Box\r\n                    sx={boxSx}\r\n                >\r\n                    <TextField\r\n                        required\r\n                        error={errors.medication ? true : false}\r\n                        id=\"medication\"\r\n                        label=\"Medication\"\r\n                        name=\"medication\"\r\n                        type=\"search\"\r\n                        {...register(\"medication\")}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.medication?.message}\r\n                    </Typography>\r\n\r\n                    <TextField\r\n                        required\r\n                        error={errors.dose ? true : false}\r\n                        id=\"dose\"\r\n                        label=\"Dose\"\r\n                        name=\"dose\"\r\n                        type=\"numeric\"\r\n                        {...register(\"dose\")}\r\n                    />\r\n\r\n                    <Typography color=\"error\" sx={errorSx} variant=\"inherit\">\r\n                        {errors.dose?.message}\r\n                    </Typography>\r\n\r\n                    <Button onClick={handleSubmit(onSubmit)} size=\"large\" sx={buttonSx} type=\"submit\"\r\n                            variant=\"contained\">Submit</Button>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}