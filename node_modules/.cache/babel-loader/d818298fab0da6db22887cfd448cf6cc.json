{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Add Reminder\\\\AddReminder2.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\"; // Custom Components\n\nimport DaysInput from \"../Inputs/DaysInput.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  daysOfWeek: Yup.array().of(Yup.object().shape({\n    label: Yup.string(),\n    disabled: Yup.boolean()\n  })).min(1, \"Days of the week are required\")\n});\nexport default function AddReminder2() {\n  _s();\n\n  // Styles\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  };\n  const containerSx = {\n    mb: 5,\n    mt: 5,\n    pl: 5,\n    pr: 5,\n    width: \"100%\"\n  };\n  const iconButtonSx = {\n    fontSize: 75,\n    ml: 1.5,\n    mr: 1.5\n  };\n  const linkSx = {\n    color: \"#1976d2\"\n  };\n  const stackSx = {\n    mb: 5\n  };\n  const typographySx = {\n    mb: 5,\n    textAlign: \"center\"\n  };\n  const breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder\",\n    sx: linkSx,\n    children: \"Name & Dose\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"text.primary\",\n    children: \"Days of Week\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this)];\n  const {\n    control,\n    handleSubmit,\n    formState\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    // This saves the reminder into a local session storage for the purposes of displaying the reminders on another page.\n    // If I were going to create a deployed version of the app, I would create a DB and save the data there.\n    // I also set this condition --> localStorage.getItem(\"reminders\").length < 2 --> because if the array is empty, the length === 2\n    if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\n      localStorage.setItem(\"reminders\", JSON.stringify([{\n        id: 0,\n        medication: \"\",\n        dose: \"\",\n        days: [],\n        timesPerDay: 0,\n        time: [],\n        submitted: false\n      }]));\n    }\n\n    const reminderList = localStorage.getItem(\"reminders\");\n    const parsed = JSON.parse(reminderList);\n    const mostRecent = parsed[parsed.length - 1];\n    const daysArr = []; // The data for the days is stored in an object that contains a key, daysOfWeek. This key's value is an array of objects in the same format as initOptions\n\n    for (const index of data.daysOfWeek) {\n      daysArr.push(index.label);\n    }\n\n    mostRecent.days = daysArr;\n    parsed[parsed.length - 1] = mostRecent;\n    localStorage.setItem(\"reminders\", JSON.stringify(parsed));\n    fetch(\"/add-reminder/days/nums\").then(() => {\n      window.location = \"/add-reminder/days/nums\";\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: containerSx,\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: typographySx,\n      variant: \"h4\",\n      children: \"Which days of the week do you take your medication?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(DaysInput, {\n          control: control,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            href: \"/add-reminder\",\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !formState.isValid,\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddReminder2, \"ptnh6LWltQzSOX2bhONhAWPKAtM=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReminder2;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder2\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Add Reminder/AddReminder2.js"],"names":["React","useForm","yupResolver","Yup","ArrowBackIcon","ArrowForwardIcon","Box","Breadcrumbs","Button","Container","Link","NavigateNextIcon","Stack","Typography","DaysInput","validationSchema","object","shape","daysOfWeek","array","of","label","string","disabled","boolean","min","AddReminder2","boxSx","mb","width","alignItems","display","flexDirection","containerSx","mt","pl","pr","iconButtonSx","fontSize","ml","mr","linkSx","color","stackSx","typographySx","textAlign","breadcrumbs","control","handleSubmit","formState","mode","resolver","onSubmit","data","localStorage","getItem","length","setItem","JSON","stringify","id","medication","dose","days","timesPerDay","time","submitted","reminderList","parsed","parse","mostRecent","daysArr","index","push","fetch","then","window","location","isValid"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n// Custom Components\r\nimport DaysInput from \"../Inputs/DaysInput.js\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    daysOfWeek: Yup.array()\r\n        .of(\r\n            Yup.object().shape({\r\n                label: Yup.string(),\r\n                disabled: Yup.boolean()\r\n            })\r\n        )\r\n        .min(1, \"Days of the week are required\")\r\n});\r\n\r\nexport default function AddReminder2() {\r\n    // Styles\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    };\r\n\r\n    const containerSx = {\r\n        mb: 5,\r\n        mt: 5,\r\n        pl: 5,\r\n        pr: 5,\r\n        width: \"100%\"\r\n    };\r\n\r\n    const iconButtonSx = {\r\n        fontSize: 75,\r\n        ml: 1.5,\r\n        mr: 1.5\r\n    };\r\n\r\n    const linkSx = {\r\n        color: \"#1976d2\"\r\n    };\r\n\r\n    const stackSx = {\r\n        mb: 5\r\n    };\r\n\r\n    const typographySx = {\r\n        mb: 5,\r\n        textAlign: \"center\"\r\n    };\r\n\r\n    const breadcrumbs = [\r\n        <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\r\n            Name & Dose\r\n        </Link>,\r\n        <Typography key=\"2\" color=\"text.primary\">\r\n            Days of Week\r\n        </Typography>\r\n    ];\r\n\r\n    const {control, handleSubmit, formState} = useForm({\r\n        mode: \"onChange\",\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        // This saves the reminder into a local session storage for the purposes of displaying the reminders on another page.\r\n        // If I were going to create a deployed version of the app, I would create a DB and save the data there.\r\n        // I also set this condition --> localStorage.getItem(\"reminders\").length < 2 --> because if the array is empty, the length === 2\r\n        if (localStorage.getItem(\"reminders\") === null || localStorage.getItem(\"reminders\").length < 3) {\r\n            localStorage.setItem(\"reminders\", JSON.stringify([{\r\n                id: 0,\r\n                medication: \"\",\r\n                dose: \"\",\r\n                days: [],\r\n                timesPerDay: 0,\r\n                time: [],\r\n                submitted: false\r\n            }]));\r\n        }\r\n\r\n        const reminderList = localStorage.getItem(\"reminders\");\r\n        const parsed = JSON.parse(reminderList);\r\n        const mostRecent = parsed[parsed.length - 1];\r\n        const daysArr = [];\r\n\r\n        // The data for the days is stored in an object that contains a key, daysOfWeek. This key's value is an array of objects in the same format as initOptions\r\n        for (const index of data.daysOfWeek) {\r\n            daysArr.push(index.label);\r\n        }\r\n\r\n        mostRecent.days = daysArr;\r\n        parsed[parsed.length - 1] = mostRecent;\r\n        localStorage.setItem(\"reminders\", JSON.stringify(parsed));\r\n\r\n        fetch(\"/add-reminder/days/nums\")\r\n            .then(() => {\r\n                window.location = \"/add-reminder/days/nums\";\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Container sx={containerSx}>\r\n            <Stack spacing={2} sx={stackSx}>\r\n                <Breadcrumbs\r\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\r\n                    aria-label=\"breadcrumb\"\r\n                >\r\n                    {breadcrumbs}\r\n                </Breadcrumbs>\r\n            </Stack>\r\n\r\n            <Typography sx={typographySx} variant=\"h4\">\r\n                Which days of the week do you take your medication?\r\n            </Typography>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <Box sx={boxSx}>\r\n                    <DaysInput control={control} variant={\"outlined\"}/>\r\n\r\n                    <Box>\r\n                        <Button href=\"/add-reminder\"><ArrowBackIcon sx={iconButtonSx}/></Button>\r\n\r\n                        <Button disabled={!formState.isValid}\r\n                                type=\"submit\"><ArrowForwardIcon sx={iconButtonSx}/></Button>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}