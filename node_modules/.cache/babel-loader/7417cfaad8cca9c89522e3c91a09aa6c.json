{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\React-Medi-App\\\\src\\\\Components\\\\RegisterReminder.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeekSuggestions = [{\n  label: \"Monday\"\n}, {\n  label: \"Tuesday\"\n}, {\n  label: \"Wednesday\"\n}, {\n  label: \"Thursday\"\n}, {\n  label: \"Friday\"\n}, {\n  label: \"Saturday\"\n}, {\n  label: \"Sunday\"\n}];\nconst medicationSuggestions = [{\n  label: \"Lisinopril\"\n}, {\n  label: \"Valsartan\"\n}];\nconst validationSchema = Yup.object().shape({\n  medication: Yup.string().required(\"Medication is required\"),\n  daysOfWeek: Yup.array().of(Yup.object().shape({\n    value: Yup.string(),\n    label: Yup.string()\n  })).min(1, \"Days of the week are required\")\n});\nexport default function RegisterReminder() {\n  _s();\n\n  //Styles and SX\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    bgcolor: \"background.paper\",\n    ml: \"50px\",\n    mr: \"50px\"\n  };\n  const buttonSx = {\n    fontSize: \"17px\",\n    height: \"5.75ch\",\n    width: \"100%\"\n  };\n  const {\n    handleSubmit,\n    control\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"medication\",\n          control: control,\n          defaultValue: \"\",\n          render: _ref => {\n            let {\n              field: {\n                ref,\n                ...field\n              },\n              fieldState: {\n                error\n              }\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(Autocomplete, { ...field,\n              disableClearable: true,\n              getOptionLabel: option => option.label,\n              isOptionEqualToValue: (option, value) => option.id === value.id,\n              id: \"medication-autocomplete\",\n              onChange: (event, value) => field.onChange(value.label),\n              options: medicationSuggestions,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                error: !!error,\n                helperText: error === null || error === void 0 ? void 0 : error.message,\n                id: \"medication\",\n                label: \"Medication\",\n                name: \"medication\",\n                type: \"search\",\n                inputRef: ref,\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"daysOfWeek\",\n          control: control,\n          defaultValue: [],\n          render: _ref2 => {\n            let {\n              field: {\n                ref,\n                ...field\n              },\n              fieldState: {\n                error\n              }\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Autocomplete, { ...field,\n              disableClearable: true,\n              disablePortal: true,\n              filterSelectedOptions: true,\n              multiple: true,\n              getOptionDisabled: option => option.disabled,\n              getOptionLabel: option => option.label,\n              id: \"days-autocomplete\",\n              onChange: (event, value) => field.onChange(value),\n              options: daysOfWeekSuggestions,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                error: !!error,\n                helperText: error === null || error === void 0 ? void 0 : error.message,\n                id: \"daysOfWeek\",\n                label: \"Days of the week\",\n                name: \"daysOfWeek\",\n                type: \"search\",\n                inputRef: ref,\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          sx: buttonSx,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterReminder, \"soMKfvmqTpHJZVRNvxkH6m6ibEE=\", false, function () {\n  return [useForm];\n});\n\n_c = RegisterReminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterReminder\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/RegisterReminder.js"],"names":["React","useForm","Controller","yupResolver","Yup","Box","Button","Container","Autocomplete","TextField","daysOfWeekSuggestions","label","medicationSuggestions","validationSchema","object","shape","medication","string","required","daysOfWeek","array","of","value","min","RegisterReminder","boxSx","mb","width","bgcolor","ml","mr","buttonSx","fontSize","height","handleSubmit","control","resolver","onSubmit","data","console","log","field","ref","fieldState","error","option","id","event","onChange","params","message","disabled"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {useForm, Controller} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\n\r\nconst daysOfWeekSuggestions = [\r\n    {label: \"Monday\"},\r\n    {label: \"Tuesday\"},\r\n    {label: \"Wednesday\"},\r\n    {label: \"Thursday\"},\r\n    {label: \"Friday\"},\r\n    {label: \"Saturday\"},\r\n    {label: \"Sunday\"}\r\n];\r\n\r\nconst medicationSuggestions = [\r\n    {label: \"Lisinopril\"},\r\n    {label: \"Valsartan\"}\r\n];\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    medication: Yup.string()\r\n        .required(\"Medication is required\"),\r\n    daysOfWeek: Yup.array()\r\n        .of(\r\n            Yup.object().shape({\r\n                value: Yup.string(),\r\n                label: Yup.string()\r\n            })\r\n        )\r\n        .min(1, \"Days of the week are required\")\r\n});\r\n\r\nexport default function RegisterReminder() {\r\n    //Styles and SX\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\r\n        bgcolor: \"background.paper\",\r\n        ml: \"50px\",\r\n        mr: \"50px\"\r\n    };\r\n\r\n    const buttonSx = {\r\n        fontSize: \"17px\",\r\n        height: \"5.75ch\",\r\n        width: \"100%\"\r\n    };\r\n\r\n    const {handleSubmit, control} = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <Box\r\n                    sx={boxSx}\r\n                >\r\n                    <Controller\r\n                        name=\"medication\"\r\n                        control={control}\r\n                        defaultValue=\"\"\r\n                        render={({field: {ref, ...field}, fieldState: {error}}) => (\r\n                            <Autocomplete\r\n                                {...field}\r\n                                disableClearable\r\n                                getOptionLabel={(option) => option.label}\r\n                                isOptionEqualToValue={(option, value) => option.id === value.id}\r\n                                id=\"medication-autocomplete\"\r\n                                onChange={(event, value) => field.onChange(value.label)}\r\n                                options={medicationSuggestions}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        required\r\n                                        error={!!error}\r\n                                        helperText={error?.message}\r\n                                        id=\"medication\"\r\n                                        label=\"Medication\"\r\n                                        name=\"medication\"\r\n                                        type=\"search\"\r\n                                        inputRef={ref}\r\n                                        {...params}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Controller\r\n                        name=\"daysOfWeek\"\r\n                        control={control}\r\n                        defaultValue={[]}\r\n                        render={({field: {ref, ...field}, fieldState: {error}}) => (\r\n                            <Autocomplete\r\n                                {...field}\r\n                                disableClearable\r\n                                disablePortal\r\n                                filterSelectedOptions\r\n                                multiple\r\n                                getOptionDisabled={(option) => option.disabled}\r\n                                getOptionLabel={(option) => option.label}\r\n                                id=\"days-autocomplete\"\r\n                                onChange={(event, value) => field.onChange(value)}\r\n                                options={daysOfWeekSuggestions}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        required\r\n                                        error={!!error}\r\n                                        helperText={error?.message}\r\n                                        id=\"daysOfWeek\"\r\n                                        label=\"Days of the week\"\r\n                                        name=\"daysOfWeek\"\r\n                                        type=\"search\"\r\n                                        inputRef={ref}\r\n                                        {...params}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Button size=\"large\" sx={buttonSx} type=\"submit\" variant=\"contained\">Submit</Button>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}