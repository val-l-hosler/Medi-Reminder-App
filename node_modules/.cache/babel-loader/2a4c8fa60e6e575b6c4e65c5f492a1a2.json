{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\React-Medi-App\\\\src\\\\Components\\\\AddReminder3.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\"; // Material UI Components\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport Box from \"@mui/material/Box\";\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timesSuggestions = [{\n  label: \"1\"\n}, {\n  label: \"2\"\n}, {\n  label: \"3\"\n}, {\n  label: \"4\"\n}, {\n  label: \"5\"\n}, {\n  label: \"6\"\n}, {\n  label: \"7\"\n}, {\n  label: \"8\"\n}, {\n  label: \"9\"\n}, {\n  label: \"10\"\n}, {\n  label: \"More than 10\"\n}]; // An outline of this solution was provided to me here: https://stackoverflow.com/questions/69878586/how-can-i-validate-an-autocomplete-multiple-textfield-using-react-hook-form-and\n\nconst validationSchema = Yup.object().shape({\n  times: Yup.string().required(\"Times are required\")\n});\nexport default function AddReminder3() {\n  _s();\n\n  // Styles\n  const autoCompleteSx = {\n    width: \"100%\"\n  };\n  const boxSx = {\n    \"& .MuiTextField-root\": {\n      mb: 5,\n      width: \"100%\"\n    },\n    alignItems: \"center\",\n    bgcolor: \"background.paper\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    ml: \"50px\",\n    mr: \"50px\"\n  };\n  const iconButtonSx = {\n    fontSize: 75\n  };\n  const linkSx = {\n    color: \"#1976d2\"\n  };\n  const stackSx = {\n    mb: 10\n  };\n  const typographySx = {\n    mb: 5,\n    textAlign: \"center\"\n  };\n  const {\n    handleSubmit,\n    control,\n    formState\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const breadcrumbs = [/*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder\",\n    sx: linkSx,\n    children: \"Name & Dose\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"hover\",\n    color: \"inherit\",\n    href: \"/add-reminder/days\",\n    sx: linkSx,\n    children: \"Days of Week\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"text.primary\",\n    children: \"# of Times\"\n  }, \"3\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this)]; // I added these because without it, all the autofill elements were showing up as selected\n\n  const [timesValue, setTimesValue] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: stackSx,\n      children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        separator: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 32\n        }, this),\n        \"aria-label\": \"breadcrumb\",\n        children: breadcrumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: typographySx,\n          variant: \"h4\",\n          children: \"How many times a day do you take your medicine?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"numTimes\",\n          control: control,\n          render: _ref => {\n            let {\n              field: {\n                ref,\n                ...field\n              },\n              fieldState: {\n                error\n              }\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(Autocomplete, { ...field,\n              autoHighlight: true,\n              disableClearable: true,\n              disablePortal: true,\n              isOptionEqualToValue: (option, value) => value.label === option.label,\n              id: \"medication-autocomplete\",\n              onChange: (event, value) => {\n                field.onChange(value.label);\n                setTimesValue(value);\n              },\n              options: timesSuggestions,\n              value: timesValue,\n              sx: autoCompleteSx,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                error: !!error,\n                helperText: error === null || error === void 0 ? void 0 : error.message,\n                id: \"numTimes\",\n                label: \"Number of Times\",\n                name: \"numTimes\",\n                type: \"search\",\n                inputRef: ref,\n                ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            href: \"/add-reminder/days\",\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !formState.isValid,\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              sx: iconButtonSx\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddReminder3, \"C9T+xqvXHFN/xaCJvqeLMD8OHE0=\", false, function () {\n  return [useForm];\n});\n\n_c = AddReminder3;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder3\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/React-Medi-App/src/Components/AddReminder3.js"],"names":["useState","useForm","Controller","yupResolver","Yup","ArrowBackIcon","ArrowForwardIcon","Box","Breadcrumbs","Button","Container","Link","NavigateNextIcon","Stack","Typography","Autocomplete","TextField","timesSuggestions","label","validationSchema","object","shape","times","string","required","AddReminder3","autoCompleteSx","width","boxSx","mb","alignItems","bgcolor","display","flexDirection","ml","mr","iconButtonSx","fontSize","linkSx","color","stackSx","typographySx","textAlign","handleSubmit","control","formState","mode","resolver","onSubmit","data","console","log","breadcrumbs","timesValue","setTimesValue","field","ref","fieldState","error","option","value","event","onChange","params","message","isValid"],"mappings":"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","sourcesContent":["import {useState} from \"react\";\r\nimport {useForm, Controller} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\n\r\n// Material UI Components\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst timesSuggestions = [\r\n    {label: \"1\"},\r\n    {label: \"2\"},\r\n    {label: \"3\"},\r\n    {label: \"4\"},\r\n    {label: \"5\"},\r\n    {label: \"6\"},\r\n    {label: \"7\"},\r\n    {label: \"8\"},\r\n    {label: \"9\"},\r\n    {label: \"10\"},\r\n    {label: \"More than 10\"}\r\n];\r\n\r\n// An outline of this solution was provided to me here: https://stackoverflow.com/questions/69878586/how-can-i-validate-an-autocomplete-multiple-textfield-using-react-hook-form-and\r\nconst validationSchema = Yup.object().shape({\r\n    times: Yup.string()\r\n        .required(\"Times are required\")\r\n});\r\n\r\nexport default function AddReminder3() {\r\n    // Styles\r\n    const autoCompleteSx = {\r\n        width: \"100%\"\r\n    };\r\n\r\n    const boxSx = {\r\n        \"& .MuiTextField-root\": {mb: 5, width: \"100%\"},\r\n        alignItems: \"center\",\r\n        bgcolor: \"background.paper\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        ml: \"50px\",\r\n        mr: \"50px\",\r\n    };\r\n\r\n    const iconButtonSx = {\r\n        fontSize: 75\r\n    };\r\n\r\n    const linkSx = {\r\n        color: \"#1976d2\"\r\n    };\r\n\r\n    const stackSx = {\r\n        mb: 10\r\n    };\r\n\r\n    const typographySx = {\r\n        mb: 5,\r\n        textAlign: \"center\"\r\n    };\r\n\r\n    const {handleSubmit, control, formState} = useForm({\r\n        mode: \"onChange\",\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    };\r\n\r\n    const breadcrumbs = [\r\n        <Link key=\"1\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder\" sx={linkSx}>\r\n            Name & Dose\r\n        </Link>,\r\n        <Link key=\"2\" underline=\"hover\" color=\"inherit\" href=\"/add-reminder/days\" sx={linkSx}>\r\n            Days of Week\r\n        </Link>,\r\n        <Typography key=\"3\" color=\"text.primary\">\r\n            # of Times\r\n        </Typography>\r\n    ];\r\n\r\n    // I added these because without it, all the autofill elements were showing up as selected\r\n    const [timesValue, setTimesValue] = useState(null);\r\n\r\n    return (\r\n        <Container>\r\n            <Stack spacing={2} sx={stackSx}>\r\n                <Breadcrumbs\r\n                    separator={<NavigateNextIcon fontSize=\"small\"/>}\r\n                    aria-label=\"breadcrumb\"\r\n                >\r\n                    {breadcrumbs}\r\n                </Breadcrumbs>\r\n            </Stack>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <Box sx={boxSx}>\r\n                    <Typography sx={typographySx} variant=\"h4\">\r\n                        How many times a day do you take your medicine?\r\n                    </Typography>\r\n\r\n                    <Controller\r\n                        name=\"numTimes\"\r\n                        control={control}\r\n                        render={({field: {ref, ...field}, fieldState: {error}}) => (\r\n                            <Autocomplete\r\n                                {...field}\r\n                                autoHighlight\r\n                                disableClearable\r\n                                disablePortal\r\n                                isOptionEqualToValue={(option, value) => value.label === option.label}\r\n                                id=\"medication-autocomplete\"\r\n                                onChange={(event, value) => {\r\n                                    field.onChange(value.label);\r\n                                    setTimesValue(value);\r\n                                }}\r\n                                options={timesSuggestions}\r\n                                value={timesValue}\r\n                                sx={autoCompleteSx}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        required\r\n                                        error={!!error}\r\n                                        helperText={error?.message}\r\n                                        id=\"numTimes\"\r\n                                        label=\"Number of Times\"\r\n                                        name=\"numTimes\"\r\n                                        type=\"search\"\r\n                                        inputRef={ref}\r\n                                        {...params}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                    <Box>\r\n                        <Button href=\"/add-reminder/days\"><ArrowBackIcon sx={iconButtonSx}/></Button>\r\n\r\n                        <Button disabled={!formState.isValid}\r\n                                type=\"submit\"><ArrowForwardIcon sx={iconButtonSx}/></Button>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}