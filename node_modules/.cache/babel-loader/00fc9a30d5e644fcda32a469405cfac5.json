{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17246\\\\Desktop\\\\Github\\\\Val-l-hosler\\\\Medi-Reminder-App\\\\src\\\\Components\\\\Inputs\\\\DoseInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Controller } from \"react-hook-form\"; // Material UI Components\n\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\"; // Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst autoCompleteSx = {\n  width: \"100%\"\n};\nexport default function DoseInput(_ref) {\n  _s();\n\n  let {\n    control,\n    suggestions,\n    variant\n  } = _ref;\n  const [doseValue, setDoseValue] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: \"dose\",\n    control: control,\n    render: _ref2 => {\n      let {\n        field: {\n          ref,\n          ...field\n        },\n        fieldState: {\n          error\n        }\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Autocomplete, { ...field,\n        autoHighlight: true,\n        disableClearable: true,\n        isOptionEqualToValue: (option, value) => value.label === option.label,\n        id: \"dose-autocomplete\",\n        onChange: (_event, value) => {\n          field.onChange(value.label);\n          setDoseValue(value);\n        },\n        options: suggestions,\n        value: doseValue,\n        sx: autoCompleteSx,\n        renderInput: tfParams => /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          error: !!error,\n          helperText: error === null || error === void 0 ? void 0 : error.message,\n          id: \"dose\",\n          label: \"Dose\",\n          name: \"dose\",\n          type: \"search\",\n          variant: variant,\n          inputRef: ref,\n          ...tfParams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DoseInput, \"/ikIHS/U0fH5gowe5JUhXqRtQBg=\");\n\n_c = DoseInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoseInput\");","map":{"version":3,"sources":["C:/Users/17246/Desktop/Github/Val-l-hosler/Medi-Reminder-App/src/Components/Inputs/DoseInput.js"],"names":["useState","Controller","TextField","Autocomplete","autoCompleteSx","width","DoseInput","control","suggestions","variant","doseValue","setDoseValue","field","ref","fieldState","error","option","value","label","_event","onChange","tfParams","message"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,UAAR,QAAyB,iBAAzB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CAEA;;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAAvB;AAIA,eAAe,SAASC,SAAT,OAAoD;AAAA;;AAAA,MAAjC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA;AAAvB,GAAiC;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEA,sBACI,QAAC,UAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,OAAO,EAAEO,OAFb;AAGI,IAAA,MAAM,EAAE;AAAA,UAAC;AAACK,QAAAA,KAAK,EAAE;AAACC,UAAAA,GAAD;AAAM,aAAGD;AAAT,SAAR;AAAyBE,QAAAA,UAAU,EAAE;AAACC,UAAAA;AAAD;AAArC,OAAD;AAAA,0BACJ,QAAC,YAAD,OACQH,KADR;AAEI,QAAA,aAAa,MAFjB;AAGI,QAAA,gBAAgB,MAHpB;AAII,QAAA,oBAAoB,EAAE,CAACI,MAAD,EAASC,KAAT,KAAmBA,KAAK,CAACC,KAAN,KAAgBF,MAAM,CAACE,KAJpE;AAKI,QAAA,EAAE,EAAC,mBALP;AAMI,QAAA,QAAQ,EAAE,CAACC,MAAD,EAASF,KAAT,KAAmB;AACzBL,UAAAA,KAAK,CAACQ,QAAN,CAAeH,KAAK,CAACC,KAArB;AACAP,UAAAA,YAAY,CAACM,KAAD,CAAZ;AACH,SATL;AAUI,QAAA,OAAO,EAAET,WAVb;AAWI,QAAA,KAAK,EAAEE,SAXX;AAYI,QAAA,EAAE,EAAEN,cAZR;AAaI,QAAA,WAAW,EAAGiB,QAAD,iBACT,QAAC,SAAD;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,KAAK,EAAE,CAAC,CAACN,KAFb;AAGI,UAAA,UAAU,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEO,OAHvB;AAII,UAAA,EAAE,EAAC,MAJP;AAKI,UAAA,KAAK,EAAC,MALV;AAMI,UAAA,IAAI,EAAC,MANT;AAOI,UAAA,IAAI,EAAC,QAPT;AAQI,UAAA,OAAO,EAAEb,OARb;AASI,UAAA,QAAQ,EAAEI,GATd;AAAA,aAUQQ;AAVR;AAAA;AAAA;AAAA;AAAA;AAdR;AAAA;AAAA;AAAA;AAAA,cADI;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GAvCuBf,S;;KAAAA,S","sourcesContent":["import {useState} from \"react\";\r\nimport {Controller} from \"react-hook-form\";\r\n\r\n// Material UI Components\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\n// Styles\r\nconst autoCompleteSx = {\r\n    width: \"100%\"\r\n};\r\n\r\nexport default function DoseInput({control, suggestions, variant}) {\r\n    const [doseValue, setDoseValue] = useState(null);\r\n\r\n    return (\r\n        <Controller\r\n            name=\"dose\"\r\n            control={control}\r\n            render={({field: {ref, ...field}, fieldState: {error}}) => (\r\n                <Autocomplete\r\n                    {...field}\r\n                    autoHighlight\r\n                    disableClearable\r\n                    isOptionEqualToValue={(option, value) => value.label === option.label}\r\n                    id=\"dose-autocomplete\"\r\n                    onChange={(_event, value) => {\r\n                        field.onChange(value.label);\r\n                        setDoseValue(value);\r\n                    }}\r\n                    options={suggestions}\r\n                    value={doseValue}\r\n                    sx={autoCompleteSx}\r\n                    renderInput={(tfParams) => (\r\n                        <TextField\r\n                            required\r\n                            error={!!error}\r\n                            helperText={error?.message}\r\n                            id=\"dose\"\r\n                            label=\"Dose\"\r\n                            name=\"dose\"\r\n                            type=\"search\"\r\n                            variant={variant}\r\n                            inputRef={ref}\r\n                            {...tfParams}\r\n                        />\r\n                    )}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}